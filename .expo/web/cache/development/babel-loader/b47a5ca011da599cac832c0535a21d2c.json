{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nexport default function useAnimatedValue(initialValue) {\n  var lazyRef = React.useRef();\n  if (lazyRef.current === undefined) {\n    lazyRef.current = new Animated.Value(initialValue);\n  }\n  return lazyRef.current;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAGA,eAAe,SAASC,gBAAT,CAA0BC,YAA1B,EAAgD;EAC7D,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,EAAhB;EAEA,IAAID,OAAO,CAACE,OAAR,KAAoBC,SAAxB,EAAmC;IACjCH,OAAO,CAACE,OAAR,GAAkB,IAAIE,QAAQ,CAACC,KAAb,CAAmBN,YAAnB,CAAlB;EACD;EAED,OAAOC,OAAO,CAACE,OAAf;AACD","names":["React","useAnimatedValue","initialValue","lazyRef","useRef","current","undefined","Animated","Value"],"sources":["useAnimatedValue.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated } from 'react-native';\n\nexport default function useAnimatedValue(initialValue: number) {\n  const lazyRef = React.useRef<Animated.Value>();\n\n  if (lazyRef.current === undefined) {\n    lazyRef.current = new Animated.Value(initialValue);\n  }\n\n  return lazyRef.current as Animated.Value;\n}\n"]},"metadata":{},"sourceType":"module"}