{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { getWeekDates, sameMonth } from \"../dateutils\";\nimport { parseDate, toMarkingFormat } from \"../interface\";\nimport { getState } from \"../day-state-manager\";\nimport { extractComponentProps } from \"../componentUpdater\";\nimport styleConstructor from \"./style\";\nimport Calendar from \"../calendar\";\nimport Day from \"../calendar/day/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Week = function Week(props) {\n  var theme = props.theme,\n      current = props.current,\n      firstDay = props.firstDay,\n      hideExtraDays = props.hideExtraDays,\n      markedDates = props.markedDates,\n      onDayPress = props.onDayPress,\n      propsStyle = props.style;\n  var style = useRef(styleConstructor(theme));\n\n  var getWeek = function getWeek(date) {\n    if (date) {\n      return getWeekDates(date, firstDay);\n    }\n  };\n\n  var renderDay = function renderDay(day, id) {\n    var dayProps = extractComponentProps(Day, props);\n    var currXdate = parseDate(current);\n\n    if (current && hideExtraDays) {\n      if (!sameMonth(day, currXdate)) {\n        return _jsx(View, {\n          style: style.current.emptyDayContainer\n        }, id);\n      }\n    }\n\n    return _jsx(View, {\n      style: style.current.dayContainer,\n      children: _jsx(Day, _objectSpread(_objectSpread({}, dayProps), {}, {\n        date: toMarkingFormat(day),\n        state: getState(day, currXdate, props),\n        marking: markedDates == null ? void 0 : markedDates[toMarkingFormat(day)],\n        onPress: onDayPress,\n        onLongPress: onDayPress\n      }))\n    }, id);\n  };\n\n  var renderWeek = function renderWeek() {\n    var dates = getWeek(current);\n    var week = [];\n\n    if (dates) {\n      dates.forEach(function (day, id) {\n        week.push(renderDay(day, id));\n      }, _this);\n    }\n\n    return week;\n  };\n\n  return _jsx(View, {\n    style: style.current.container,\n    children: _jsx(View, {\n      style: [style.current.week, propsStyle],\n      children: renderWeek()\n    })\n  });\n};\n\nexport default Week;\nWeek.displayName = 'Week';\nWeek.propTypes = _objectSpread({}, Calendar.propTypes);","map":{"version":3,"names":["React","useRef","getWeekDates","sameMonth","parseDate","toMarkingFormat","getState","extractComponentProps","styleConstructor","Calendar","Day","Week","props","theme","current","firstDay","hideExtraDays","markedDates","onDayPress","propsStyle","style","getWeek","date","renderDay","day","id","dayProps","currXdate","emptyDayContainer","dayContainer","renderWeek","dates","week","forEach","push","container","displayName","propTypes"],"sources":["D:/repos/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/expandableCalendar/week.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { View } from 'react-native';\nimport { getWeekDates, sameMonth } from '../dateutils';\nimport { parseDate, toMarkingFormat } from '../interface';\nimport { getState } from '../day-state-manager';\nimport { extractComponentProps } from '../componentUpdater';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport Day from '../calendar/day/index';\nconst Week = (props) => {\n    const { theme, current, firstDay, hideExtraDays, markedDates, onDayPress, style: propsStyle } = props;\n    const style = useRef(styleConstructor(theme));\n    const getWeek = (date) => {\n        if (date) {\n            return getWeekDates(date, firstDay);\n        }\n    };\n    // renderWeekNumber (weekNumber) {\n    //   return <BasicDay key={`week-${weekNumber}`} theme={this.props.theme} marking={{disableTouchEvent: true}} state='disabled'>{weekNumber}</BasicDay>;\n    // }\n    const renderDay = (day, id) => {\n        const dayProps = extractComponentProps(Day, props);\n        const currXdate = parseDate(current);\n        // hide extra days\n        if (current && hideExtraDays) {\n            if (!sameMonth(day, currXdate)) {\n                return <View key={id} style={style.current.emptyDayContainer}/>;\n            }\n        }\n        return (<View style={style.current.dayContainer} key={id}>\n        <Day {...dayProps} date={toMarkingFormat(day)} state={getState(day, currXdate, props)} marking={markedDates?.[toMarkingFormat(day)]} onPress={onDayPress} onLongPress={onDayPress}/>\n      </View>);\n    };\n    const renderWeek = () => {\n        const dates = getWeek(current);\n        const week = [];\n        if (dates) {\n            dates.forEach((day, id) => {\n                week.push(renderDay(day, id));\n            }, this);\n        }\n        // if (this.props.showWeekNumbers) {\n        //   week.unshift(this.renderWeekNumber(item[item.length - 1].getWeek()));\n        // }\n        return week;\n    };\n    return (<View style={style.current.container}>\n      <View style={[style.current.week, propsStyle]}>{renderWeek()}</View>\n    </View>);\n};\nexport default Week;\nWeek.displayName = 'Week';\nWeek.propTypes = {\n    ...Calendar.propTypes\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}