{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport DialogInput from \"react-native-dialog-input\";\nimport \"../global\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 60;\nvar ICON_SIZE = 180;\nvar back = \"<\";\n\nfunction changeProfilePhoto() {\n  alert(\"TODO: Replace this alert with DialogInput\");\n  console.log(\"Button approach works!!\");\n}\n\nvar changeTheme = function changeTheme() {\n  alert(\"TODO: Change color pallete for primary colors.\");\n  console.log(\"App Theme button pressed.\");\n};\n\nfunction changeSuggestions() {}\n\nvar DATA = [{\n  id: \"3ac68afc-c605-48d3-a4f8-fbd91aa97f62\"\n}];\n\nvar Settings = function Settings() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      SetName = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dialogVisible = _useState4[0],\n      setDialogVisible = _useState4[1];\n\n  var _useState5 = useState(authUserProfilePic),\n      _useState6 = _slicedToArray(_useState5, 2),\n      profilePic = _useState6[0],\n      setProfilePic = _useState6[1];\n\n  var changeProfilePhoto = function changeProfilePhoto() {\n    setDialogVisible(true);\n    console.log(\"Profile Photo button pressed\");\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 1,\n        borderRadius: 8,\n        marginBottom: SPACING,\n        shadowColor: \"rgba(0,0,0,1)\",\n        shadowOffset: {\n          width: 0,\n          height: 10\n        },\n        paddingTop: SPACING,\n        shadowOpacity: 1,\n        shadowRadius: 10\n      },\n      children: [_jsx(View, {\n        style: {\n          width: \"100%\",\n          flex: 1\n        },\n        children: _jsxs(LinearGradient, {\n          colors: [\"rgba(30,55,108,0.1)\", \" rgba(30,55,108,0.2)\", \"rgba(30,55,108,0.1)\"],\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              changeProfilePhoto();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Change Profile Photo\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              changeTheme();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Change App Theme\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {},\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Suggestions?\"\n            })\n          })]\n        })\n      }), _jsx(View, {\n        children: _jsx(DialogInput, {\n          isDialogVisible: dialogVisible,\n          title: \"Change Profile Photo\",\n          message: \"Please paste image link.\\nLeave blank to reset.\",\n          hintInput: profilePic,\n          submitInput: function submitInput(inputText) {\n            console.log(\"Image link input is: \" + inputText);\n            var isHyperLink = new RegExp(\"^(http[s]?:\\\\/\\\\/(www\\\\.)?|ftp:\\\\/\\\\/(www\\\\.)?|www\\\\.){1}([0-9A-Za-z-\\\\.@:%_+~#=]+)+((\\\\.[a-zA-Z]{2,3})+)(/(.)*)?(\\\\?(.)*)?\");\n            var isImageFile = new RegExp(\"[^\\\\s]+(.*?)\\\\.(jpg|jpeg|png|gif|JPG|JPEG|PNG|GIF)$\");\n\n            if (inputText == \"\" || typeof inputText === \"undefined\") {\n              authUser.ref.update({\n                user_profile_photo: defaultProfilePic\n              });\n              authUserProfilePic = defaultProfilePic;\n              setProfilePic(authUserProfilePic);\n              setDialogVisible(false);\n            } else if (inputText === profilePic) {\n              alert(\"Please input a NEW image link.\");\n              console.log(\"Image link is identical to current link.\");\n            } else if (inputText.match(isHyperLink) && inputText.match(isImageFile)) {\n              console.log(\"Valid input received: \" + inputText);\n              authUser.ref.update({\n                user_profile_photo: inputText\n              });\n              authUserProfilePic = inputText;\n              setProfilePic(authUserProfilePic);\n              setDialogVisible(false);\n            } else {\n              console.log(\"Invalid link inserted: \" + inputText);\n              alert(\"Please enter a valid image link.\");\n            }\n          },\n          closeDialog: function closeDialog() {\n            setDialogVisible(false);\n          }\n        })\n      })]\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: {\n        zIndex: 1,\n        top: 0,\n        left: 10,\n        backgroundColor: \"rgba(255,255,255,0.1)\",\n        borderRadius: 7,\n        position: \"absolute\"\n      },\n      onPress: function onPress() {\n        navigation.navigate(\"Dashboard\");\n      },\n      children: _jsxs(Text, {\n        style: {\n          fontSize: 25,\n          color: \"rgba(0,0,0,0.7)\"\n        },\n        children: [\" \", back, \" \"]\n      })\n    }), _jsx(Image, {\n      style: {\n        width: ICON_SIZE,\n        height: ICON_SIZE,\n        resizeMode: \"cover\",\n        right: -10,\n        top: 10,\n        borderRadius: ICON_SIZE,\n        marginRight: SPACING / 2,\n        borderWidth: 3,\n        borderColor: \"rgba(0,0,0,0.1)\",\n        backgroundColor: \"rgba(0,0,0,0.4)\",\n        zIndex: 1,\n        shadowOffset: {\n          height: 10,\n          shadowColor: \"black\",\n          flex: 1\n        },\n        shadowOpacity: 1,\n        shadowRadius: 10\n      },\n      source: {\n        uri: \"https://i.imgur.com/3bOE2E6.jpeg\"\n      }\n    }), _jsx(View, {\n      style: {\n        flex: 2,\n        marginTop: 25,\n        width: \"100%\",\n        backgroundColor: \"rgba(30,55,108,0)\",\n        zIndex: 1\n      },\n      children: _jsx(FlatList, {\n        contentContainerStyle: {},\n        data: DATA,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })\n    }), _jsx(View, {\n      style: {\n        position: \"absolute\",\n        transform: [{\n          translateX: -15\n        }]\n      },\n      children: _jsx(Image, {\n        resizeMode: \"contain\",\n        source: require(\"./images/background6.png\"),\n        blurRadius: 0\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(28,56,107,255)\",\n    width: \"100%\",\n    zIndex: 1,\n    top: 70\n  },\n  linearGradient: {\n    height: AVATAR_SIZE,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: AVATAR_SIZE / 3,\n    fontWeight: \"700\",\n    textAlign: \"center\",\n    color: \" rgba(255,255,255,1)\",\n    backgroundColor: \"transparent\",\n    height: AVATAR_SIZE,\n    paddingTop: AVATAR_SIZE / 4\n  }\n});\nexport default Settings;",
  "map": {
    "version": 3,
    "names": [
      "React",
      "useState",
      "useNavigation",
      "LinearGradient",
      "DialogInput",
      "buttonHeight",
      "textPos",
      "SPACING",
      "AVATAR_SIZE",
      "ICON_SIZE",
      "back",
      "changeProfilePhoto",
      "alert",
      "console",
      "log",
      "changeTheme",
      "changeSuggestions",
      "DATA",
      "id",
      "Settings",
      "navigation",
      "name",
      "SetName",
      "dialogVisible",
      "setDialogVisible",
      "authUserProfilePic",
      "profilePic",
      "setProfilePic",
      "renderItem",
      "item",
      "flexDirection",
      "flex",
      "borderRadius",
      "marginBottom",
      "shadowColor",
      "shadowOffset",
      "width",
      "height",
      "paddingTop",
      "shadowOpacity",
      "shadowRadius",
      "styles",
      "buttonText",
      "inputText",
      "isHyperLink",
      "RegExp",
      "isImageFile",
      "authUser",
      "ref",
      "update",
      "user_profile_photo",
      "defaultProfilePic",
      "match",
      "container",
      "zIndex",
      "top",
      "left",
      "backgroundColor",
      "position",
      "navigate",
      "fontSize",
      "color",
      "resizeMode",
      "right",
      "marginRight",
      "borderWidth",
      "borderColor",
      "uri",
      "marginTop",
      "transform",
      "translateX",
      "require",
      "StyleSheet",
      "create",
      "justifyContent",
      "alignItems",
      "linearGradient",
      "paddingLeft",
      "paddingRight",
      "fontWeight",
      "textAlign"
    ],
    "sources": ["D:/repos/DFMPC-Student-Placement-System/Screens/Settings.js"],
    "sourcesContent": [
      "import React, { useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  Image,\r\n  Linking,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport { Alert } from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport DialogInput from \"react-native-dialog-input\";\r\nimport \"../global\";\r\n\r\nconst buttonHeight = 50;\r\nconst textPos = buttonHeight / 2;\r\nconst SPACING = 20;\r\nconst AVATAR_SIZE = 60;\r\nconst ICON_SIZE = 180;\r\nconst back = \"<\";\r\n\r\nfunction changeProfilePhoto() {\r\n  // change profile photo function\r\n  alert(\"TODO: Replace this alert with DialogInput\");\r\n  console.log(\"Button approach works!!\");\r\n}\r\nconst changeTheme = () => {\r\n  alert(\"TODO: Change color pallete for primary colors.\");\r\n  console.log(\"App Theme button pressed.\");\r\n};\r\nfunction changeSuggestions() {}\r\nconst DATA = [\r\n  {\r\n    id: \"3ac68afc-c605-48d3-a4f8-fbd91aa97f62\",\r\n  },\r\n];\r\nconst Settings = () => {\r\n  const navigation = useNavigation();\r\n  const [name, SetName] = useState(\"\");\r\n  const [dialogVisible, setDialogVisible] = useState(false);\r\n  const [profilePic, setProfilePic] = useState(authUserProfilePic);\r\n\r\n  const changeProfilePhoto = () => {\r\n    setDialogVisible(true);\r\n    console.log(\"Profile Photo button pressed\");\r\n  };\r\n\r\n  const renderItem = ({ item }) => {\r\n    return (\r\n      <View\r\n        style={{\r\n          flexDirection: \"column\",\r\n          flex: 1,\r\n          borderRadius: 8,\r\n          marginBottom: SPACING,\r\n          shadowColor: \"rgba(0,0,0,1)\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 10,\r\n          },\r\n          paddingTop: SPACING,\r\n          shadowOpacity: 1,\r\n          shadowRadius: 10,\r\n        }}\r\n      >\r\n        <View style={{ width: \"100%\", flex: 1 }}>\r\n          <LinearGradient\r\n            colors={[\r\n              \"rgba(30,55,108,0.1)\",\r\n              \" rgba(30,55,108,0.2)\",\r\n              \"rgba(30,55,108,0.1)\",\r\n            ]}\r\n          >\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                changeProfilePhoto();\r\n              }}\r\n            >\r\n              <Text style={styles.buttonText}>Change Profile Photo</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                changeTheme();\r\n              }}\r\n            >\r\n              <Text style={styles.buttonText}>Change App Theme</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity onPress={() => {}}>\r\n              <Text style={styles.buttonText}>Suggestions?</Text>\r\n            </TouchableOpacity>\r\n          </LinearGradient>\r\n        </View>\r\n        <View>\r\n          <DialogInput\r\n            isDialogVisible={dialogVisible}\r\n            title={\"Change Profile Photo\"}\r\n            message={\"Please paste image link.\\nLeave blank to reset.\"}\r\n            hintInput={profilePic}\r\n            submitInput={(inputText) => {\r\n              console.log(\"Image link input is: \" + inputText);\r\n              const isHyperLink = new RegExp(\r\n                \"^(http[s]?:\\\\/\\\\/(www\\\\.)?|ftp:\\\\/\\\\/(www\\\\.)?|www\\\\.){1}([0-9A-Za-z-\\\\.@:%_+~#=]+)+((\\\\.[a-zA-Z]{2,3})+)(/(.)*)?(\\\\?(.)*)?\"\r\n              );\r\n              const isImageFile = new RegExp(\r\n                \"[^\\\\s]+(.*?)\\\\.(jpg|jpeg|png|gif|JPG|JPEG|PNG|GIF)$\"\r\n              );\r\n              if (inputText == \"\" || typeof inputText === \"undefined\") {\r\n                //Sets profile photo to default photo\r\n                authUser.ref.update({ user_profile_photo: defaultProfilePic });\r\n                authUserProfilePic = defaultProfilePic; //Update locally because update() doesn't update the snapshot\r\n                setProfilePic(authUserProfilePic);\r\n                setDialogVisible(false);\r\n              } else if (inputText === profilePic) {\r\n                alert(\"Please input a NEW image link.\");\r\n                console.log(\"Image link is identical to current link.\");\r\n              } else if (\r\n                inputText.match(isHyperLink) &&\r\n                inputText.match(isImageFile)\r\n              ) {\r\n                console.log(\"Valid input received: \" + inputText);\r\n                // Sets new profile photo URL to input then, updates global variable\r\n                authUser.ref.update({ user_profile_photo: inputText });\r\n                authUserProfilePic = inputText;\r\n                setProfilePic(authUserProfilePic);\r\n                //Doesn't update the snapshot though\r\n                setDialogVisible(false);\r\n              } else {\r\n                console.log(\"Invalid link inserted: \" + inputText);\r\n                alert(\"Please enter a valid image link.\");\r\n              }\r\n            }}\r\n            closeDialog={() => {\r\n              setDialogVisible(false);\r\n            }}\r\n          ></DialogInput>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={{\r\n          zIndex: 1,\r\n          top: 0,\r\n          left: 10,\r\n          backgroundColor: \"rgba(255,255,255,0.1)\",\r\n          borderRadius: 7,\r\n          position: \"absolute\",\r\n        }}\r\n        onPress={() => {\r\n          navigation.navigate(\"Dashboard\");\r\n        }}\r\n      >\r\n        <Text style={{ fontSize: 25, color: \"rgba(0,0,0,0.7)\" }}> {back} </Text>\r\n      </TouchableOpacity>\r\n      <Image\r\n        style={{\r\n          width: ICON_SIZE,\r\n          height: ICON_SIZE,\r\n          resizeMode: \"cover\",\r\n          right: -10,\r\n          top: 10,\r\n          borderRadius: ICON_SIZE,\r\n          marginRight: SPACING / 2,\r\n          borderWidth: 3,\r\n          borderColor: \"rgba(0,0,0,0.1)\",\r\n          backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          zIndex: 1,\r\n          shadowOffset: {\r\n            height: 10,\r\n            shadowColor: \"black\",\r\n            flex: 1,\r\n          },\r\n          shadowOpacity: 1,\r\n          shadowRadius: 10,\r\n        }}\r\n        source={{ uri: \"https://i.imgur.com/3bOE2E6.jpeg\" }}\r\n      />\r\n      <View\r\n        style={{\r\n          flex: 2,\r\n          marginTop: 25,\r\n          width: \"100%\",\r\n          backgroundColor: \"rgba(30,55,108,0)\",\r\n          zIndex: 1,\r\n        }}\r\n      >\r\n        <FlatList\r\n          contentContainerStyle={{}}\r\n          data={DATA}\r\n          renderItem={renderItem}\r\n          keyExtractor={(item) => item.id}\r\n        />\r\n      </View>\r\n      <View style={{ position: \"absolute\", transform: [{ translateX: -15 }] }}>\r\n        <Image\r\n          resizeMode=\"contain\"\r\n          source={require(\"./images/background6.png\")}\r\n          blurRadius={0}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(28,56,107,255)\",\r\n    width: \"100%\",\r\n    zIndex: 1,\r\n    top: 70,\r\n  },\r\n  linearGradient: {\r\n    height: AVATAR_SIZE,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    fontSize: AVATAR_SIZE / 3,\r\n    fontWeight: \"700\",\r\n    textAlign: \"center\",\r\n    color: \" rgba(255,255,255,1)\",\r\n    backgroundColor: \"transparent\",\r\n    height: AVATAR_SIZE,\r\n    paddingTop: AVATAR_SIZE / 4,\r\n  },\r\n});\r\n\r\nexport default Settings;\r\n"
    ],
    "mappings": ";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;;;;;;;;;;AAcA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA;;;AAEA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,OAAO,GAAGD,YAAY,GAAG,CAA/B;AACA,IAAME,OAAO,GAAG,EAAhB;AACA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,SAAS,GAAG,GAAlB;AACA,IAAMC,IAAI,GAAG,GAAb;;AAEA,SAASC,kBAAT,GAA8B;EAE5BC,KAAK,CAAC,2CAAD,CAAL;EACAC,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;AACD,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EACxBH,KAAK,CAAC,gDAAD,CAAL;EACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,CAHD;;AAIA,SAASE,iBAAT,GAA6B,CAAE;;AAC/B,IAAMC,IAAI,GAAG,CACX;EACEC,EAAE,EAAE;AADN,CADW,CAAb;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACrB,IAAMC,UAAU,GAAGlB,aAAa,EAAhC;;EACA,gBAAwBD,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOoB,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA0CrB,QAAQ,CAAC,KAAD,CAAlD;EAAA;EAAA,IAAOsB,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAAoCvB,QAAQ,CAACwB,kBAAD,CAA5C;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,aAAnB;;EAEA,IAAMhB,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;IAC/Ba,gBAAgB,CAAC,IAAD,CAAhB;IACAX,OAAO,CAACC,GAAR,CAAY,8BAAZ;EACD,CAHD;;EAKA,IAAMc,UAAU,GAAG,SAAbA,UAAa,OAAc;IAAA,IAAXC,IAAW,QAAXA,IAAW;IAC/B,OACE,MAAC,IAAD;MACE,KAAK,EAAE;QACLC,aAAa,EAAE,QADV;QAELC,IAAI,EAAE,CAFD;QAGLC,YAAY,EAAE,CAHT;QAILC,YAAY,EAAE1B,OAJT;QAKL2B,WAAW,EAAE,eALR;QAMLC,YAAY,EAAE;UACZC,KAAK,EAAE,CADK;UAEZC,MAAM,EAAE;QAFI,CANT;QAULC,UAAU,EAAE/B,OAVP;QAWLgC,aAAa,EAAE,CAXV;QAYLC,YAAY,EAAE;MAZT,CADT;MAAA,WAgBE,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEJ,KAAK,EAAE,MAAT;UAAiBL,IAAI,EAAE;QAAvB,CAAb;QAAA,UACE,MAAC,cAAD;UACE,MAAM,EAAE,CACN,qBADM,EAEN,sBAFM,EAGN,qBAHM,CADV;UAAA,WAOE,KAAC,gBAAD;YACE,OAAO,EAAE,mBAAM;cACbpB,kBAAkB;YACnB,CAHH;YAAA,UAKE,KAAC,IAAD;cAAM,KAAK,EAAE8B,MAAM,CAACC,UAApB;cAAA;YAAA;UALF,EAPF,EAeE,KAAC,gBAAD;YACE,OAAO,EAAE,mBAAM;cACb3B,WAAW;YACZ,CAHH;YAAA,UAKE,KAAC,IAAD;cAAM,KAAK,EAAE0B,MAAM,CAACC,UAApB;cAAA;YAAA;UALF,EAfF,EAuBE,KAAC,gBAAD;YAAkB,OAAO,EAAE,mBAAM,CAAE,CAAnC;YAAA,UACE,KAAC,IAAD;cAAM,KAAK,EAAED,MAAM,CAACC,UAApB;cAAA;YAAA;UADF,EAvBF;QAAA;MADF,EAhBF,EA6CE,KAAC,IAAD;QAAA,UACE,KAAC,WAAD;UACE,eAAe,EAAEnB,aADnB;UAEE,KAAK,EAAE,sBAFT;UAGE,OAAO,EAAE,iDAHX;UAIE,SAAS,EAAEG,UAJb;UAKE,WAAW,EAAE,qBAACiB,SAAD,EAAe;YAC1B9B,OAAO,CAACC,GAAR,CAAY,0BAA0B6B,SAAtC;YACA,IAAMC,WAAW,GAAG,IAAIC,MAAJ,CAClB,6HADkB,CAApB;YAGA,IAAMC,WAAW,GAAG,IAAID,MAAJ,CAClB,qDADkB,CAApB;;YAGA,IAAIF,SAAS,IAAI,EAAb,IAAmB,OAAOA,SAAP,KAAqB,WAA5C,EAAyD;cAEvDI,QAAQ,CAACC,GAAT,CAAaC,MAAb,CAAoB;gBAAEC,kBAAkB,EAAEC;cAAtB,CAApB;cACA1B,kBAAkB,GAAG0B,iBAArB;cACAxB,aAAa,CAACF,kBAAD,CAAb;cACAD,gBAAgB,CAAC,KAAD,CAAhB;YACD,CAND,MAMO,IAAImB,SAAS,KAAKjB,UAAlB,EAA8B;cACnCd,KAAK,CAAC,gCAAD,CAAL;cACAC,OAAO,CAACC,GAAR,CAAY,0CAAZ;YACD,CAHM,MAGA,IACL6B,SAAS,CAACS,KAAV,CAAgBR,WAAhB,KACAD,SAAS,CAACS,KAAV,CAAgBN,WAAhB,CAFK,EAGL;cACAjC,OAAO,CAACC,GAAR,CAAY,2BAA2B6B,SAAvC;cAEAI,QAAQ,CAACC,GAAT,CAAaC,MAAb,CAAoB;gBAAEC,kBAAkB,EAAEP;cAAtB,CAApB;cACAlB,kBAAkB,GAAGkB,SAArB;cACAhB,aAAa,CAACF,kBAAD,CAAb;cAEAD,gBAAgB,CAAC,KAAD,CAAhB;YACD,CAXM,MAWA;cACLX,OAAO,CAACC,GAAR,CAAY,4BAA4B6B,SAAxC;cACA/B,KAAK,CAAC,kCAAD,CAAL;YACD;UACF,CArCH;UAsCE,WAAW,EAAE,uBAAM;YACjBY,gBAAgB,CAAC,KAAD,CAAhB;UACD;QAxCH;MADF,EA7CF;IAAA,EADF;EA4FD,CA7FD;;EA8FA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEiB,MAAM,CAACY,SAApB;IAAA,WACE,KAAC,gBAAD;MACE,KAAK,EAAE;QACLC,MAAM,EAAE,CADH;QAELC,GAAG,EAAE,CAFA;QAGLC,IAAI,EAAE,EAHD;QAILC,eAAe,EAAE,uBAJZ;QAKLzB,YAAY,EAAE,CALT;QAML0B,QAAQ,EAAE;MANL,CADT;MASE,OAAO,EAAE,mBAAM;QACbtC,UAAU,CAACuC,QAAX,CAAoB,WAApB;MACD,CAXH;MAAA,UAaE,MAAC,IAAD;QAAM,KAAK,EAAE;UAAEC,QAAQ,EAAE,EAAZ;UAAgBC,KAAK,EAAE;QAAvB,CAAb;QAAA,gBAA2DnD,IAA3D;MAAA;IAbF,EADF,EAgBE,KAAC,KAAD;MACE,KAAK,EAAE;QACL0B,KAAK,EAAE3B,SADF;QAEL4B,MAAM,EAAE5B,SAFH;QAGLqD,UAAU,EAAE,OAHP;QAILC,KAAK,EAAE,CAAC,EAJH;QAKLR,GAAG,EAAE,EALA;QAMLvB,YAAY,EAAEvB,SANT;QAOLuD,WAAW,EAAEzD,OAAO,GAAG,CAPlB;QAQL0D,WAAW,EAAE,CARR;QASLC,WAAW,EAAE,iBATR;QAULT,eAAe,EAAE,iBAVZ;QAWLH,MAAM,EAAE,CAXH;QAYLnB,YAAY,EAAE;UACZE,MAAM,EAAE,EADI;UAEZH,WAAW,EAAE,OAFD;UAGZH,IAAI,EAAE;QAHM,CAZT;QAiBLQ,aAAa,EAAE,CAjBV;QAkBLC,YAAY,EAAE;MAlBT,CADT;MAqBE,MAAM,EAAE;QAAE2B,GAAG,EAAE;MAAP;IArBV,EAhBF,EAuCE,KAAC,IAAD;MACE,KAAK,EAAE;QACLpC,IAAI,EAAE,CADD;QAELqC,SAAS,EAAE,EAFN;QAGLhC,KAAK,EAAE,MAHF;QAILqB,eAAe,EAAE,mBAJZ;QAKLH,MAAM,EAAE;MALH,CADT;MAAA,UASE,KAAC,QAAD;QACE,qBAAqB,EAAE,EADzB;QAEE,IAAI,EAAErC,IAFR;QAGE,UAAU,EAAEW,UAHd;QAIE,YAAY,EAAE,sBAACC,IAAD;UAAA,OAAUA,IAAI,CAACX,EAAf;QAAA;MAJhB;IATF,EAvCF,EAuDE,KAAC,IAAD;MAAM,KAAK,EAAE;QAAEwC,QAAQ,EAAE,UAAZ;QAAwBW,SAAS,EAAE,CAAC;UAAEC,UAAU,EAAE,CAAC;QAAf,CAAD;MAAnC,CAAb;MAAA,UACE,KAAC,KAAD;QACE,UAAU,EAAC,SADb;QAEE,MAAM,EAAEC,OAAO,4BAFjB;QAGE,UAAU,EAAE;MAHd;IADF,EAvDF;EAAA,EADF;AAiED,CA1KD;;AA4KA,IAAM9B,MAAM,GAAG+B,UAAU,CAACC,MAAX,CAAkB;EAC/BpB,SAAS,EAAE;IACTtB,IAAI,EAAE,CADG;IAET2C,cAAc,EAAE,QAFP;IAGTC,UAAU,EAAE,QAHH;IAITlB,eAAe,EAAE,qBAJR;IAKTrB,KAAK,EAAE,MALE;IAMTkB,MAAM,EAAE,CANC;IAOTC,GAAG,EAAE;EAPI,CADoB;EAU/BqB,cAAc,EAAE;IACdvC,MAAM,EAAE7B,WADM;IAEdqE,WAAW,EAAE,EAFC;IAGdC,YAAY,EAAE,EAHA;IAId9C,YAAY,EAAE;EAJA,CAVe;EAgB/BU,UAAU,EAAE;IACVkB,QAAQ,EAAEpD,WAAW,GAAG,CADd;IAEVuE,UAAU,EAAE,KAFF;IAGVC,SAAS,EAAE,QAHD;IAIVnB,KAAK,EAAE,sBAJG;IAKVJ,eAAe,EAAE,aALP;IAMVpB,MAAM,EAAE7B,WANE;IAOV8B,UAAU,EAAE9B,WAAW,GAAG;EAPhB;AAhBmB,CAAlB,CAAf;AA2BA,eAAeW,QAAf"
  },
  "metadata": {},
  "sourceType": "module"
}
