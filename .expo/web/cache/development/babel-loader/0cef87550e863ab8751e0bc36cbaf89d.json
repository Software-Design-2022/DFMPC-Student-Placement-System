{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nexport default (function (props) {\n  var onChangeOffset = props.onChangeOffset,\n      scrollOffset = props.scrollOffset,\n      scrollViewRef = props.scrollViewRef;\n  useEffect(function () {\n    if (scrollOffset !== undefined) {\n      var _scrollViewRef$curren;\n\n      scrollViewRef == null ? void 0 : (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollTo({\n        y: scrollOffset,\n        animated: false\n      });\n    }\n  }, [scrollOffset]);\n  var onScrollEndDrag = useCallback(function (event) {\n    var _event$nativeEvent$ve;\n\n    var offset = event.nativeEvent.contentOffset.y;\n    var velocity = (_event$nativeEvent$ve = event.nativeEvent.velocity) == null ? void 0 : _event$nativeEvent$ve.y;\n\n    if (velocity === 0) {\n      onChangeOffset == null ? void 0 : onChangeOffset(offset);\n    }\n  }, []);\n  var onMomentumScrollEnd = useCallback(function (event) {\n    onChangeOffset == null ? void 0 : onChangeOffset(event.nativeEvent.contentOffset.y);\n  }, []);\n  return {\n    scrollEvents: {\n      onScrollEndDrag: onScrollEndDrag,\n      onMomentumScrollEnd: onMomentumScrollEnd\n    }\n  };\n});","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/timeline/useTimelineOffset.js"],"names":["useCallback","useEffect","props","onChangeOffset","scrollOffset","scrollViewRef","undefined","current","scrollTo","y","animated","onScrollEndDrag","event","offset","nativeEvent","contentOffset","velocity","onMomentumScrollEnd","scrollEvents"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,gBAAe,UAACC,KAAD,EAAW;AACtB,MAAQC,cAAR,GAAwDD,KAAxD,CAAQC,cAAR;AAAA,MAAwBC,YAAxB,GAAwDF,KAAxD,CAAwBE,YAAxB;AAAA,MAAsCC,aAAtC,GAAwDH,KAAxD,CAAsCG,aAAtC;AACAJ,EAAAA,SAAS,CAAC,YAAM;AAGZ,QAAIG,YAAY,KAAKE,SAArB,EAAgC;AAAA;;AAC5BD,MAAAA,aAAa,QAAb,qCAAAA,aAAa,CAAEE,OAAf,2CAAwBC,QAAxB,CAAiC;AAC7BC,QAAAA,CAAC,EAAEL,YAD0B;AAE7BM,QAAAA,QAAQ,EAAE;AAFmB,OAAjC;AAIH;AACJ,GATQ,EASN,CAACN,YAAD,CATM,CAAT;AAUA,MAAMO,eAAe,GAAGX,WAAW,CAAC,UAACY,KAAD,EAAW;AAAA;;AAC3C,QAAMC,MAAM,GAAGD,KAAK,CAACE,WAAN,CAAkBC,aAAlB,CAAgCN,CAA/C;AACA,QAAMO,QAAQ,4BAAGJ,KAAK,CAACE,WAAN,CAAkBE,QAArB,qBAAG,sBAA4BP,CAA7C;;AACA,QAAIO,QAAQ,KAAK,CAAjB,EAAoB;AAChBb,MAAAA,cAAc,QAAd,YAAAA,cAAc,CAAGU,MAAH,CAAd;AACH;AACJ,GANkC,EAMhC,EANgC,CAAnC;AAOA,MAAMI,mBAAmB,GAAGjB,WAAW,CAAC,UAACY,KAAD,EAAW;AAC/CT,IAAAA,cAAc,QAAd,YAAAA,cAAc,CAAGS,KAAK,CAACE,WAAN,CAAkBC,aAAlB,CAAgCN,CAAnC,CAAd;AACH,GAFsC,EAEpC,EAFoC,CAAvC;AAGA,SAAO;AACHS,IAAAA,YAAY,EAAE;AACVP,MAAAA,eAAe,EAAfA,eADU;AAEVM,MAAAA,mBAAmB,EAAnBA;AAFU;AADX,GAAP;AAMH,CA5BD","sourcesContent":["import { useCallback, useEffect } from 'react';\nexport default (props) => {\n    const { onChangeOffset, scrollOffset, scrollViewRef } = props;\n    useEffect(() => {\n        // NOTE: The main reason for this feature is to sync the offset\n        // between all of the timelines in the TimelineList component\n        if (scrollOffset !== undefined) {\n            scrollViewRef?.current?.scrollTo({\n                y: scrollOffset,\n                animated: false\n            });\n        }\n    }, [scrollOffset]);\n    const onScrollEndDrag = useCallback((event) => {\n        const offset = event.nativeEvent.contentOffset.y;\n        const velocity = event.nativeEvent.velocity?.y;\n        if (velocity === 0) {\n            onChangeOffset?.(offset);\n        }\n    }, []);\n    const onMomentumScrollEnd = useCallback((event) => {\n        onChangeOffset?.(event.nativeEvent.contentOffset.y);\n    }, []);\n    return {\n        scrollEvents: {\n            onScrollEndDrag,\n            onMomentumScrollEnd\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}