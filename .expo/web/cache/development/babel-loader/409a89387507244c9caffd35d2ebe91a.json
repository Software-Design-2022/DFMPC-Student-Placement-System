{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect, Component } from \"react\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { SafeAreaViewBase } from \"react-native-web/dist/index\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport \"../global\";\nimport PropTypes from \"prop-types\";\nimport { WebView } from \"react-native-webview\";\nimport { createTopBar } from \"../HelperFunctions\";\nimport { getList } from \"./notificationHelper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 33;\nvar ITEM_SIZE = AVATAR_SIZE + SPACING * 4;\nvar DATA2 = notificationList;\n\nvar Notifications = function Notifications() {\n  var _useState = useState({\n    notifications: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var onReceive = function onReceive(notifications) {\n    setState(function (prevState) {\n      return {\n        notifications: prevState.notifications = notifications\n      };\n    });\n  };\n\n  getList(onReceive);\n  var scrollY = React.useRef(new Animated.Value(0)).current;\n  var navigation = useNavigation();\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedId = _useState4[0],\n      setSelectedId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      SetName = _useState6[1];\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        Linking.openURL(item.link);\n      },\n      children: _jsxs(View, {\n        style: {\n          height: 100,\n          backgroundColor: \"rgba(9,38,66,0.75)\",\n          marginBottom: 10,\n          margin: 5,\n          borderRadius: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            borderBottomWidth: 2,\n            borderColor: \"rgba(255,255,255,255)\",\n            letterSpacing: 1,\n            fontWeight: \"bold\",\n            left: 4,\n            top: 2,\n            color: \"rgba(255,255,255,255)\",\n            position: \"absolute\",\n            fontSize: 20\n          },\n          children: item.heading\n        }), _jsx(Text, {\n          style: {\n            letterSpacing: 1,\n            fontWeight: \"bold\",\n            right: 4,\n            top: 2,\n            color: \"rgba(255,255,255,255)\",\n            position: \"absolute\",\n            fontSize: 10\n          },\n          children: item.date\n        }), _jsx(Text, {\n          style: {\n            letterSpacing: 1,\n            fontWeight: \"bold\",\n            right: 4,\n            top: 14,\n            color: \"rgba(255,255,255,255)\",\n            position: \"absolute\",\n            fontSize: 10\n          },\n          children: item.time\n        }), _jsx(Text, {\n          style: {\n            letterSpacing: 0,\n            fontWeight: \"bold\",\n            left: 4,\n            top: SPACING + 12,\n            color: \"rgba(128,185,238,255)\",\n            height: 50,\n            width: width / 1.1\n          },\n          children: item.body\n        })]\n      }, item.time)\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [createTopBar(10, navigation, false), _jsxs(View, {\n      style: {\n        flex: 1,\n        zIndex: 1,\n        top: 15\n      },\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          marginBottom: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            backgroundColor: \"rgba(0,0,0,0.2)\",\n            borderRadius: 10,\n            textAlign: \"center\",\n            fontSize: 20,\n            padding: 2,\n            marginLeft: 5,\n            color: \"black\"\n          },\n          children: \"ALL\"\n        }), _jsx(Text, {\n          style: {\n            backgroundColor: \"rgba(0,0,0,0.2)\",\n            borderRadius: 10,\n            textAlign: \"center\",\n            fontSize: 20,\n            padding: 2,\n            marginLeft: 5,\n            color: \"black\"\n          },\n          children: \"EVENTS\"\n        })]\n      }), _jsx(FlatList, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: false,\n        contentContainerStyle: {},\n        data: state.notifications,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })]\n    }), _jsx(View, {\n      style: {\n        position: \"absolute\"\n      },\n      children: _jsx(Image, {\n        resizeMode: \"contain\",\n        source: require(\"./images/background.png\"),\n        blurRadius: 0\n      })\n    })]\n  });\n};\n\nexport default Notifications;","map":{"version":3,"names":["React","useState","useRef","useEffect","Component","useNavigation","SafeAreaViewBase","Dimensions","get","width","height","LinearGradient","PropTypes","WebView","createTopBar","getList","buttonHeight","textPos","SPACING","AVATAR_SIZE","ICON_SIZE","ITEM_SIZE","DATA2","notificationList","Notifications","notifications","state","setState","onReceive","prevState","scrollY","Animated","Value","current","navigation","selectedId","setSelectedId","name","SetName","renderItem","item","Linking","openURL","link","backgroundColor","marginBottom","margin","borderRadius","borderBottomWidth","borderColor","letterSpacing","fontWeight","left","top","color","position","fontSize","heading","right","date","time","body","flex","zIndex","flexDirection","textAlign","padding","marginLeft","id","require"],"sources":["/home/cipher73/Coding Projects/Sprint3-final/DFMPC-Student-Placement-System/Screens/Notifications.js"],"sourcesContent":["import React, { useState, useRef, useEffect, Component } from \"react\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport {\n  StatusBar,\n  FlatList,\n  Image,\n  Animated,\n  Pressable,\n  Text,\n  View,\n  Dimensions,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableHighlight,\n  Easing,\n  SafeAreaViewBase,\n  SafeAreaView,\n  Button,\n  ScrollView,\n  Linking,\n} from \"react-native\";\nconst { width, height } = Dimensions.get(\"screen\");\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport \"../global\";\nimport PropTypes from \"prop-types\";\nimport { WebView } from \"react-native-webview\";\nimport { createTopBar } from \"../HelperFunctions\";\nimport { getList } from \"./notificationHelper\";\n\n//Constants for use with UI scaling\nconst buttonHeight = 50;\nconst textPos = buttonHeight / 2;\nconst SPACING = 20;\nconst AVATAR_SIZE = 70;\nconst ICON_SIZE = 33;\nconst ITEM_SIZE = AVATAR_SIZE + SPACING * 4;\n//data to be displayed in the flatlist\n\nconst DATA2 = notificationList;\n\n// creates it so each item has a touchable button with correct title\n\nconst Notifications = () => {\n  // console.log(notificationList);\n\n  // get notifications from database\n  const [state, setState] = useState({\n    notifications: [],\n  });\n  const onReceive = (notifications) => {\n    setState((prevState) => ({\n      notifications: (prevState.notifications = notifications),\n    }));\n  };\n  getList(onReceive);\n\n  //console.log(state.notifications)\n\n  const scrollY = React.useRef(new Animated.Value(0)).current;\n  //use navigation\n  const navigation = useNavigation();\n  //change colour of tapped button\n  const [selectedId, setSelectedId] = useState(null);\n  const [name, SetName] = useState(\"\");\n  // first render function that renders the vertical flatlist\n  const renderItem = ({ item }) => {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          Linking.openURL(item.link);\n        }}\n      >\n        <View\n         key={item.time}\n          style={{\n            height: 100,\n            backgroundColor: \"rgba(9,38,66,0.75)\",\n            marginBottom: 10,\n            margin: 5,\n            borderRadius: 10,\n          }}\n        >\n          <Text\n            style={{\n              borderBottomWidth: 2,\n              borderColor: \"rgba(255,255,255,255)\",\n              letterSpacing: 1,\n              fontWeight: \"bold\",\n              left: 4,\n              top: 2,\n              color: \"rgba(255,255,255,255)\",\n              position: \"absolute\",\n              fontSize: 20,\n            }}\n          >\n            {item.heading}\n          </Text>\n          <Text\n            style={{\n              letterSpacing: 1,\n              fontWeight: \"bold\",\n              right: 4,\n              top: 2,\n              color: \"rgba(255,255,255,255)\",\n              position: \"absolute\",\n              fontSize: 10,\n            }}\n          >\n            {item.date}\n          </Text>\n          <Text\n            style={{\n              letterSpacing: 1,\n              fontWeight: \"bold\",\n              right: 4,\n              top: 14,\n              color: \"rgba(255,255,255,255)\",\n              position: \"absolute\",\n              fontSize: 10,\n            }}\n          >\n            {item.time}\n          </Text>\n          <Text\n            style={{\n              letterSpacing: 0,\n              fontWeight: \"bold\",\n              left: 4,\n              top: SPACING + 12,\n              color: \"rgba(128,185,238,255)\",\n              height: 50,\n              width: width / 1.1,\n            }}\n          >\n            {item.body}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      {createTopBar(10, navigation, false)}\n      <View style={{ flex: 1, zIndex: 1, top: 15 }}>\n        <View style={{ flexDirection: \"row\", marginBottom: 10 }}>\n          <Text\n            style={{\n              backgroundColor: \"rgba(0,0,0,0.2)\",\n              borderRadius: 10,\n              textAlign: \"center\",\n              fontSize: 20,\n              padding: 2,\n              marginLeft: 5,\n              color: \"black\",\n            }}\n          >\n            ALL\n          </Text>\n          <Text\n            style={{\n              backgroundColor: \"rgba(0,0,0,0.2)\",\n              borderRadius: 10,\n              textAlign: \"center\",\n              fontSize: 20,\n              padding: 2,\n              marginLeft: 5,\n              color: \"black\",\n            }}\n          >\n            EVENTS\n          </Text>\n        </View>\n        <FlatList\n          showsHorizontalScrollIndicator={false}\n          horizontal={false}\n          contentContainerStyle={{}}\n          data={state.notifications}\n          renderItem={renderItem}\n          keyExtractor={(item) => item.id}\n        />\n      </View>\n      <View style={{ position: \"absolute\" }}>\n        <Image\n          resizeMode=\"contain\"\n          source={require(\"./images/background.png\")}\n          blurRadius={0}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default Notifications;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;;;;;;;;;;;SAcEC,gB;;;;;;AAMF,sBAA0BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,KAAR,mBAAQA,KAAR;AAAA,IAAeC,MAAf,mBAAeA,MAAf;;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,YAAT;AACA,SAASC,OAAT;;;AAGA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,OAAO,GAAGD,YAAY,GAAG,CAA/B;AACA,IAAME,OAAO,GAAG,EAAhB;AACA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,SAAS,GAAGF,WAAW,GAAGD,OAAO,GAAG,CAA1C;AAGA,IAAMI,KAAK,GAAGC,gBAAd;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAI1B,gBAA0BvB,QAAQ,CAAC;IACjCwB,aAAa,EAAE;EADkB,CAAD,CAAlC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACH,aAAD,EAAmB;IACnCE,QAAQ,CAAC,UAACE,SAAD;MAAA,OAAgB;QACvBJ,aAAa,EAAGI,SAAS,CAACJ,aAAV,GAA0BA;MADnB,CAAhB;IAAA,CAAD,CAAR;EAGD,CAJD;;EAKAV,OAAO,CAACa,SAAD,CAAP;EAIA,IAAME,OAAO,GAAG9B,KAAK,CAACE,MAAN,CAAa,IAAI6B,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAb,EAAoCC,OAApD;EAEA,IAAMC,UAAU,GAAG7B,aAAa,EAAhC;;EAEA,iBAAoCJ,QAAQ,CAAC,IAAD,CAA5C;EAAA;EAAA,IAAOkC,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAwBnC,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOoC,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAc;IAAA,IAAXC,IAAW,QAAXA,IAAW;IAC/B,OACE,KAAC,gBAAD;MACE,OAAO,EAAE,mBAAM;QACbC,OAAO,CAACC,OAAR,CAAgBF,IAAI,CAACG,IAArB;MACD,CAHH;MAAA,UAKE,MAAC,IAAD;QAEE,KAAK,EAAE;UACLjC,MAAM,EAAE,GADH;UAELkC,eAAe,EAAE,oBAFZ;UAGLC,YAAY,EAAE,EAHT;UAILC,MAAM,EAAE,CAJH;UAKLC,YAAY,EAAE;QALT,CAFT;QAAA,WAUE,KAAC,IAAD;UACE,KAAK,EAAE;YACLC,iBAAiB,EAAE,CADd;YAELC,WAAW,EAAE,uBAFR;YAGLC,aAAa,EAAE,CAHV;YAILC,UAAU,EAAE,MAJP;YAKLC,IAAI,EAAE,CALD;YAMLC,GAAG,EAAE,CANA;YAOLC,KAAK,EAAE,uBAPF;YAQLC,QAAQ,EAAE,UARL;YASLC,QAAQ,EAAE;UATL,CADT;UAAA,UAaGhB,IAAI,CAACiB;QAbR,EAVF,EAyBE,KAAC,IAAD;UACE,KAAK,EAAE;YACLP,aAAa,EAAE,CADV;YAELC,UAAU,EAAE,MAFP;YAGLO,KAAK,EAAE,CAHF;YAILL,GAAG,EAAE,CAJA;YAKLC,KAAK,EAAE,uBALF;YAMLC,QAAQ,EAAE,UANL;YAOLC,QAAQ,EAAE;UAPL,CADT;UAAA,UAWGhB,IAAI,CAACmB;QAXR,EAzBF,EAsCE,KAAC,IAAD;UACE,KAAK,EAAE;YACLT,aAAa,EAAE,CADV;YAELC,UAAU,EAAE,MAFP;YAGLO,KAAK,EAAE,CAHF;YAILL,GAAG,EAAE,EAJA;YAKLC,KAAK,EAAE,uBALF;YAMLC,QAAQ,EAAE,UANL;YAOLC,QAAQ,EAAE;UAPL,CADT;UAAA,UAWGhB,IAAI,CAACoB;QAXR,EAtCF,EAmDE,KAAC,IAAD;UACE,KAAK,EAAE;YACLV,aAAa,EAAE,CADV;YAELC,UAAU,EAAE,MAFP;YAGLC,IAAI,EAAE,CAHD;YAILC,GAAG,EAAEnC,OAAO,GAAG,EAJV;YAKLoC,KAAK,EAAE,uBALF;YAML5C,MAAM,EAAE,EANH;YAOLD,KAAK,EAAEA,KAAK,GAAG;UAPV,CADT;UAAA,UAWG+B,IAAI,CAACqB;QAXR,EAnDF;MAAA,GACMrB,IAAI,CAACoB,IADX;IALF,EADF;EAyED,CA1ED;;EA4EA,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEE,IAAI,EAAE;IAAR,CAAb;IAAA,WACGhD,YAAY,CAAC,EAAD,EAAKoB,UAAL,EAAiB,KAAjB,CADf,EAEE,MAAC,IAAD;MAAM,KAAK,EAAE;QAAE4B,IAAI,EAAE,CAAR;QAAWC,MAAM,EAAE,CAAnB;QAAsBV,GAAG,EAAE;MAA3B,CAAb;MAAA,WACE,MAAC,IAAD;QAAM,KAAK,EAAE;UAAEW,aAAa,EAAE,KAAjB;UAAwBnB,YAAY,EAAE;QAAtC,CAAb;QAAA,WACE,KAAC,IAAD;UACE,KAAK,EAAE;YACLD,eAAe,EAAE,iBADZ;YAELG,YAAY,EAAE,EAFT;YAGLkB,SAAS,EAAE,QAHN;YAILT,QAAQ,EAAE,EAJL;YAKLU,OAAO,EAAE,CALJ;YAMLC,UAAU,EAAE,CANP;YAOLb,KAAK,EAAE;UAPF,CADT;UAAA;QAAA,EADF,EAcE,KAAC,IAAD;UACE,KAAK,EAAE;YACLV,eAAe,EAAE,iBADZ;YAELG,YAAY,EAAE,EAFT;YAGLkB,SAAS,EAAE,QAHN;YAILT,QAAQ,EAAE,EAJL;YAKLU,OAAO,EAAE,CALJ;YAMLC,UAAU,EAAE,CANP;YAOLb,KAAK,EAAE;UAPF,CADT;UAAA;QAAA,EAdF;MAAA,EADF,EA6BE,KAAC,QAAD;QACE,8BAA8B,EAAE,KADlC;QAEE,UAAU,EAAE,KAFd;QAGE,qBAAqB,EAAE,EAHzB;QAIE,IAAI,EAAE5B,KAAK,CAACD,aAJd;QAKE,UAAU,EAAEc,UALd;QAME,YAAY,EAAE,sBAACC,IAAD;UAAA,OAAUA,IAAI,CAAC4B,EAAf;QAAA;MANhB,EA7BF;IAAA,EAFF,EAwCE,KAAC,IAAD;MAAM,KAAK,EAAE;QAAEb,QAAQ,EAAE;MAAZ,CAAb;MAAA,UACE,KAAC,KAAD;QACE,UAAU,EAAC,SADb;QAEE,MAAM,EAAEc,OAAO,2BAFjB;QAGE,UAAU,EAAE;MAHd;IADF,EAxCF;EAAA,EADF;AAkDD,CArJD;;AAuJA,eAAe7C,aAAf"},"metadata":{},"sourceType":"module"}