{
  "ast": null,
  "code": "export function calcTimeByPosition(yPosition, hourBlockHeight) {\n  var time = yPosition / hourBlockHeight;\n  time = Math.floor(time * 2) / 2;\n  var hour = Math.floor(time);\n  var minutes = (time - Math.floor(time)) * 60;\n  return {\n    hour: hour,\n    minutes: minutes\n  };\n}\nexport function buildTimeString() {\n  var hour = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var minutes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var date = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return (date + \" \" + hour.toString().padStart(2, '0') + \":\" + minutes.toString().padStart(2, '0') + \":00\").trimStart();\n}\nexport function calcTimeOffset(hourBlockHeight, hour, minutes) {\n  var now = new Date();\n  var h = hour != null ? hour : now.getHours();\n  var m = minutes != null ? minutes : now.getMinutes();\n  return (h + m / 60) * hourBlockHeight;\n}",
  "map": {
    "version": 3,
    "names": [
      "calcTimeByPosition",
      "yPosition",
      "hourBlockHeight",
      "time",
      "Math",
      "floor",
      "hour",
      "minutes",
      "buildTimeString",
      "date",
      "toString",
      "padStart",
      "trimStart",
      "calcTimeOffset",
      "now",
      "Date",
      "h",
      "getHours",
      "m",
      "getMinutes"
    ],
    "sources": [
      "C:/Users/Peace/Desktop/YOS3/SEMESTER 1/Software Design III/2022/Software Design Project/SPS-Project/DFMPC-Student-Placement-System/project/node_modules/react-native-calendars/src/timeline/helpers/presenter.js"
    ],
    "sourcesContent": [
      "export function calcTimeByPosition(yPosition, hourBlockHeight) {\n    let time = yPosition / hourBlockHeight;\n    time = Math.floor(time * 2) / 2;\n    const hour = Math.floor(time);\n    const minutes = (time - Math.floor(time)) * 60;\n    return { hour, minutes };\n}\nexport function buildTimeString(hour = 0, minutes = 0, date = '') {\n    return `${date} ${hour.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:00`.trimStart();\n}\nexport function calcTimeOffset(hourBlockHeight, hour, minutes) {\n    const now = new Date();\n    const h = hour ?? now.getHours();\n    const m = minutes ?? now.getMinutes();\n    return (h + m / 60) * hourBlockHeight;\n}\n"
    ],
    "mappings": "AAAA,OAAO,SAASA,kBAAT,CAA4BC,SAA5B,EAAuCC,eAAvC,EAAwD;EAC3D,IAAIC,IAAI,GAAGF,SAAS,GAAGC,eAAvB;EACAC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,CAAlB,IAAuB,CAA9B;EACA,IAAMG,IAAI,GAAGF,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAb;EACA,IAAMI,OAAO,GAAG,CAACJ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAR,IAA4B,EAA5C;EACA,OAAO;IAAEG,IAAI,EAAJA,IAAF;IAAQC,OAAO,EAAPA;EAAR,CAAP;AACH;AACD,OAAO,SAASC,eAAT,GAA2D;EAAA,IAAlCF,IAAkC,uEAA3B,CAA2B;EAAA,IAAxBC,OAAwB,uEAAd,CAAc;EAAA,IAAXE,IAAW,uEAAJ,EAAI;EAC9D,OAAO,CAAGA,IAAH,SAAWH,IAAI,CAACI,QAAL,GAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,CAAX,SAA+CJ,OAAO,CAACG,QAAR,GAAmBC,QAAnB,CAA4B,CAA5B,EAA+B,GAA/B,CAA/C,UAAwFC,SAAxF,EAAP;AACH;AACD,OAAO,SAASC,cAAT,CAAwBX,eAAxB,EAAyCI,IAAzC,EAA+CC,OAA/C,EAAwD;EAC3D,IAAMO,GAAG,GAAG,IAAIC,IAAJ,EAAZ;EACA,IAAMC,CAAC,GAAGV,IAAH,WAAGA,IAAH,GAAWQ,GAAG,CAACG,QAAJ,EAAlB;EACA,IAAMC,CAAC,GAAGX,OAAH,WAAGA,OAAH,GAAcO,GAAG,CAACK,UAAJ,EAArB;EACA,OAAO,CAACH,CAAC,GAAGE,CAAC,GAAG,EAAT,IAAehB,eAAtB;AACH"
  },
  "metadata": {},
  "sourceType": "module"
}
