{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getStatusBarHeight, getBottomSpace } from 'react-native-iphone-x-helper';\nimport Surface from \"./Surface\";\nimport { withTheme } from \"../core/theming\";\nimport useAnimatedValue from \"../utils/useAnimatedValue\";\nimport { addEventListener } from \"../utils/addEventListener\";\nvar DEFAULT_DURATION = 220;\nvar TOP_INSET = getStatusBarHeight(true);\nvar BOTTOM_INSET = getBottomSpace();\n\nfunction Modal(_ref) {\n  var _ref$dismissable = _ref.dismissable,\n    dismissable = _ref$dismissable === void 0 ? true : _ref$dismissable,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? false : _ref$visible,\n    _ref$overlayAccessibi = _ref.overlayAccessibilityLabel,\n    overlayAccessibilityLabel = _ref$overlayAccessibi === void 0 ? 'Close modal' : _ref$overlayAccessibi,\n    onDismiss = _ref.onDismiss,\n    children = _ref.children,\n    contentContainerStyle = _ref.contentContainerStyle,\n    style = _ref.style,\n    theme = _ref.theme,\n    testID = _ref.testID;\n  var visibleRef = React.useRef(visible);\n  React.useEffect(function () {\n    visibleRef.current = visible;\n  });\n  var colors = theme.colors,\n    animation = theme.animation;\n  var opacity = useAnimatedValue(visible ? 1 : 0);\n  var _React$useState = React.useState(visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    rendered = _React$useState2[0],\n    setRendered = _React$useState2[1];\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n  var handleBack = function handleBack() {\n    if (dismissable) {\n      hideModal();\n    }\n    return true;\n  };\n  var subscription = React.useRef(undefined);\n  var showModal = function showModal() {\n    var _subscription$current;\n    (_subscription$current = subscription.current) === null || _subscription$current === void 0 ? void 0 : _subscription$current.remove();\n    subscription.current = addEventListener(BackHandler, 'hardwareBackPress', handleBack);\n    var scale = animation.scale;\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start();\n  };\n  var removeListeners = function removeListeners() {\n    var _subscription$current2;\n    if ((_subscription$current2 = subscription.current) !== null && _subscription$current2 !== void 0 && _subscription$current2.remove) {\n      var _subscription$current3;\n      (_subscription$current3 = subscription.current) === null || _subscription$current3 === void 0 ? void 0 : _subscription$current3.remove();\n    } else {\n      BackHandler.removeEventListener('hardwareBackPress', handleBack);\n    }\n  };\n  var hideModal = function hideModal() {\n    removeListeners();\n    var scale = animation.scale;\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start(function (_ref2) {\n      var finished = _ref2.finished;\n      if (!finished) {\n        return;\n      }\n      if (visible && onDismiss) {\n        onDismiss();\n      }\n      if (visibleRef.current) {\n        showModal();\n      } else {\n        setRendered(false);\n      }\n    });\n  };\n  var prevVisible = React.useRef(null);\n  React.useEffect(function () {\n    if (prevVisible.current !== visible) {\n      if (visible) {\n        showModal();\n      } else {\n        hideModal();\n      }\n    }\n    prevVisible.current = visible;\n  });\n  React.useEffect(function () {\n    return removeListeners;\n  }, []);\n  if (!rendered) return null;\n  return React.createElement(Animated.View, {\n    pointerEvents: visible ? 'auto' : 'none',\n    accessibilityViewIsModal: true,\n    accessibilityLiveRegion: \"polite\",\n    style: StyleSheet.absoluteFill,\n    onAccessibilityEscape: hideModal,\n    testID: testID\n  }, React.createElement(TouchableWithoutFeedback, {\n    accessibilityLabel: overlayAccessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: !dismissable,\n    onPress: dismissable ? hideModal : undefined,\n    importantForAccessibility: \"no\"\n  }, React.createElement(Animated.View, {\n    testID: testID + \"-backdrop\",\n    style: [styles.backdrop, {\n      backgroundColor: colors.backdrop,\n      opacity: opacity\n    }]\n  })), React.createElement(View, {\n    style: [styles.wrapper, {\n      marginTop: TOP_INSET,\n      marginBottom: BOTTOM_INSET\n    }, style],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Surface, {\n    style: [{\n      opacity: opacity\n    }, styles.content, contentContainerStyle]\n  }, children)));\n}\nexport default withTheme(Modal);\nvar styles = StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center'\n  }),\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"mappings":"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","names":["React","getStatusBarHeight","getBottomSpace","Surface","withTheme","useAnimatedValue","addEventListener","DEFAULT_DURATION","TOP_INSET","BOTTOM_INSET","Modal","dismissable","_ref","visible","overlayAccessibilityLabel","onDismiss","children","contentContainerStyle","style","theme","testID","visibleRef","useRef","useEffect","current","colors","animation","opacity","useState","rendered","setRendered","handleBack","hideModal","subscription","undefined","showModal","remove","BackHandler","scale","Animated","timing","toValue","duration","easing","Easing","out","cubic","useNativeDriver","start","removeListeners","_subscription$current2","removeEventListener","finished","_ref2","prevVisible","View","pointerEvents","accessibilityViewIsModal","accessibilityLiveRegion","StyleSheet","absoluteFill","onAccessibilityEscape","TouchableWithoutFeedback","accessibilityLabel","accessibilityRole","disabled","onPress","importantForAccessibility","styles","backdrop","backgroundColor","wrapper","marginTop","marginBottom","content","create","flex","absoluteFillObject","justifyContent"],"sources":["Modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  BackHandler,\n  Easing,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  ViewStyle,\n  View,\n  NativeEventSubscription,\n} from 'react-native';\nimport {\n  getStatusBarHeight,\n  getBottomSpace,\n} from 'react-native-iphone-x-helper';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport useAnimatedValue from '../utils/useAnimatedValue';\nimport { addEventListener } from '../utils/addEventListener';\n\nexport type Props = {\n  /**\n   * Determines whether clicking outside the modal dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Callback that is called when the user dismisses the modal.\n   */\n  onDismiss?: () => void;\n  /**\n   * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the modal.\n   */\n  overlayAccessibilityLabel?: string;\n  /**\n   * Determines Whether the modal is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Modal`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the content of the modal\n   */\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style for the wrapper of the modal.\n   * Use this prop to change the default wrapper style or to override safe area insets with marginTop and marginBottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\nconst DEFAULT_DURATION = 220;\nconst TOP_INSET = getStatusBarHeight(true);\nconst BOTTOM_INSET = getBottomSpace();\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/modal.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showModal = () => setVisible(true);\n *   const hideModal = () => setVisible(false);\n *   const containerStyle = {backgroundColor: 'white', padding: 20};\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={containerStyle}>\n *           <Text>Example Modal.  Click outside this area to dismiss.</Text>\n *         </Modal>\n *       </Portal>\n *       <Button style={{marginTop: 30}} onPress={showModal}>\n *         Show\n *       </Button>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nfunction Modal({\n  dismissable = true,\n  visible = false,\n  overlayAccessibilityLabel = 'Close modal',\n  onDismiss,\n  children,\n  contentContainerStyle,\n  style,\n  theme,\n  testID,\n}: Props) {\n  const visibleRef = React.useRef(visible);\n\n  React.useEffect(() => {\n    visibleRef.current = visible;\n  });\n\n  const { colors, animation } = theme;\n\n  const opacity = useAnimatedValue(visible ? 1 : 0);\n\n  const [rendered, setRendered] = React.useState(visible);\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  const handleBack = () => {\n    if (dismissable) {\n      hideModal();\n    }\n    return true;\n  };\n\n  const subscription = React.useRef<NativeEventSubscription | undefined>(\n    undefined\n  );\n\n  const showModal = () => {\n    subscription.current?.remove();\n    subscription.current = addEventListener(\n      BackHandler,\n      'hardwareBackPress',\n      handleBack\n    );\n\n    const { scale } = animation;\n\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const removeListeners = () => {\n    if (subscription.current?.remove) {\n      subscription.current?.remove();\n    } else {\n      BackHandler.removeEventListener('hardwareBackPress', handleBack);\n    }\n  };\n\n  const hideModal = () => {\n    removeListeners();\n    const { scale } = animation;\n\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (!finished) {\n        return;\n      }\n\n      if (visible && onDismiss) {\n        onDismiss();\n      }\n\n      if (visibleRef.current) {\n        showModal();\n      } else {\n        setRendered(false);\n      }\n    });\n  };\n\n  const prevVisible = React.useRef<boolean | null>(null);\n\n  React.useEffect(() => {\n    if (prevVisible.current !== visible) {\n      if (visible) {\n        showModal();\n      } else {\n        hideModal();\n      }\n    }\n    prevVisible.current = visible;\n  });\n\n  React.useEffect(() => {\n    return removeListeners;\n  }, []);\n\n  if (!rendered) return null;\n\n  return (\n    <Animated.View\n      pointerEvents={visible ? 'auto' : 'none'}\n      accessibilityViewIsModal\n      accessibilityLiveRegion=\"polite\"\n      style={StyleSheet.absoluteFill}\n      onAccessibilityEscape={hideModal}\n      testID={testID}\n    >\n      <TouchableWithoutFeedback\n        accessibilityLabel={overlayAccessibilityLabel}\n        accessibilityRole=\"button\"\n        disabled={!dismissable}\n        onPress={dismissable ? hideModal : undefined}\n        importantForAccessibility=\"no\"\n      >\n        <Animated.View\n          testID={`${testID}-backdrop`}\n          style={[\n            styles.backdrop,\n            { backgroundColor: colors.backdrop, opacity },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <View\n        style={[\n          styles.wrapper,\n          { marginTop: TOP_INSET, marginBottom: BOTTOM_INSET },\n          style,\n        ]}\n        pointerEvents=\"box-none\"\n      >\n        <Surface\n          style={\n            [\n              { opacity },\n              styles.content,\n              contentContainerStyle,\n            ] as StyleProp<ViewStyle>\n          }\n        >\n          {children}\n        </Surface>\n      </View>\n    </Animated.View>\n  );\n}\n\nexport default withTheme(Modal);\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1,\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n  },\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}