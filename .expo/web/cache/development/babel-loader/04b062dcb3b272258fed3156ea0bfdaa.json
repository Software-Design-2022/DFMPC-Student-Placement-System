{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { firebase } from \"../firebase\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport \"../global\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\nvar SPACING = 20;\nvar image = {\n  uri: \"https://reactjs.org/logo-og.png\"\n};\nvar Login = function Login() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var navigation = useNavigation();\n\n  function showAlert(title, message) {\n    Alert.alert(title, message, [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }], {\n      cancelable: true\n    });\n  }\n  function setUserVariables(data) {\n    authUser = data;\n    authUserID = data.child(\"id\").val();\n\n    authName = authUser.child(\"user_FirstName\").val();\n    authLastName = authUser.child(\"user_LastName\").val();\n    authUserProfilePic = authUser.child(\"user_profile_photo/\").val();\n    authUserRef = firebase.database().ref(\"/users\") + \"/\" + authUserID + \"/\";\n    console.log(\"User ID: \" + authUserID + \" authenticated.\");\n  }\n  var LoginFirebase = function LoginFirebase() {\n\n    var found = false;\n    firebase.database().ref(\"/users\").on(\"value\", function (snapshot) {\n      var key = snapshot.forEach(function (data) {\n        var check_email = snapshot.child(data.key + \"/email\").val();\n        var encrypted = snapshot.child(data.key + \"/password_digest\").val();\n        if (check_email === email) {\n\n          found = true;\n\n          if (encrypted === password) {\n            setUserVariables(data);\n            console.log(\"User authenticated sucessfully! Storing variables...\");\n            navigation.navigate(\"Dashboard\");\n          } else {\n            showAlert(\"Password Error\", \"Your email and password do not match\");\n          }\n        }\n      });\n      if (found === false) {\n        showAlert(\"Email Error\", \"user does not exist\");\n      }\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container\n    ,\n    children: [_jsx(View, {\n      children: _jsx(Image, {\n        source: {\n          uri: \"https://www.wits.ac.za/media/wits-university/news-and-events/images/logos-and-icons/Wits-Logo-Mono-Neg-Legal-600x300.png\"\n        },\n        style: {\n          width: 300,\n          height: 150\n        }\n      })\n    }), _jsxs(View, {\n      style: styles.inputStyle,\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Enter password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsx(View, {\n      style: {\n        paddingTop: 12,\n        width: \"40%\"\n      },\n      children: _jsx(LinearGradient, {\n        colors: [\"rgba(28,72,123,255)\", \" rgba(28,72,123,255))\", \"rgba(28,72,123,255)\"],\n        style: styles.linearGradient,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            LoginFirebase();\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Login\"\n          })\n        })\n      })\n    })]\n  })\n  ;\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(28,56,107,255)\"\n  },\n  inputStyle: {\n    width: \"60%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 15,\n    marginTop: 10,\n    marginTop: 15\n  },\n  linearGradient: {\n    height: 40,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderRadius: 5,\n    paddingTop: 6,\n    borderWidth: 0,\n    marginTop: 10,\n    borderColor: \"rgba(28,72,123,255)\"\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: \"700\",\n    textAlign: \"center\",\n    color: \"white\",\n    backgroundColor: \"transparent\"\n  }\n});",
  "map": {
    "version": 3,
    "names": [
      "React",
      "useState",
      "useEffect",
      "firebase",
      "useNavigation",
      "LinearGradient",
      "AVATAR_SIZE",
      "ICON_SIZE",
      "SPACING",
      "image",
      "uri",
      "Login",
      "email",
      "setEmail",
      "password",
      "setPassword",
      "navigation",
      "showAlert",
      "title",
      "message",
      "Alert",
      "alert",
      "text",
      "style",
      "cancelable",
      "setUserVariables",
      "data",
      "authUser",
      "authUserID",
      "child",
      "val",
      "authName",
      "authLastName",
      "authUserProfilePic",
      "authUserRef",
      "database",
      "ref",
      "console",
      "log",
      "LoginFirebase",
      "found",
      "on",
      "snapshot",
      "key",
      "forEach",
      "check_email",
      "encrypted",
      "navigate",
      "styles",
      "container",
      "width",
      "height",
      "inputStyle",
      "input",
      "paddingTop",
      "linearGradient",
      "buttonText",
      "StyleSheet",
      "create",
      "flex",
      "justifyContent",
      "alignItems",
      "backgroundColor",
      "padding",
      "borderRadius",
      "marginTop",
      "paddingLeft",
      "paddingRight",
      "borderWidth",
      "borderColor",
      "fontSize",
      "fontWeight",
      "textAlign",
      "color"
    ],
    "sources": ["D:/repos/DFMPC-Student-Placement-System/Screens/Login.js"],
    "sourcesContent": [
      "import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Platform,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  TouchableHighlight,\r\n  StyleSheet,\r\n  Text,\r\n  Button,\r\n  TextInput,\r\n  View,\r\n  Alert,\r\n  Image,\r\n} from \"react-native\";\r\nimport { firebase } from \"../firebase\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\nimport \"../global\";\r\n\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 80;\r\nconst SPACING = 20;\r\nconst image = { uri: \"https://reactjs.org/logo-og.png\" };\r\n\r\nconst Login = () => {\r\n  //Login Screen\r\n  const [email, setEmail] = useState(\"\"); //email\r\n  const [password, setPassword] = useState(\"\"); //password\r\n  const navigation = useNavigation(); //navigation between screens\r\n\r\n  function showAlert(title, message) {\r\n    Alert.alert(\r\n      title,\r\n      message,\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          style: \"cancel\",\r\n        },\r\n      ],\r\n      {\r\n        cancelable: true,\r\n      }\r\n    );\r\n  }\r\n\r\n  function setUserVariables(data) {\r\n    // store information about the user who is currently logged in\r\n    authUser = data;\r\n    authUserID = data.child(\"id\").val();\r\n    //authStudentNumber= authUser.child(\"\")user_FirstName\r\n\r\n    authName = authUser.child(\"user_FirstName\").val();\r\n    authLastName = authUser.child(\"user_LastName\").val();\r\n    authUserProfilePic = authUser.child(\"user_profile_photo/\").val();\r\n    authUserRef = firebase.database().ref(\"/users\") + \"/\" + authUserID + \"/\";\r\n    console.log(\"User ID: \" + authUserID + \" authenticated.\");\r\n  }\r\n\r\n  const LoginFirebase = () => {\r\n    // login with email and password\r\n\r\n    // check if email exists in the database if so then hash pass and compare\r\n    /* var found = false;\r\n    var snapshot = firebase\r\n    .firestore()\r\n    .collection(\"users\") // Get collection of protocols\r\n    .get() // Get all items in collection\r\n    .then((querySnapshot) => {\r\n    \r\n   // For each item in collection\r\n   querySnapshot.forEach(function (doc) {\r\n    // For each item in collection\r\n      if(doc.data().email===email){\r\n        found = true;\r\n        // user exists\r\n        if(doc.data().password_digest===password){\r\n          setUserVariables(doc.data()); // so that we can keep track of who is logged in currenctly\r\n          console.log(\r\n            \"User authenticated sucessfully! Storing variables...\"\r\n          );\r\n          navigation.navigate(\"Dashboard\");\r\n        } else {\r\n          showAlert(\r\n            \"Password Error\",\r\n            \"Your email and password do not match\"\r\n          );\r\n        \r\n        }\r\n      }\r\n      \r\n  });\r\n  if (found === false) {\r\n    showAlert(\"Email Error\", \"user does not exist\");\r\n  }\r\n});\r\n */\r\n\r\n    var found = false;\r\n    firebase\r\n      .database()\r\n      .ref(\"/users\")\r\n      .on(\"value\", (snapshot) => {\r\n        const key = snapshot.forEach(function (data) {\r\n          const check_email = snapshot.child(data.key + \"/email\").val();\r\n\r\n          const encrypted = snapshot.child(data.key + \"/password_digest\").val();\r\n          if (check_email === email) {\r\n            // compare entered email with current email on the snapshot\r\n\r\n            found = true; // sets found to true when we have found a matching email int the database\r\n\r\n            if (encrypted === password) {\r\n              // compares entered password to the password for the corresponding user in the database\r\n              setUserVariables(data); // so that we can keep track of who is logged in currenctly\r\n              console.log(\r\n                \"User authenticated sucessfully! Storing variables...\"\r\n              );\r\n              navigation.navigate(\"Dashboard\");\r\n            } else {\r\n              showAlert(\r\n                \"Password Error\",\r\n                \"Your email and password do not match\"\r\n              );\r\n            }\r\n          }\r\n        });\r\n        if (found === false) {\r\n          showAlert(\"Email Error\", \"user does not exist\");\r\n        }\r\n      });\r\n  };\r\n  // this allows you to switch between different screens\r\n\r\n  return (\r\n    //TouchableWithoutFeedback - when i click anywhen outside od the keyboard, the keyboard will disappear\r\n\r\n    //<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      // needs fixing // when keyboard appers things move up a bit\r\n    >\r\n      <View>\r\n        <Image\r\n          source={{\r\n            uri: \"https://www.wits.ac.za/media/wits-university/news-and-events/images/logos-and-icons/Wits-Logo-Mono-Neg-Legal-600x300.png\",\r\n          }}\r\n          style={{ width: 300, height: 150 }}\r\n        ></Image>\r\n      </View>\r\n      <View style={styles.inputStyle}>\r\n        <TextInput\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)} //  set email to what the text is\r\n          style={styles.input}\r\n        ></TextInput>\r\n        <TextInput\r\n          placeholder=\"Enter password\"\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)} // set password to what the text is\r\n          style={styles.input}\r\n          secureTextEntry\r\n        ></TextInput>\r\n      </View>\r\n      <View style={{ paddingTop: 12, width: \"40%\" }}>\r\n        <LinearGradient\r\n          colors={[\r\n            \"rgba(28,72,123,255)\",\r\n            \" rgba(28,72,123,255))\",\r\n            \"rgba(28,72,123,255)\",\r\n          ]}\r\n          style={styles.linearGradient}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              LoginFirebase();\r\n            }} // when user clicks on login button\r\n          >\r\n            <Text style={styles.buttonText}>Login</Text>\r\n          </TouchableOpacity>\r\n        </LinearGradient>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n    // </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(28,56,107,255)\",\r\n  },\r\n\r\n  inputStyle: {\r\n    width: \"60%\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    borderRadius: 15,\r\n    marginTop: 10,\r\n    marginTop: 15,\r\n  },\r\n  linearGradient: {\r\n    height: 40,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderRadius: 5,\r\n    paddingTop: 6,\r\n    borderWidth: 0,\r\n    marginTop: 10,\r\n    borderColor: \"rgba(28,72,123,255)\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 18,\r\n    fontWeight: \"700\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n});\r\n"
    ],
    "mappings": "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"
  },
  "metadata": {},
  "sourceType": "module"
}
