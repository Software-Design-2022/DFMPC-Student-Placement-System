{
  "ast": null,
  "code": "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Calendar, Agenda } from \"react-native-calendars\";\nimport React, { useState, PureComponent } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card, Avatar } from \"react-native-paper\";\nimport { firebase, db } from \"../firebase\";\nimport { getCurrentDate } from \"../HelperFunctions\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar data = [];\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar SPACING = 20;\nvar ICON_SIZE = 75;\nvar initialDate = getCurrentDate();\nvar compare = function compare(obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n};\n\nfunction sendToFirestore(state) {\n  return _regeneratorRuntime.async(function sendToFirestore$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"events\").add({\n            name: state.eventtext,\n            start_date: state.startdatetext,\n            end_date: state.enddatetext,\n            id: Math.max(50, Math.floor(Math.random() * 150)),\n            programme: state.notetext\n          }).then(function () {\n            Alert.alert(\"Event Added\");\n          }));\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction eventsData(onReceiveList) {\n  var events, snapshot;\n  return _regeneratorRuntime.async(function eventsData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          events = [];\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"events\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              var start = doc.data().start_date,\n                end = doc.data().end_date,\n                name = doc.data().name,\n                id = doc.data().id,\n                programme = doc.data().programme,\n                key = events.length + 1;\n              var date = new Date();\n              var date2 = new Date(start);\n              var diff = Math.ceil((date2 - date) / (1000 * 3600 * 24));\n              if (Math.abs(diff) < 90) {\n                events.push({\n                  name: name,\n                  key: key,\n                  start: start,\n                  end: end,\n                  id: id,\n                  programme: programme\n                });\n              }\n            });\n          }));\n        case 3:\n          snapshot = _context2.sent;\n          onReceiveList(events);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nLogBox.ignoreLogs([\"Setting a timer\"]);\nvar EventsCalendar = function (_PureComponent) {\n  _inherits(EventsCalendar, _PureComponent);\n  var _super = _createSuper(EventsCalendar);\n  function EventsCalendar(props) {\n    var _this;\n    _classCallCheck(this, EventsCalendar);\n    _this = _super.call(this, props);\n    _this.state = {\n      items: {},\n      events: [],\n      modalVisible: false,\n      startdatetext: \"\",\n      enddatetext: \"\",\n      eventtext: \"\",\n      notetext: \"\"\n    };\n    return _this;\n  }\n  _createClass(EventsCalendar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return _jsxs(View, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: this.state.modalVisible,\n          onRequestClose: function onRequestClose() {\n            Alert.alert(\"Modal has been closed.\");\n            _this2.setState({\n              modalVisible: false\n            });\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: {\n                top: 50,\n                height: 400,\n                width: width / 1.2,\n                backgroundColor: \"white\",\n                borderRadius: 10,\n                borderWidth: 4\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontSize: 25,\n                  top: 10,\n                  textAlign: \"center\"\n                },\n                children: \"Create Event\"\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"Event name\"\n                }), _jsx(TextInput\n                , {\n                  style: styles.message,\n                  placeholder: \"Enter name\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      eventtext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"Start date\"\n                }), _jsx(TextInput\n                , {\n                  style: styles.message,\n                  placeholder: \"YYYY-MM-DD\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      startdatetext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"End date\"\n                }), _jsx(TextInput\n                , {\n                  style: styles.message,\n                  placeholder: \"YYYY-MM-DD\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      enddatetext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"Notes\"\n                }), _jsx(TextInput\n                , {\n                  style: styles.message,\n                  placeholder: \"Type notes here\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      notetext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: \"row\",\n                  left: 20,\n                  top: 42\n                },\n                children: [_jsx(Pressable, {\n                  style: [styles.button, styles.buttonClose, {\n                    width: width / 3,\n                    left: 10,\n                    bottom: 30\n                  }],\n                  onPress: function onPress() {\n                    return _this2.setState({\n                      modalVisible: false\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.textStyle],\n                    children: \"Done\"\n                  })\n                }), _jsx(Pressable, {\n                  style: [styles.button, styles.buttonClose, {\n                    width: width / 3,\n                    left: 20,\n                    bottom: 30,\n                    backgroundColor: \"rgba(28,56,107,1)\"\n                  }],\n                  onPress: function onPress() {\n                    return sendToFirestore(_this2.state);\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.textStyle],\n                    children: \"Add\"\n                  })\n                })]\n              })]\n            })\n          })\n        }), _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.setState({\n                modalVisible: true\n              });\n            },\n            style: {\n              backgroundColor: \"rgba(28,56,107,0.0)\",\n              position: \"absolute\",\n              borderRadius: 50,\n              width: 50,\n              height: 50,\n              zIndex: 1,\n              right: 20,\n              top: height - 250,\n              alignItems: \"center\"\n            },\n            children: _jsx(AntDesign, {\n              name: \"pluscircle\",\n              color: \"black\",\n              size: 50\n            })\n          })\n        }), _jsx(Agenda, {\n          theme: {\n            calendarBackground: \"white\",\n            agendaKnobColor: \"rgba(28,56,107,0.9)\",\n            backgroundColor: \"rgba(28,56,107,0.9)\",\n            agendaDayTextColor: \"white\",\n            agendaDayNumColor: \"white\",\n            agendaTodayColor: \"rgba(255,255,255,0.9)\",\n            monthTextColor: \"rgba(28,56,107,0.9)\",\n            todayBackgroundColor: \"rgba(28,56,107,0.9)\",\n            textSectionTitleColor: \"rgba(28,56,107,0.9)\",\n            selectedDayBackgroundColor: \"rgba(28,56,107,0.9)\",\n            dayTextColor: \"rgba(28,56,107,0.9)\",\n            dotColor: \"black\"\n          },\n\n          minDate: \"2022-01-01\",\n          maxDate: \"2023-01-01\",\n          refreshing: false,\n          refreshControl: null,\n          items: this.state.items,\n          selected: new Date(),\n          initialNumToRender: 5,\n          pastScrollRange: 5,\n          futureScrollRange: 5,\n          windowSize: 15,\n          maxToRenderPerBatch: 5,\n          updateCellsBatchingPeriod: 5,\n          removeClippedSubviews: false,\n          onEndReachedThreshold: 0.1,\n          loadItemsForMonth: this.loadFromList.bind(this),\n          renderItem: this.renderItem.bind(this),\n          renderEmptyDate: this.renderEmptyDate.bind(this)\n        })]\n      });\n    }\n  }, {\n    key: \"loadFromList\",\n    value: function loadFromList() {\n      var _this3 = this;\n      var onReceive = function onReceive(data) {\n        if (compare(data, _this3.state.events) === false) {\n          _this3.setState({\n            events: data,\n            item: {}\n          });\n        }\n      };\n      eventsData(onReceive);\n      this.state.events.map(function (key, index) {\n        var day = key.start;\n        if (!_this3.state.items[day]) {\n          _this3.state.items[day] = [];\n          _this3.state.items[day].push({\n            Name: \"Event: \" + key.name,\n            programme: \"programme: \" + key.programme,\n            start: \"start day: \" + key.start,\n            end: \"end day: \" + key.end,\n            height: Math.max(50, Math.floor(Math.random() * 150))\n          });\n        }\n        var newItems = {};\n        Object.keys(_this3.state.items).forEach(function (key) {\n          newItems[key] = _this3.state.items[key];\n        });\n        _this3.setState({\n          items: newItems\n        });\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return _jsxs(View, {\n        style: [styles.item, {\n          height: item.height + 50\n        }],\n        children: [_jsx(Text, {\n          children: item.Name\n        }), _jsx(Text, {\n          children: item.programme\n        }), _jsx(Text, {\n          children: item.start\n        }), _jsx(Text, {\n          children: item.end\n        })]\n      });\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return _jsx(View, {\n        style: styles.emptyDate,\n        children: _jsx(Text, {\n          children: \"No Agenda On this day!\"\n        })\n      });\n    }\n  }]);\n  return EventsCalendar;\n}(PureComponent);\nexport { EventsCalendar as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"white\",\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    width: width / 2,\n    height: height / 3\n  },\n  button: {\n    borderRadius: 10,\n    padding: 10,\n    elevation: 2,\n    bottom: -height / 5\n  },\n  buttonClose: {\n    backgroundColor: \"black\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});",
  "map": {
    "version": 3,
    "names": [
      "Calendar",
      "Agenda",
      "React",
      "useState",
      "PureComponent",
      "Card",
      "Avatar",
      "firebase",
      "db",
      "getCurrentDate",
      "useNavigation",
      "AntDesign",
      "data",
      "Dimensions",
      "get",
      "width",
      "height",
      "SPACING",
      "ICON_SIZE",
      "initialDate",
      "compare",
      "obj1",
      "obj2",
      "JSON",
      "stringify",
      "sendToFirestore",
      "state",
      "firestore",
      "collection",
      "add",
      "name",
      "eventtext",
      "start_date",
      "startdatetext",
      "end_date",
      "enddatetext",
      "id",
      "Math",
      "max",
      "floor",
      "random",
      "programme",
      "notetext",
      "then",
      "Alert",
      "alert",
      "eventsData",
      "onReceiveList",
      "events",
      "querySnapshot",
      "forEach",
      "doc",
      "start",
      "end",
      "key",
      "length",
      "date",
      "Date",
      "date2",
      "diff",
      "ceil",
      "abs",
      "push",
      "snapshot",
      "LogBox",
      "ignoreLogs",
      "EventsCalendar",
      "props",
      "items",
      "modalVisible",
      "flex",
      "setState",
      "styles",
      "centeredView",
      "top",
      "backgroundColor",
      "borderRadius",
      "borderWidth",
      "fontSize",
      "textAlign",
      "padding",
      "marginBottom",
      "fontWeight",
      "message",
      "newText",
      "text",
      "flexDirection",
      "left",
      "button",
      "buttonClose",
      "bottom",
      "textStyle",
      "position",
      "zIndex",
      "right",
      "alignItems",
      "calendarBackground",
      "agendaKnobColor",
      "agendaDayTextColor",
      "agendaDayNumColor",
      "agendaTodayColor",
      "monthTextColor",
      "todayBackgroundColor",
      "textSectionTitleColor",
      "selectedDayBackgroundColor",
      "dayTextColor",
      "dotColor",
      "loadFromList",
      "bind",
      "renderItem",
      "renderEmptyDate",
      "onReceive",
      "item",
      "map",
      "index",
      "day",
      "Name",
      "newItems",
      "Object",
      "keys",
      "emptyDate",
      "StyleSheet",
      "create",
      "marginRight",
      "marginTop",
      "paddingTop",
      "justifyContent",
      "modalView",
      "margin",
      "shadowColor",
      "shadowOffset",
      "shadowOpacity",
      "shadowRadius",
      "elevation",
      "color",
      "modalText"
    ],
    "sources": [
      "D:/repos/DFMPC-Student-Placement-System/Screens/EventsCalendar.js"
    ],
    "sourcesContent": [
      "import { Calendar, Agenda } from \"react-native-calendars\"; // 1.5.3\r\nimport React, { useState, PureComponent } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  Pressable,\r\n  LogBox,\r\n  Modal,\r\n  TouchableHighlight,\r\n  Image,\r\n  Dimensions,\r\n  TextInput,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { Card, Avatar } from \"react-native-paper\";\r\nimport { firebase, db } from \"../firebase\";\r\nimport { getCurrentDate } from \"../HelperFunctions\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nconst data = [];\r\nconst { width, height } = Dimensions.get(\"screen\");\r\nconst SPACING = 20;\r\nconst ICON_SIZE = 75;\r\nconst initialDate = getCurrentDate();\r\n\r\nconst compare = (obj1, obj2) => {\r\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n};\r\n\r\n//send event data to database\r\nasync function sendToFirestore(state) {\r\n  await firebase\r\n    .firestore()\r\n    .collection(\"events\")\r\n    .add({\r\n      name: state.eventtext,\r\n      start_date: state.startdatetext,\r\n      end_date: state.enddatetext,\r\n      id: Math.max(50, Math.floor(Math.random() * 150)),\r\n      programme: state.notetext,\r\n    })\r\n    .then(() => {\r\n      Alert.alert(\"Event Added\");\r\n    });\r\n}\r\n\r\n// function to retrieve events from firestore\r\nasync function eventsData(onReceiveList) {\r\n  const events = [];\r\n  var snapshot = await firebase\r\n    .firestore()\r\n    .collection(\"events\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach(function (doc) {\r\n        let start = doc.data().start_date,\r\n          end = doc.data().end_date,\r\n          name = doc.data().name,\r\n          id = doc.data().id,\r\n          programme = doc.data().programme,\r\n          key = events.length + 1;\r\n        let date = new Date();\r\n        let date2 = new Date(start);\r\n        let diff = Math.ceil((date2 - date) / (1000 * 3600 * 24));\r\n        if (Math.abs(diff) < 90) {\r\n          events.push({\r\n            name: name,\r\n            key: key,\r\n            start: start,\r\n            end: end,\r\n            id: id,\r\n            programme: programme,\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n  onReceiveList(events);\r\n}\r\n\r\nLogBox.ignoreLogs([\"Setting a timer\"]);\r\nexport default class EventsCalendar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: {},\r\n      events: [],\r\n      modalVisible: false,\r\n      startdatetext: \"\",\r\n      enddatetext: \"\",\r\n      eventtext: \"\",\r\n      notetext: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={this.state.modalVisible}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            this.setState({\r\n              modalVisible: false,\r\n            });\r\n          }}\r\n        >\r\n          <View style={styles.centeredView}>\r\n            <View\r\n              style={{\r\n                top: 50,\r\n                height: 400,\r\n                width: width / 1.2,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                borderWidth: 4,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 25, top: 10, textAlign: \"center\" }}>\r\n                Create Event\r\n              </Text>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>\r\n                  Event name\r\n                </Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"Enter name\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ eventtext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>\r\n                  Start date\r\n                </Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ startdatetext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>\r\n                  End date\r\n                </Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ enddatetext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>Notes</Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"Type notes here\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ notetext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ flexDirection: \"row\", left: 20, top: 42 }}>\r\n                <Pressable\r\n                  style={[\r\n                    styles.button,\r\n                    styles.buttonClose,\r\n                    { width: width / 3, left: 10, bottom: 30 },\r\n                  ]}\r\n                  onPress={() =>\r\n                    this.setState({\r\n                      modalVisible: false,\r\n                    })\r\n                  }\r\n                >\r\n                  <Text style={[styles.textStyle]}>Done</Text>\r\n                </Pressable>\r\n                <Pressable\r\n                  style={[\r\n                    styles.button,\r\n                    styles.buttonClose,\r\n                    {\r\n                      width: width / 3,\r\n                      left: 20,\r\n                      bottom: 30,\r\n                      backgroundColor: \"rgba(28,56,107,1)\",\r\n                    },\r\n                  ]}\r\n                  onPress={() => sendToFirestore(this.state)}\r\n                >\r\n                  <Text style={[styles.textStyle]}>Add</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n        <View>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              this.setState({\r\n                modalVisible: true,\r\n              })\r\n            }\r\n            style={{\r\n              backgroundColor: \"rgba(28,56,107,0.0)\",\r\n              position: \"absolute\",\r\n              borderRadius: 50,\r\n              width: 50,\r\n              height: 50,\r\n              zIndex: 1,\r\n              right: 20,\r\n              top: height - 250,\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <AntDesign name=\"pluscircle\" color=\"black\" size={50} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Agenda\r\n          theme={{\r\n            calendarBackground: \"white\", //agenda background\r\n            agendaKnobColor: \"rgba(28,56,107,0.9)\", // knob color\r\n            backgroundColor: \"rgba(28,56,107,0.9)\", // background color below agenda\r\n            agendaDayTextColor: \"white\", // day name\r\n            agendaDayNumColor: \"white\", // day number\r\n            agendaTodayColor: \"rgba(255,255,255,0.9)\", // today in list\r\n            monthTextColor: \"rgba(28,56,107,0.9)\", // name in calendar\r\n            todayBackgroundColor: \"rgba(28,56,107,0.9)\",\r\n            textSectionTitleColor: \"rgba(28,56,107,0.9)\",\r\n            selectedDayBackgroundColor: \"rgba(28,56,107,0.9)\", // calendar sel date\r\n            dayTextColor: \"rgba(28,56,107,0.9)\", // calendar day\r\n            dotColor: \"black\", // dots\r\n          }}\r\n          minDate={\"2022-01-01\"}\r\n          maxDate={\"2023-01-01\"}\r\n          refreshing={false}\r\n          refreshControl={null}\r\n          items={this.state.items}\r\n          selected={new Date()}\r\n          initialNumToRender={5}\r\n          pastScrollRange={5}\r\n          futureScrollRange={5}\r\n          windowSize={15}\r\n          maxToRenderPerBatch={5}\r\n          updateCellsBatchingPeriod={5}\r\n          removeClippedSubviews={false}\r\n          onEndReachedThreshold={0.1}\r\n          loadItemsForMonth={this.loadFromList.bind(this)}\r\n          renderItem={this.renderItem.bind(this)}\r\n          renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  loadFromList() {\r\n    const onReceive = (data) => {\r\n      if (compare(data, this.state.events) === false) {\r\n        this.setState({\r\n          events: data,\r\n          item: {},\r\n        });\r\n      }\r\n    };\r\n    eventsData(onReceive);\r\n    this.state.events.map((key, index) => {\r\n      const day = key.start;\r\n      if (!this.state.items[day]) {\r\n        this.state.items[day] = [];\r\n        this.state.items[day].push({\r\n          Name: \"Event: \" + key.name,\r\n          programme: \"programme: \" + key.programme,\r\n          start: \"start day: \" + key.start,\r\n          end: \"end day: \" + key.end,\r\n          height: Math.max(50, Math.floor(Math.random() * 150)),\r\n        });\r\n      }\r\n\r\n      const newItems = {};\r\n      Object.keys(this.state.items).forEach((key) => {\r\n        newItems[key] = this.state.items[key];\r\n      });\r\n      this.setState({\r\n        items: newItems,\r\n      });\r\n    });\r\n  }\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <View style={[styles.item, { height: item.height + 50 }]}>\r\n        <Text>{item.Name}</Text>\r\n        <Text>{item.programme}</Text>\r\n        <Text>{item.start}</Text>\r\n        <Text>{item.end}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>No Agenda On this day!</Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n    width: width / 2,\r\n    height: height / 3,\r\n  },\r\n  button: {\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    elevation: 2,\r\n    bottom: -height / 5,\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    fontSize: 20,\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"
    ],
    "mappings": "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"
  },
  "metadata": {},
  "sourceType": "module"
}
