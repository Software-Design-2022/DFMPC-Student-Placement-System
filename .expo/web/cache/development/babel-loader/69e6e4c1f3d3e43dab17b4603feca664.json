{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function getNotificationChannelAsync(channelId) {\n  return _regeneratorRuntime.async(function getNotificationChannelAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.debug('Notification channels feature is only supported on Android.');\n          return _context.abrupt(\"return\", null);\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"mappings":";AAEA,eAAe,SAAeA,2BAA2B,CACvDC,SAAiB;EAAA;IAAA;MAAA;QAAA;UAEjBC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;UAAC,iCACtE,IAAI;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA","names":["getNotificationChannelAsync","channelId","console","debug"],"sourceRoot":"","sources":["../src/getNotificationChannelAsync.ts"],"sourcesContent":["import { NotificationChannel } from './NotificationChannelManager.types';\n\nexport default async function getNotificationChannelAsync(\n  channelId: string\n): Promise<NotificationChannel | null> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}