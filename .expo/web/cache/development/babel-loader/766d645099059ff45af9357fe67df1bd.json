{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Calendar, Agenda } from \"react-native-calendars\";\nimport React, { useState, PureComponent } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card, Avatar } from \"react-native-paper\";\nimport { firebase, db } from \"../firebase\";\nimport { getCurrentDate } from \"../HelperFunctions\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { createTopBar } from \"../HelperFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar data = [];\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar SPACING = 20;\nvar ICON_SIZE = 75;\n\nvar compare = function compare(obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n};\n\nfunction sendToFirestore(state) {\n  return _regeneratorRuntime.async(function sendToFirestore$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"events\").add({\n            name: state.eventtext,\n            start_date: state.startdatetext,\n            end_date: state.enddatetext,\n            id: Math.max(50, Math.floor(Math.random() * 150)),\n            programme: state.notetext\n          }).then(function () {\n            Alert.alert(\"Event Added\");\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction eventsData(onReceiveList) {\n  var events, snapshot;\n  return _regeneratorRuntime.async(function eventsData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          events = [];\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"events\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              var start = doc.data().start_date,\n                  end = doc.data().end_date,\n                  name = doc.data().name,\n                  id = doc.data().id,\n                  programme = doc.data().programme,\n                  key = events.length + 1;\n              var date = new Date();\n              var date2 = new Date(start);\n              var diff = Math.ceil((date2 - date) / (1000 * 3600 * 24));\n\n              if (Math.abs(diff) < 90) {\n                events.push({\n                  name: name,\n                  key: key,\n                  start: start,\n                  end: end,\n                  id: id,\n                  programme: programme\n                });\n              }\n            });\n          }));\n\n        case 3:\n          snapshot = _context2.sent;\n          onReceiveList(events);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nLogBox.ignoreLogs([\"Setting a timer\"]);\n\nvar EventsCalendar = function (_PureComponent) {\n  _inherits(EventsCalendar, _PureComponent);\n\n  var _super = _createSuper(EventsCalendar);\n\n  function EventsCalendar(props) {\n    var _this;\n\n    _classCallCheck(this, EventsCalendar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      items: {},\n      events: [],\n      modalVisible: false,\n      startdatetext: \"\",\n      enddatetext: \"\",\n      eventtext: \"\",\n      notetext: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(EventsCalendar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          top: SPACING * 2,\n          backgroundColor: \"white\"\n        },\n        children: [_jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: this.state.modalVisible,\n          onRequestClose: function onRequestClose() {\n            Alert.alert(\"Modal has been closed.\");\n\n            _this2.setState({\n              modalVisible: false\n            });\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: {\n                top: 50,\n                height: 400,\n                width: width / 1.2,\n                backgroundColor: \"white\",\n                borderRadius: 10,\n                borderWidth: 4\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontSize: 25,\n                  top: 10,\n                  textAlign: \"center\"\n                },\n                children: \"Create Event\"\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"Event name\"\n                }), _jsx(TextInput, {\n                  style: styles.message,\n                  placeholder: \"Enter name\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      eventtext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"Start date\"\n                }), _jsx(TextInput, {\n                  style: styles.message,\n                  placeholder: \"YYYY-MM-DD\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      startdatetext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"End date\"\n                }), _jsx(TextInput, {\n                  style: styles.message,\n                  placeholder: \"YYYY-MM-DD\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      enddatetext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"Notes\"\n                }), _jsx(TextInput, {\n                  style: styles.message,\n                  placeholder: \"Type notes here\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      notetext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: \"row\",\n                  left: 20,\n                  top: 42\n                },\n                children: [_jsx(Pressable, {\n                  style: [styles.button, styles.buttonClose, {\n                    width: width / 3,\n                    left: 10,\n                    bottom: 30\n                  }],\n                  onPress: function onPress() {\n                    return _this2.setState({\n                      modalVisible: false\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.textStyle],\n                    children: \"Done\"\n                  })\n                }), _jsx(Pressable, {\n                  style: [styles.button, styles.buttonClose, {\n                    width: width / 3,\n                    left: 20,\n                    bottom: 30,\n                    backgroundColor: \"rgba(28,56,107,1)\"\n                  }],\n                  onPress: function onPress() {\n                    return sendToFirestore(_this2.state);\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.textStyle],\n                    children: \"Add\"\n                  })\n                })]\n              })]\n            })\n          })\n        }), _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.setState({\n                modalVisible: true\n              });\n            },\n            style: {\n              backgroundColor: \"rgba(28,56,107,0.0)\",\n              position: \"absolute\",\n              borderRadius: 50,\n              width: 50,\n              height: 50,\n              zIndex: 1,\n              right: 20,\n              top: height - 175,\n              alignItems: \"center\"\n            },\n            children: _jsx(AntDesign, {\n              name: \"pluscircle\",\n              color: \"black\",\n              size: 50\n            })\n          })\n        }), _jsx(Agenda, {\n          theme: {\n            calendarBackground: \"white\",\n            agendaKnobColor: \"rgba(28,56,107,0.9)\",\n            backgroundColor: \"rgba(28,56,107,0.9)\",\n            agendaDayTextColor: \"white\",\n            agendaDayNumColor: \"white\",\n            agendaTodayColor: \"rgba(255,255,255,0.9)\",\n            monthTextColor: \"rgba(28,56,107,0.9)\",\n            todayBackgroundColor: \"rgba(28,56,107,0.9)\",\n            textSectionTitleColor: \"rgba(28,56,107,0.9)\",\n            selectedDayBackgroundColor: \"rgba(28,56,107,0.9)\",\n            dayTextColor: \"rgba(28,56,107,0.9)\",\n            dotColor: \"black\"\n          },\n          minDate: \"2022-01-01\",\n          maxDate: \"2023-01-01\",\n          refreshing: false,\n          refreshControl: null,\n          items: this.state.items,\n          selected: new Date(),\n          initialNumToRender: 5,\n          pastScrollRange: 5,\n          futureScrollRange: 5,\n          windowSize: 15,\n          maxToRenderPerBatch: 5,\n          updateCellsBatchingPeriod: 5,\n          removeClippedSubviews: false,\n          onEndReachedThreshold: 0.1,\n          loadItemsForMonth: this.loadFromList.bind(this),\n          renderItem: this.renderItem.bind(this),\n          renderEmptyDate: this.renderEmptyDate.bind(this)\n        })]\n      });\n    }\n  }, {\n    key: \"loadFromList\",\n    value: function loadFromList() {\n      var _this3 = this;\n\n      var onReceive = function onReceive(data) {\n        if (compare(data, _this3.state.events) === false) {\n          _this3.setState({\n            events: data,\n            item: {}\n          });\n        }\n      };\n\n      eventsData(onReceive);\n      this.state.events.map(function (key, index) {\n        var day = key.start;\n\n        if (!_this3.state.items[day]) {\n          _this3.state.items[day] = [];\n\n          _this3.state.items[day].push({\n            Name: \"Event: \" + key.name,\n            programme: \"programme: \" + key.programme,\n            start: \"start day: \" + key.start,\n            end: \"end day: \" + key.end,\n            height: Math.max(50, Math.floor(Math.random() * 150))\n          });\n        }\n\n        var newItems = {};\n        Object.keys(_this3.state.items).forEach(function (key) {\n          newItems[key] = _this3.state.items[key];\n        });\n\n        _this3.setState({\n          items: newItems\n        });\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return _jsxs(View, {\n        style: [styles.item, {\n          height: item.height + 50\n        }],\n        children: [_jsx(Text, {\n          children: item.Name\n        }), _jsx(Text, {\n          children: item.programme\n        }), _jsx(Text, {\n          children: item.start\n        }), _jsx(Text, {\n          children: item.end\n        })]\n      });\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return _jsx(View, {\n        style: styles.emptyDate,\n        children: _jsx(Text, {\n          children: \"No Agenda On this day!\"\n        })\n      });\n    }\n  }]);\n\n  return EventsCalendar;\n}(PureComponent);\n\nexport { EventsCalendar as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"white\",\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    width: width / 2,\n    height: height / 3\n  },\n  button: {\n    borderRadius: 10,\n    padding: 10,\n    elevation: 2,\n    bottom: -height / 5\n  },\n  buttonClose: {\n    backgroundColor: \"black\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/Screens/EventsCalendar.js"],"names":["Calendar","Agenda","React","useState","PureComponent","Card","Avatar","firebase","db","getCurrentDate","useNavigation","AntDesign","createTopBar","data","Dimensions","get","width","height","SPACING","ICON_SIZE","compare","obj1","obj2","JSON","stringify","sendToFirestore","state","firestore","collection","add","name","eventtext","start_date","startdatetext","end_date","enddatetext","id","Math","max","floor","random","programme","notetext","then","Alert","alert","eventsData","onReceiveList","events","querySnapshot","forEach","doc","start","end","key","length","date","Date","date2","diff","ceil","abs","push","snapshot","LogBox","ignoreLogs","EventsCalendar","props","items","modalVisible","flex","top","backgroundColor","setState","styles","centeredView","borderRadius","borderWidth","fontSize","textAlign","padding","marginBottom","fontWeight","message","newText","text","flexDirection","left","button","buttonClose","bottom","textStyle","position","zIndex","right","alignItems","calendarBackground","agendaKnobColor","agendaDayTextColor","agendaDayNumColor","agendaTodayColor","monthTextColor","todayBackgroundColor","textSectionTitleColor","selectedDayBackgroundColor","dayTextColor","dotColor","loadFromList","bind","renderItem","renderEmptyDate","onReceive","item","map","index","day","Name","newItems","Object","keys","emptyDate","StyleSheet","create","marginRight","marginTop","paddingTop","justifyContent","modalView","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","color","modalText"],"mappings":"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","sourcesContent":["import { Calendar, Agenda } from \"react-native-calendars\"; // 1.5.3\r\nimport React, { useState, PureComponent } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  Pressable,\r\n  LogBox,\r\n  Modal,\r\n  TouchableHighlight,\r\n  Image,\r\n  Dimensions,\r\n  TextInput,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { Card, Avatar } from \"react-native-paper\";\r\nimport { firebase, db } from \"../firebase\";\r\nimport { getCurrentDate } from \"../HelperFunctions\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n//import { Icon } from \"react-native-paper/lib/typescript/components/Avatar/Avatar\";\r\nimport { createTopBar } from \"../HelperFunctions\";\r\n\r\nconst data = [];\r\nconst { width, height } = Dimensions.get(\"screen\");\r\nconst SPACING = 20;\r\nconst ICON_SIZE = 75;\r\n\r\nconst compare = (obj1, obj2) => {\r\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n};\r\n\r\n//send event data to database\r\nasync function sendToFirestore(state) {\r\n  await firebase\r\n    .firestore()\r\n    .collection(\"events\")\r\n    .add({\r\n      name: state.eventtext,\r\n      start_date: state.startdatetext,\r\n      end_date: state.enddatetext,\r\n      id: Math.max(50, Math.floor(Math.random() * 150)),\r\n      programme: state.notetext,\r\n    })\r\n    .then(() => {\r\n      Alert.alert(\"Event Added\");\r\n    });\r\n}\r\n\r\n// function to retrieve events from firestore\r\nasync function eventsData(onReceiveList) {\r\n  const events = [];\r\n  var snapshot = await firebase\r\n    .firestore()\r\n    .collection(\"events\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach(function (doc) {\r\n        let start = doc.data().start_date,\r\n          end = doc.data().end_date,\r\n          name = doc.data().name,\r\n          id = doc.data().id,\r\n          programme = doc.data().programme,\r\n          key = events.length + 1;\r\n        let date = new Date();\r\n        let date2 = new Date(start);\r\n        let diff = Math.ceil((date2 - date) / (1000 * 3600 * 24));\r\n        if (Math.abs(diff) < 90) {\r\n          events.push({\r\n            name: name,\r\n            key: key,\r\n            start: start,\r\n            end: end,\r\n            id: id,\r\n            programme: programme,\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n  onReceiveList(events);\r\n}\r\n\r\nLogBox.ignoreLogs([\"Setting a timer\"]);\r\nexport default class EventsCalendar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: {},\r\n      events: [],\r\n      modalVisible: false,\r\n      startdatetext: \"\",\r\n      enddatetext: \"\",\r\n      eventtext: \"\",\r\n      notetext: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1, top: SPACING * 2, backgroundColor: \"white\" }}>\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={this.state.modalVisible}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            this.setState({\r\n              modalVisible: false,\r\n            });\r\n          }}\r\n        >\r\n          <View style={styles.centeredView}>\r\n            <View\r\n              style={{\r\n                top: 50,\r\n                height: 400,\r\n                width: width / 1.2,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                borderWidth: 4,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 25, top: 10, textAlign: \"center\" }}>\r\n                Create Event\r\n              </Text>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>\r\n                  Event name\r\n                </Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"Enter name\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ eventtext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>\r\n                  Start date\r\n                </Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ startdatetext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>\r\n                  End date\r\n                </Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ enddatetext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>Notes</Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"Type notes here\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ notetext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ flexDirection: \"row\", left: 20, top: 42 }}>\r\n                <Pressable\r\n                  style={[\r\n                    styles.button,\r\n                    styles.buttonClose,\r\n                    { width: width / 3, left: 10, bottom: 30 },\r\n                  ]}\r\n                  onPress={() =>\r\n                    this.setState({\r\n                      modalVisible: false,\r\n                    })\r\n                  }\r\n                >\r\n                  <Text style={[styles.textStyle]}>Done</Text>\r\n                </Pressable>\r\n                <Pressable\r\n                  style={[\r\n                    styles.button,\r\n                    styles.buttonClose,\r\n                    {\r\n                      width: width / 3,\r\n                      left: 20,\r\n                      bottom: 30,\r\n                      backgroundColor: \"rgba(28,56,107,1)\",\r\n                    },\r\n                  ]}\r\n                  onPress={() => sendToFirestore(this.state)}\r\n                >\r\n                  <Text style={[styles.textStyle]}>Add</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n        <View>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              this.setState({\r\n                modalVisible: true,\r\n              })\r\n            }\r\n            style={{\r\n              backgroundColor: \"rgba(28,56,107,0.0)\",\r\n              position: \"absolute\",\r\n              borderRadius: 50,\r\n              width: 50,\r\n              height: 50,\r\n              zIndex: 1,\r\n              right: 20,\r\n              top: height - 175,\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <AntDesign name=\"pluscircle\" color=\"black\" size={50} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Agenda\r\n          theme={{\r\n            calendarBackground: \"white\", //agenda background\r\n            agendaKnobColor: \"rgba(28,56,107,0.9)\", // knob color\r\n            backgroundColor: \"rgba(28,56,107,0.9)\", // background color below agenda\r\n            agendaDayTextColor: \"white\", // day name\r\n            agendaDayNumColor: \"white\", // day number\r\n            agendaTodayColor: \"rgba(255,255,255,0.9)\", // today in list\r\n            monthTextColor: \"rgba(28,56,107,0.9)\", // name in calendar\r\n            todayBackgroundColor: \"rgba(28,56,107,0.9)\",\r\n            textSectionTitleColor: \"rgba(28,56,107,0.9)\",\r\n            selectedDayBackgroundColor: \"rgba(28,56,107,0.9)\", // calendar sel date\r\n            dayTextColor: \"rgba(28,56,107,0.9)\", // calendar day\r\n            dotColor: \"black\", // dots\r\n          }}\r\n          minDate={\"2022-01-01\"}\r\n          maxDate={\"2023-01-01\"}\r\n          refreshing={false}\r\n          refreshControl={null}\r\n          items={this.state.items}\r\n          selected={new Date()}\r\n          initialNumToRender={5}\r\n          pastScrollRange={5}\r\n          futureScrollRange={5}\r\n          windowSize={15}\r\n          maxToRenderPerBatch={5}\r\n          updateCellsBatchingPeriod={5}\r\n          removeClippedSubviews={false}\r\n          onEndReachedThreshold={0.1}\r\n          loadItemsForMonth={this.loadFromList.bind(this)}\r\n          renderItem={this.renderItem.bind(this)}\r\n          renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  loadFromList() {\r\n    const onReceive = (data) => {\r\n      if (compare(data, this.state.events) === false) {\r\n        this.setState({\r\n          events: data,\r\n          item: {},\r\n        });\r\n      }\r\n    };\r\n    eventsData(onReceive);\r\n    this.state.events.map((key, index) => {\r\n      const day = key.start;\r\n      if (!this.state.items[day]) {\r\n        this.state.items[day] = [];\r\n        this.state.items[day].push({\r\n          Name: \"Event: \" + key.name,\r\n          programme: \"programme: \" + key.programme,\r\n          start: \"start day: \" + key.start,\r\n          end: \"end day: \" + key.end,\r\n          height: Math.max(50, Math.floor(Math.random() * 150)),\r\n        });\r\n      }\r\n\r\n      const newItems = {};\r\n      Object.keys(this.state.items).forEach((key) => {\r\n        newItems[key] = this.state.items[key];\r\n      });\r\n      this.setState({\r\n        items: newItems,\r\n      });\r\n    });\r\n  }\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <View style={[styles.item, { height: item.height + 50 }]}>\r\n        <Text>{item.Name}</Text>\r\n        <Text>{item.programme}</Text>\r\n        <Text>{item.start}</Text>\r\n        <Text>{item.end}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>No Agenda On this day!</Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n    width: width / 2,\r\n    height: height / 3,\r\n  },\r\n  button: {\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    elevation: 2,\r\n    bottom: -height / 5,\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    fontSize: 20,\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}