{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { extractComponentProps } from \"../componentUpdater\";\nimport { parseDate, xdateToData, toMarkingFormat } from \"../interface\";\nimport { sameDate, sameMonth } from \"../dateutils\";\nimport { AGENDA_CALENDAR_KNOB } from \"../testIDs\";\nimport { VelocityTracker } from \"../velocityTracker\";\nimport { getCalendarDateString } from \"../services\";\nimport styleConstructor from \"./style\";\nimport WeekDaysNames from \"../commons/WeekDaysNames\";\nimport CalendarList from \"../calendar-list\";\nimport ReservationList from \"./reservation-list\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HEADER_HEIGHT = 104;\nvar KNOB_HEIGHT = 24;\n\nvar Agenda = function (_Component) {\n  _inherits(Agenda, _Component);\n\n  var _super = _createSuper(Agenda);\n\n  function Agenda(props) {\n    var _this;\n\n    _classCallCheck(this, Agenda);\n\n    _this = _super.call(this, props);\n    _this.scrollPad = React.createRef();\n    _this.calendar = React.createRef();\n    _this.knob = React.createRef();\n    _this.list = React.createRef();\n\n    _this.initialScrollPadPosition = function () {\n      return Math.max(0, _this.viewHeight - HEADER_HEIGHT);\n    };\n\n    _this.setScrollPadPosition = function (y, animated) {\n      var _this$scrollPad, _this$scrollPad$curre;\n\n      if ((_this$scrollPad = _this.scrollPad) != null && (_this$scrollPad$curre = _this$scrollPad.current) != null && _this$scrollPad$curre.scrollTo) {\n        _this.scrollPad.current.scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      } else {\n        var _this$scrollPad2, _this$scrollPad2$curr;\n\n        (_this$scrollPad2 = _this.scrollPad) == null ? void 0 : (_this$scrollPad2$curr = _this$scrollPad2.current) == null ? void 0 : _this$scrollPad2$curr.getNode().scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      }\n    };\n\n    _this.toggleCalendarPosition = function (open) {\n      var maxY = _this.initialScrollPadPosition();\n\n      _this.setScrollPadPosition(open ? 0 : maxY, true);\n\n      _this.enableCalendarScrolling(open);\n    };\n\n    _this.onDayPress = function (d) {\n      _this.chooseDay(d, !_this.state.calendarScrollable);\n    };\n\n    _this.generateMarkings = memoize(function (selectedDay, markedDates, items) {\n      if (!markedDates) {\n        markedDates = {};\n\n        if (items) {\n          Object.keys(items).forEach(function (key) {\n            if (items[key] && items[key].length) {\n              markedDates[key] = {\n                marked: true\n              };\n            }\n          });\n        }\n      }\n\n      var key = toMarkingFormat(selectedDay);\n      return _objectSpread(_objectSpread({}, markedDates), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, markedDates[key] || {}), {\n        selected: true\n      })));\n    });\n\n    _this.onScrollPadLayout = function () {\n      _this.setScrollPadPosition(_this.initialScrollPadPosition(), false);\n\n      setTimeout(function () {\n        return _this.setState({\n          calendarIsReady: true\n        });\n      }, 0);\n    };\n\n    _this.onCalendarListLayout = function () {\n      var _this$calendar, _this$calendar$curren;\n\n      (_this$calendar = _this.calendar) == null ? void 0 : (_this$calendar$curren = _this$calendar.current) == null ? void 0 : _this$calendar$curren.scrollToDay(_this.state.selectedDay.clone(), _this.calendarOffset(), false);\n    };\n\n    _this.onLayout = function (event) {\n      _this.viewHeight = event.nativeEvent.layout.height;\n      _this.viewWidth = event.nativeEvent.layout.width;\n\n      _this.forceUpdate();\n    };\n\n    _this.onTouchStart = function () {\n      var _this$knob, _this$knob$current;\n\n      _this.headerState = 'touched';\n      (_this$knob = _this.knob) == null ? void 0 : (_this$knob$current = _this$knob.current) == null ? void 0 : _this$knob$current.setNativeProps({\n        style: {\n          opacity: 0.5\n        }\n      });\n    };\n\n    _this.onTouchEnd = function () {\n      var _this$knob2, _this$knob2$current;\n\n      (_this$knob2 = _this.knob) == null ? void 0 : (_this$knob2$current = _this$knob2.current) == null ? void 0 : _this$knob2$current.setNativeProps({\n        style: {\n          opacity: 1\n        }\n      });\n\n      if (_this.headerState === 'touched') {\n        var isOpen = _this.state.calendarScrollable;\n\n        _this.toggleCalendarPosition(!isOpen);\n      }\n\n      _this.headerState = 'idle';\n    };\n\n    _this.onStartDrag = function () {\n      _this.headerState = 'dragged';\n\n      _this.knobTracker.reset();\n    };\n\n    _this.onSnapAfterDrag = function (e) {\n      _this.onTouchEnd();\n\n      var currentY = e.nativeEvent.contentOffset.y;\n\n      _this.knobTracker.add(currentY);\n\n      var projectedY = currentY + _this.knobTracker.estimateSpeed() * 250;\n\n      var maxY = _this.initialScrollPadPosition();\n\n      var snapY = projectedY > maxY / 2 ? maxY : 0;\n\n      _this.setScrollPadPosition(snapY, true);\n\n      _this.enableCalendarScrolling(snapY === 0);\n    };\n\n    _this.onVisibleMonthsChange = function (months) {\n      _this.props.onVisibleMonthsChange == null ? void 0 : _this.props.onVisibleMonthsChange(months);\n\n      if (_this.props.items && !_this.state.firstReservationLoad) {\n        if (_this.scrollTimeout) {\n          clearTimeout(_this.scrollTimeout);\n        }\n\n        _this.scrollTimeout = setTimeout(function () {\n          if (_this._isMounted) {\n            _this.props.loadItemsForMonth == null ? void 0 : _this.props.loadItemsForMonth(months[0]);\n          }\n        }, 200);\n      }\n    };\n\n    _this.onDayChange = function (day) {\n      var _this$calendar2, _this$calendar2$curre;\n\n      var withAnimation = sameMonth(day, _this.state.selectedDay);\n      (_this$calendar2 = _this.calendar) == null ? void 0 : (_this$calendar2$curre = _this$calendar2.current) == null ? void 0 : _this$calendar2$curre.scrollToDay(day, _this.calendarOffset(), withAnimation);\n\n      _this.setState({\n        selectedDay: day\n      });\n\n      _this.props.onDayChange == null ? void 0 : _this.props.onDayChange(xdateToData(day));\n    };\n\n    _this.renderWeekDaysNames = function () {\n      return _jsx(WeekDaysNames, {\n        firstDay: _this.props.firstDay,\n        style: _this.style.dayHeader\n      });\n    };\n\n    _this.renderWeekNumbersSpace = function () {\n      return _this.props.showWeekNumbers && _jsx(View, {\n        style: _this.style.dayHeader\n      });\n    };\n\n    _this.style = styleConstructor(props.theme);\n    var windowSize = Dimensions.get('window');\n    _this.viewHeight = windowSize.height;\n    _this.viewWidth = windowSize.width;\n    _this.scrollTimeout = undefined;\n    _this.headerState = 'idle';\n    _this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstReservationLoad: false,\n      selectedDay: _this.getSelectedDate(props.selected),\n      topDay: _this.getSelectedDate(props.selected)\n    };\n    _this.currentMonth = _this.state.selectedDay.clone();\n    _this.knobTracker = new VelocityTracker();\n\n    _this.state.scrollY.addListener(function (_ref) {\n      var value = _ref.value;\n      return _this.knobTracker.add(value);\n    });\n\n    return _this;\n  }\n\n  _createClass(Agenda, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.loadReservations(this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.state.scrollY.removeAllListeners();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var newSelectedDate = this.getSelectedDate(this.props.selected);\n\n      if (!sameDate(newSelectedDate, prevState.selectedDay)) {\n        var prevSelectedDate = this.getSelectedDate(prevProps.selected);\n\n        if (!sameDate(newSelectedDate, prevSelectedDate)) {\n          this.setState({\n            selectedDay: newSelectedDate\n          });\n        }\n      } else if (!prevProps.items) {\n        this.loadReservations(this.props);\n      }\n    }\n  }, {\n    key: \"getSelectedDate\",\n    value: function getSelectedDate(selected) {\n      return selected ? parseDate(selected) : new XDate(true);\n    }\n  }, {\n    key: \"calendarOffset\",\n    value: function calendarOffset() {\n      return 96 - this.viewHeight / 2;\n    }\n  }, {\n    key: \"enableCalendarScrolling\",\n    value: function enableCalendarScrolling() {\n      var _this$props$onCalenda, _this$props, _this$calendar3, _this$calendar3$curre;\n\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.setState({\n        calendarScrollable: enable\n      });\n      (_this$props$onCalenda = (_this$props = this.props).onCalendarToggled) == null ? void 0 : _this$props$onCalenda.call(_this$props, enable);\n      (_this$calendar3 = this.calendar) == null ? void 0 : (_this$calendar3$curre = _this$calendar3.current) == null ? void 0 : _this$calendar3$curre.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n    }\n  }, {\n    key: \"loadReservations\",\n    value: function loadReservations(props) {\n      var _this2 = this;\n\n      if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n        this.setState({\n          firstReservationLoad: true\n        }, function () {\n          _this2.props.loadItemsForMonth == null ? void 0 : _this2.props.loadItemsForMonth(xdateToData(_this2.state.selectedDay));\n        });\n      }\n    }\n  }, {\n    key: \"chooseDay\",\n    value: function chooseDay(d, optimisticScroll) {\n      var _this$props$onCalenda2, _this$props2, _this$calendar4, _this$calendar4$curre, _this$props$loadItems, _this$props3, _this$props$onDayPres, _this$props4;\n\n      var day = parseDate(d);\n      this.setState({\n        calendarScrollable: false,\n        selectedDay: day.clone()\n      });\n      (_this$props$onCalenda2 = (_this$props2 = this.props).onCalendarToggled) == null ? void 0 : _this$props$onCalenda2.call(_this$props2, false);\n\n      if (!optimisticScroll) {\n        this.setState({\n          topDay: day.clone()\n        });\n      }\n\n      this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n      (_this$calendar4 = this.calendar) == null ? void 0 : (_this$calendar4$curre = _this$calendar4.current) == null ? void 0 : _this$calendar4$curre.scrollToDay(day, this.calendarOffset(), true);\n      (_this$props$loadItems = (_this$props3 = this.props).loadItemsForMonth) == null ? void 0 : _this$props$loadItems.call(_this$props3, xdateToData(day));\n      (_this$props$onDayPres = (_this$props4 = this.props).onDayPress) == null ? void 0 : _this$props$onDayPres.call(_this$props4, xdateToData(day));\n    }\n  }, {\n    key: \"renderReservations\",\n    value: function renderReservations() {\n      var reservationListProps = extractComponentProps(ReservationList, this.props);\n      return _jsx(ReservationList, _objectSpread(_objectSpread({}, reservationListProps), {}, {\n        ref: this.list,\n        selectedDay: this.state.selectedDay,\n        topDay: this.state.topDay,\n        onDayChange: this.onDayChange\n      }));\n    }\n  }, {\n    key: \"renderCalendarList\",\n    value: function renderCalendarList() {\n      var _this$props5 = this.props,\n          markedDates = _this$props5.markedDates,\n          items = _this$props5.items;\n      var shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n      var calendarListProps = extractComponentProps(CalendarList, this.props);\n      return _jsx(CalendarList, _objectSpread(_objectSpread({}, calendarListProps), {}, {\n        ref: this.calendar,\n        current: getCalendarDateString(this.currentMonth.toString()),\n        markedDates: this.generateMarkings(this.state.selectedDay, markedDates, items),\n        calendarWidth: this.viewWidth,\n        scrollEnabled: this.state.calendarScrollable,\n        hideExtraDays: shouldHideExtraDays,\n        onLayout: this.onCalendarListLayout,\n        onDayPress: this.onDayPress,\n        onVisibleMonthsChange: this.onVisibleMonthsChange\n      }));\n    }\n  }, {\n    key: \"renderKnob\",\n    value: function renderKnob() {\n      var _this$props6 = this.props,\n          showClosingKnob = _this$props6.showClosingKnob,\n          hideKnob = _this$props6.hideKnob,\n          renderKnob = _this$props6.renderKnob;\n\n      var knob = _jsx(View, {\n        style: this.style.knobContainer\n      });\n\n      if (!hideKnob) {\n        var knobView = renderKnob ? renderKnob() : _jsx(View, {\n          style: this.style.knob\n        });\n        knob = !this.state.calendarScrollable || showClosingKnob ? _jsx(View, {\n          style: this.style.knobContainer,\n          children: _jsx(View, {\n            ref: this.knob,\n            children: knobView\n          })\n        }) : null;\n      }\n\n      return knob;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          hideKnob = _this$props7.hideKnob,\n          style = _this$props7.style,\n          testID = _this$props7.testID;\n      var agendaHeight = this.initialScrollPadPosition();\n      var weekdaysStyle = [this.style.weekdays, {\n        opacity: this.state.scrollY.interpolate({\n          inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        }),\n        transform: [{\n          translateY: this.state.scrollY.interpolate({\n            inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n            outputRange: [-HEADER_HEIGHT, 0],\n            extrapolate: 'clamp'\n          })\n        }]\n      }];\n      var headerTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [agendaHeight, 0],\n        extrapolate: 'clamp'\n      });\n      var contentTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [0, agendaHeight / 2],\n        extrapolate: 'clamp'\n      });\n      var headerStyle = [this.style.header, {\n        bottom: agendaHeight,\n        transform: [{\n          translateY: headerTranslate\n        }]\n      }];\n\n      if (!this.state.calendarIsReady) {\n        headerStyle.push({\n          height: 0\n        });\n        weekdaysStyle.push({\n          height: HEADER_HEIGHT\n        });\n      }\n\n      var openCalendarScrollPadPosition = !hideKnob && this.state.calendarScrollable && this.props.showClosingKnob ? agendaHeight + HEADER_HEIGHT : 0;\n      var shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n      var scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : openCalendarScrollPadPosition) - KNOB_HEIGHT;\n      var scrollPadStyle = {\n        height: KNOB_HEIGHT,\n        top: scrollPadPosition\n      };\n      return _jsxs(View, {\n        testID: testID,\n        onLayout: this.onLayout,\n        style: [style, this.style.container],\n        children: [_jsx(View, {\n          style: this.style.reservations,\n          children: this.renderReservations()\n        }), _jsxs(Animated.View, {\n          style: headerStyle,\n          children: [_jsx(Animated.View, {\n            style: [this.style.animatedContainer, {\n              transform: [{\n                translateY: contentTranslate\n              }]\n            }],\n            children: this.renderCalendarList()\n          }), this.renderKnob()]\n        }), _jsxs(Animated.View, {\n          style: weekdaysStyle,\n          children: [this.renderWeekNumbersSpace(), this.renderWeekDaysNames()]\n        }), _jsx(Animated.ScrollView, {\n          ref: this.scrollPad,\n          style: [this.style.scrollPadStyle, scrollPadStyle],\n          overScrollMode: \"never\",\n          showsHorizontalScrollIndicator: false,\n          showsVerticalScrollIndicator: false,\n          scrollEventThrottle: 8,\n          scrollsToTop: false,\n          onTouchStart: this.onTouchStart,\n          onTouchEnd: this.onTouchEnd,\n          onScrollBeginDrag: this.onStartDrag,\n          onScrollEndDrag: this.onSnapAfterDrag,\n          onScroll: Animated.event([{\n            nativeEvent: {\n              contentOffset: {\n                y: this.state.scrollY\n              }\n            }\n          }], {\n            useNativeDriver: true\n          }),\n          children: _jsx(View, {\n            testID: AGENDA_CALENDAR_KNOB,\n            style: {\n              height: agendaHeight + KNOB_HEIGHT\n            },\n            onLayout: this.onScrollPadLayout\n          })\n        })]\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.items) {\n        return {\n          firstReservationLoad: false\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Agenda;\n}(Component);\n\nAgenda.displayName = 'Agenda';\nAgenda.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarList.propTypes), ReservationList.propTypes), {}, {\n  items: PropTypes.object,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  loadItemsForMonth: PropTypes.func,\n  onCalendarToggled: PropTypes.func,\n  onDayChange: PropTypes.func,\n  renderKnob: PropTypes.func,\n  selected: PropTypes.any,\n  hideKnob: PropTypes.bool,\n  showClosingKnob: PropTypes.bool\n});\nexport { Agenda as default };","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/agenda/index.js"],"names":["PropTypes","XDate","memoize","React","Component","extractComponentProps","parseDate","xdateToData","toMarkingFormat","sameDate","sameMonth","AGENDA_CALENDAR_KNOB","VelocityTracker","getCalendarDateString","styleConstructor","WeekDaysNames","CalendarList","ReservationList","HEADER_HEIGHT","KNOB_HEIGHT","Agenda","props","scrollPad","createRef","calendar","knob","list","initialScrollPadPosition","Math","max","viewHeight","setScrollPadPosition","y","animated","current","scrollTo","x","getNode","toggleCalendarPosition","open","maxY","enableCalendarScrolling","onDayPress","d","chooseDay","state","calendarScrollable","generateMarkings","selectedDay","markedDates","items","Object","keys","forEach","key","length","marked","selected","onScrollPadLayout","setTimeout","setState","calendarIsReady","onCalendarListLayout","scrollToDay","clone","calendarOffset","onLayout","event","nativeEvent","layout","height","viewWidth","width","forceUpdate","onTouchStart","headerState","setNativeProps","style","opacity","onTouchEnd","isOpen","onStartDrag","knobTracker","reset","onSnapAfterDrag","e","currentY","contentOffset","add","projectedY","estimateSpeed","snapY","onVisibleMonthsChange","months","firstReservationLoad","scrollTimeout","clearTimeout","_isMounted","loadItemsForMonth","onDayChange","day","withAnimation","renderWeekDaysNames","firstDay","dayHeader","renderWeekNumbersSpace","showWeekNumbers","theme","windowSize","Dimensions","get","undefined","scrollY","Animated","Value","getSelectedDate","topDay","currentMonth","addListener","value","loadReservations","removeAllListeners","prevProps","prevState","newSelectedDate","prevSelectedDate","enable","onCalendarToggled","optimisticScroll","reservationListProps","shouldHideExtraDays","hideExtraDays","calendarListProps","toString","showClosingKnob","hideKnob","renderKnob","knobContainer","knobView","testID","agendaHeight","weekdaysStyle","weekdays","interpolate","inputRange","outputRange","extrapolate","transform","translateY","headerTranslate","contentTranslate","headerStyle","header","bottom","push","openCalendarScrollPadPosition","shouldAllowDragging","scrollPadPosition","scrollPadStyle","top","container","reservations","renderReservations","animatedContainer","renderCalendarList","useNativeDriver","nextProps","displayName","propTypes","object","oneOfType","array","number","func","any","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport { View, Dimensions, Animated } from 'react-native';\nimport { extractComponentProps } from '../componentUpdater';\nimport { parseDate, xdateToData, toMarkingFormat } from '../interface';\nimport { sameDate, sameMonth } from '../dateutils';\n// @ts-expect-error\nimport { AGENDA_CALENDAR_KNOB } from '../testIDs';\nimport { VelocityTracker } from '../velocityTracker';\nimport { getCalendarDateString } from '../services';\nimport styleConstructor from './style';\nimport WeekDaysNames from '../commons/WeekDaysNames';\nimport CalendarList from '../calendar-list';\nimport ReservationList from './reservation-list';\nconst HEADER_HEIGHT = 104;\nconst KNOB_HEIGHT = 24;\n/**\n * @description: Agenda component\n * @extends: CalendarList\n * @extendslink: docs/CalendarList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/agenda.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/agenda.gif\n */\nexport default class Agenda extends Component {\n    static displayName = 'Agenda';\n    static propTypes = {\n        ...CalendarList.propTypes,\n        ...ReservationList.propTypes,\n        items: PropTypes.object,\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n        loadItemsForMonth: PropTypes.func,\n        onCalendarToggled: PropTypes.func,\n        onDayChange: PropTypes.func,\n        renderKnob: PropTypes.func,\n        selected: PropTypes.any,\n        hideKnob: PropTypes.bool,\n        showClosingKnob: PropTypes.bool\n    };\n    style;\n    viewHeight;\n    viewWidth;\n    scrollTimeout;\n    headerState;\n    currentMonth;\n    knobTracker;\n    _isMounted;\n    scrollPad = React.createRef();\n    calendar = React.createRef();\n    knob = React.createRef();\n    list = React.createRef();\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n        const windowSize = Dimensions.get('window');\n        this.viewHeight = windowSize.height;\n        this.viewWidth = windowSize.width;\n        this.scrollTimeout = undefined;\n        this.headerState = 'idle';\n        this.state = {\n            scrollY: new Animated.Value(0),\n            calendarIsReady: false,\n            calendarScrollable: false,\n            firstReservationLoad: false,\n            selectedDay: this.getSelectedDate(props.selected),\n            topDay: this.getSelectedDate(props.selected)\n        };\n        this.currentMonth = this.state.selectedDay.clone();\n        this.knobTracker = new VelocityTracker();\n        this.state.scrollY.addListener(({ value }) => this.knobTracker.add(value));\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        this.loadReservations(this.props);\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n        this.state.scrollY.removeAllListeners();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const newSelectedDate = this.getSelectedDate(this.props.selected);\n        if (!sameDate(newSelectedDate, prevState.selectedDay)) {\n            const prevSelectedDate = this.getSelectedDate(prevProps.selected);\n            if (!sameDate(newSelectedDate, prevSelectedDate)) {\n                this.setState({ selectedDay: newSelectedDate });\n            }\n        }\n        else if (!prevProps.items) {\n            this.loadReservations(this.props);\n        }\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.items) {\n            return { firstReservationLoad: false };\n        }\n        return null;\n    }\n    getSelectedDate(selected) {\n        return selected ? parseDate(selected) : new XDate(true);\n    }\n    calendarOffset() {\n        return 96 - this.viewHeight / 2;\n    }\n    initialScrollPadPosition = () => {\n        return Math.max(0, this.viewHeight - HEADER_HEIGHT);\n    };\n    setScrollPadPosition = (y, animated) => {\n        if (this.scrollPad?.current?.scrollTo) {\n            this.scrollPad.current.scrollTo({ x: 0, y, animated });\n        }\n        else {\n            // Support for RN O.61 (Expo 37)\n            this.scrollPad?.current?.getNode().scrollTo({ x: 0, y, animated });\n        }\n    };\n    toggleCalendarPosition = (open) => {\n        const maxY = this.initialScrollPadPosition();\n        this.setScrollPadPosition(open ? 0 : maxY, true);\n        this.enableCalendarScrolling(open);\n    };\n    enableCalendarScrolling(enable = true) {\n        this.setState({ calendarScrollable: enable });\n        this.props.onCalendarToggled?.(enable);\n        // Enlarge calendarOffset here as a workaround on iOS to force repaint.\n        // Otherwise the month after current one or before current one remains invisible.\n        // The problem is caused by overflow: 'hidden' style, which we need for dragging\n        // to be performant.\n        // Another working solution for this bug would be to set removeClippedSubviews={false}\n        // in CalendarList listView, but that might impact performance when scrolling\n        // month list in expanded CalendarList.\n        // Further info https://github.com/facebook/react-native/issues/1831\n        this.calendar?.current?.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n    }\n    loadReservations(props) {\n        if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n            this.setState({ firstReservationLoad: true }, () => {\n                this.props.loadItemsForMonth?.(xdateToData(this.state.selectedDay));\n            });\n        }\n    }\n    onDayPress = (d) => {\n        this.chooseDay(d, !this.state.calendarScrollable);\n    };\n    chooseDay(d, optimisticScroll) {\n        const day = parseDate(d);\n        this.setState({\n            calendarScrollable: false,\n            selectedDay: day.clone()\n        });\n        this.props.onCalendarToggled?.(false);\n        if (!optimisticScroll) {\n            this.setState({ topDay: day.clone() });\n        }\n        this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n        this.calendar?.current?.scrollToDay(day, this.calendarOffset(), true);\n        this.props.loadItemsForMonth?.(xdateToData(day));\n        this.props.onDayPress?.(xdateToData(day));\n    }\n    generateMarkings = memoize((selectedDay, markedDates, items) => {\n        if (!markedDates) {\n            markedDates = {};\n            if (items) {\n                Object.keys(items).forEach(key => {\n                    if (items[key] && items[key].length) {\n                        markedDates[key] = { marked: true };\n                    }\n                });\n            }\n        }\n        const key = toMarkingFormat(selectedDay);\n        return { ...markedDates, [key]: { ...(markedDates[key] || {}), ...{ selected: true } } };\n    });\n    onScrollPadLayout = () => {\n        // When user touches knob, the actual component that receives touch events is a ScrollView.\n        // It needs to be scrolled to the bottom, so that when user moves finger downwards,\n        // scroll position actually changes (it would stay at 0, when scrolled to the top).\n        this.setScrollPadPosition(this.initialScrollPadPosition(), false);\n        // delay rendering calendar in full height because otherwise it still flickers sometimes\n        setTimeout(() => this.setState({ calendarIsReady: true }), 0);\n    };\n    onCalendarListLayout = () => {\n        this.calendar?.current?.scrollToDay(this.state.selectedDay.clone(), this.calendarOffset(), false);\n    };\n    onLayout = (event) => {\n        this.viewHeight = event.nativeEvent.layout.height;\n        this.viewWidth = event.nativeEvent.layout.width;\n        this.forceUpdate();\n    };\n    onTouchStart = () => {\n        this.headerState = 'touched';\n        this.knob?.current?.setNativeProps({ style: { opacity: 0.5 } });\n    };\n    onTouchEnd = () => {\n        this.knob?.current?.setNativeProps({ style: { opacity: 1 } });\n        if (this.headerState === 'touched') {\n            const isOpen = this.state.calendarScrollable;\n            this.toggleCalendarPosition(!isOpen);\n        }\n        this.headerState = 'idle';\n    };\n    onStartDrag = () => {\n        this.headerState = 'dragged';\n        this.knobTracker.reset();\n    };\n    onSnapAfterDrag = (e) => {\n        // on Android onTouchEnd is not called if dragging was started\n        this.onTouchEnd();\n        const currentY = e.nativeEvent.contentOffset.y;\n        this.knobTracker.add(currentY);\n        const projectedY = currentY + this.knobTracker.estimateSpeed() * 250; /*ms*/\n        const maxY = this.initialScrollPadPosition();\n        const snapY = projectedY > maxY / 2 ? maxY : 0;\n        this.setScrollPadPosition(snapY, true);\n        this.enableCalendarScrolling(snapY === 0);\n    };\n    onVisibleMonthsChange = (months) => {\n        this.props.onVisibleMonthsChange?.(months);\n        if (this.props.items && !this.state.firstReservationLoad) {\n            if (this.scrollTimeout) {\n                clearTimeout(this.scrollTimeout);\n            }\n            this.scrollTimeout = setTimeout(() => {\n                if (this._isMounted) {\n                    this.props.loadItemsForMonth?.(months[0]);\n                }\n            }, 200);\n        }\n    };\n    onDayChange = (day) => {\n        const withAnimation = sameMonth(day, this.state.selectedDay);\n        this.calendar?.current?.scrollToDay(day, this.calendarOffset(), withAnimation);\n        this.setState({ selectedDay: day });\n        this.props.onDayChange?.(xdateToData(day));\n    };\n    renderReservations() {\n        const reservationListProps = extractComponentProps(ReservationList, this.props);\n        return (<ReservationList {...reservationListProps} ref={this.list} selectedDay={this.state.selectedDay} topDay={this.state.topDay} onDayChange={this.onDayChange}/>);\n    }\n    renderCalendarList() {\n        const { markedDates, items } = this.props;\n        const shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n        const calendarListProps = extractComponentProps(CalendarList, this.props);\n        return (<CalendarList {...calendarListProps} ref={this.calendar} current={getCalendarDateString(this.currentMonth.toString())} markedDates={this.generateMarkings(this.state.selectedDay, markedDates, items)} calendarWidth={this.viewWidth} scrollEnabled={this.state.calendarScrollable} hideExtraDays={shouldHideExtraDays} onLayout={this.onCalendarListLayout} onDayPress={this.onDayPress} onVisibleMonthsChange={this.onVisibleMonthsChange}/>);\n    }\n    renderKnob() {\n        const { showClosingKnob, hideKnob, renderKnob } = this.props;\n        let knob = <View style={this.style.knobContainer}/>;\n        if (!hideKnob) {\n            const knobView = renderKnob ? renderKnob() : <View style={this.style.knob}/>;\n            knob = !this.state.calendarScrollable || showClosingKnob ? (<View style={this.style.knobContainer}>\n          <View ref={this.knob}>{knobView}</View>\n        </View>) : null;\n        }\n        return knob;\n    }\n    renderWeekDaysNames = () => {\n        return (<WeekDaysNames firstDay={this.props.firstDay} style={this.style.dayHeader}/>);\n    };\n    renderWeekNumbersSpace = () => {\n        return this.props.showWeekNumbers && <View style={this.style.dayHeader}/>;\n    };\n    render() {\n        const { hideKnob, style, testID } = this.props;\n        const agendaHeight = this.initialScrollPadPosition();\n        const weekdaysStyle = [\n            this.style.weekdays,\n            {\n                opacity: this.state.scrollY.interpolate({\n                    inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n                    outputRange: [0, 1],\n                    extrapolate: 'clamp'\n                }),\n                transform: [\n                    {\n                        translateY: this.state.scrollY.interpolate({\n                            inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n                            outputRange: [-HEADER_HEIGHT, 0],\n                            extrapolate: 'clamp'\n                        })\n                    }\n                ]\n            }\n        ];\n        const headerTranslate = this.state.scrollY.interpolate({\n            inputRange: [0, agendaHeight],\n            outputRange: [agendaHeight, 0],\n            extrapolate: 'clamp'\n        });\n        const contentTranslate = this.state.scrollY.interpolate({\n            inputRange: [0, agendaHeight],\n            outputRange: [0, agendaHeight / 2],\n            extrapolate: 'clamp'\n        });\n        const headerStyle = [\n            this.style.header,\n            {\n                bottom: agendaHeight,\n                transform: [{ translateY: headerTranslate }]\n            }\n        ];\n        if (!this.state.calendarIsReady) {\n            // limit header height until everything is setup for calendar dragging\n            headerStyle.push({ height: 0 });\n            // fill header with appStyle.calendarBackground background to reduce flickering\n            weekdaysStyle.push({ height: HEADER_HEIGHT });\n        }\n        const openCalendarScrollPadPosition = !hideKnob && this.state.calendarScrollable && this.props.showClosingKnob ? agendaHeight + HEADER_HEIGHT : 0;\n        const shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n        const scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : openCalendarScrollPadPosition) - KNOB_HEIGHT;\n        const scrollPadStyle = {\n            height: KNOB_HEIGHT,\n            top: scrollPadPosition,\n        };\n        return (<View testID={testID} onLayout={this.onLayout} style={[style, this.style.container]}>\n        <View style={this.style.reservations}>{this.renderReservations()}</View>\n        <Animated.View style={headerStyle}>\n          <Animated.View style={[this.style.animatedContainer, { transform: [{ translateY: contentTranslate }] }]}>\n            {this.renderCalendarList()}\n          </Animated.View>\n          {this.renderKnob()}\n        </Animated.View>\n        <Animated.View style={weekdaysStyle}>\n          {this.renderWeekNumbersSpace()}\n          {this.renderWeekDaysNames()}\n        </Animated.View>\n        <Animated.ScrollView ref={this.scrollPad} style={[this.style.scrollPadStyle, scrollPadStyle]} overScrollMode=\"never\" showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false} scrollEventThrottle={8} scrollsToTop={false} onTouchStart={this.onTouchStart} onTouchEnd={this.onTouchEnd} onScrollBeginDrag={this.onStartDrag} onScrollEndDrag={this.onSnapAfterDrag} onScroll={Animated.event([{ nativeEvent: { contentOffset: { y: this.state.scrollY } } }], { useNativeDriver: true })}>\n          <View testID={AGENDA_CALENDAR_KNOB} style={{ height: agendaHeight + KNOB_HEIGHT }} onLayout={this.onScrollPadLayout}/>\n        </Animated.ScrollView>\n      </View>);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}