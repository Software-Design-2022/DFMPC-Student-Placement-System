{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Profiler as RProfiler } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar cumulativeDuration = {};\nvar Profiler = function (_React$Component) {\n  _inherits(Profiler, _React$Component);\n  var _super = _createSuper(Profiler);\n  function Profiler() {\n    var _this;\n    _classCallCheck(this, Profiler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.onRender = function () {\n      for (var _len2 = arguments.length, profileData = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        profileData[_key2] = arguments[_key2];\n      }\n      logProfileData(getProfileData(profileData));\n    };\n    return _this;\n  }\n  _createClass(Profiler, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        children = _this$props.children,\n        id = _this$props.id;\n      return _jsx(RProfiler, {\n        id: id,\n        onRender: this.onRender,\n        children: children\n      });\n    }\n  }]);\n  return Profiler;\n}(React.Component);\nexport { Profiler as default };\nexport var getProfileData = function getProfileData(_ref) {\n  var _cumulativeDuration$i;\n  var _ref2 = _slicedToArray(_ref, 7),\n    id = _ref2[0],\n    phase = _ref2[1],\n    actualDuration = _ref2[2],\n    baseDuration = _ref2[3],\n    startTime = _ref2[4],\n    commitTime = _ref2[5],\n    interactions = _ref2[6];\n  cumulativeDuration[id] = Number((((_cumulativeDuration$i = cumulativeDuration[id]) != null ? _cumulativeDuration$i : 0) + actualDuration).toFixed(2));\n  return {\n    id: id,\n    interactions: interactions,\n    phase: phase,\n    actualDuration: Number(actualDuration.toFixed(2)),\n    baseDuration: Number(baseDuration.toFixed(2)),\n    commitTime: Number(commitTime.toFixed(2)),\n    cumulativeDuration: cumulativeDuration[id],\n    startTime: Number(startTime.toFixed(2))\n  };\n};\nexport var logProfileData = function logProfileData(_ref3) {\n  var id = _ref3.id,\n    actualDuration = _ref3.actualDuration,\n    cumulativeDuration = _ref3.cumulativeDuration,\n    phase = _ref3.phase;\n  console.group(phase);\n  console.log(id, ':', actualDuration, cumulativeDuration);\n  console.groupEnd();\n};","map":{"version":3,"names":["React","Profiler","RProfiler","cumulativeDuration","onRender","profileData","logProfileData","getProfileData","props","children","id","Component","phase","actualDuration","baseDuration","startTime","commitTime","interactions","Number","toFixed","console","group","log","groupEnd"],"sources":["D:/repos/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/Profiler.js"],"sourcesContent":["// @ts-nocheck\n// Taken from\n// https://medium.com/life-at-paperless/how-to-use-the-react-profiler-component-to-measure-performance-improvements-from-hooks-d43b7092d7a8\n// Profiler callback\n// https://reactjs.org/docs/profiler.html#onrender-callback\nimport React, { Profiler as RProfiler } from 'react';\n// The entire render time since execution of this file (likely on page load)\nconst cumulativeDuration = {};\nexport default class Profiler extends React.Component {\n    onRender = (...profileData) => {\n        logProfileData(getProfileData(profileData));\n    };\n    render() {\n        const { children, id } = this.props;\n        return (<RProfiler id={id} onRender={this.onRender}>\n        {children}\n      </RProfiler>);\n    }\n}\n// TODO: fix typescript...\nexport const getProfileData = ([id, // the \"id\" prop of the Profiler tree that has just committed\nphase, // either \"mount\" (if the tree just mounted) or \"update\" (if it re-rendered)\nactualDuration, // time spent rendering the committed update\nbaseDuration, // estimated time to render the entire subtree without memoization\nstartTime, // when React began rendering this update\ncommitTime, // when React committed this update\ninteractions // the Set of interactions belonging to this update\n]) => {\n    cumulativeDuration[id] = Number(((cumulativeDuration[id] ?? 0) + actualDuration).toFixed(2));\n    return {\n        id,\n        interactions,\n        phase,\n        actualDuration: Number(actualDuration.toFixed(2)),\n        baseDuration: Number(baseDuration.toFixed(2)),\n        commitTime: Number(commitTime.toFixed(2)),\n        cumulativeDuration: cumulativeDuration[id],\n        startTime: Number(startTime.toFixed(2))\n    };\n};\nexport const logProfileData = ({ id, actualDuration, cumulativeDuration, phase }) => {\n    console.group(phase);\n    // table did not work for me so I used log instead\n    console.log(id, ':', actualDuration, cumulativeDuration);\n    // console.table({\n    //   actualDuration,\n    //   baseDuration,\n    //   cumulativeDuration\n    // });\n    console.groupEnd();\n};\n"],"mappings":";;;;;;;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAErD,IAAMC,kBAAkB,GAAG,CAAC,CAAC;AAAC,IACTF,QAAQ;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MACzBG,QAAQ,GAAG,YAAoB;MAAA,mCAAhBC,WAAW;QAAXA,WAAW;MAAA;MACtBC,cAAc,CAACC,cAAc,CAACF,WAAW,CAAC,CAAC;IAC/C,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OACD,kBAAS;MACL,kBAAyB,IAAI,CAACG,KAAK;QAA3BC,QAAQ,eAARA,QAAQ;QAAEC,EAAE,eAAFA,EAAE;MACpB,OAAQ,KAAC,SAAS;QAAC,EAAE,EAAEA,EAAG;QAAC,QAAQ,EAAE,IAAI,CAACN,QAAS;QAAA,UAClDK;MAAQ,EACC;IACd;EAAC;EAAA;AAAA,EATiCT,KAAK,CAACW,SAAS;AAAA,SAAhCV,QAAQ;AAY7B,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAc,OAOrB;EAAA;EAAA;IAP0BG,EAAE;IAClCE,KAAK;IACLC,cAAc;IACdC,YAAY;IACZC,SAAS;IACTC,UAAU;IACVC,YAAY;EAERd,kBAAkB,CAACO,EAAE,CAAC,GAAGQ,MAAM,CAAC,CAAC,0BAACf,kBAAkB,CAACO,EAAE,CAAC,oCAAI,CAAC,IAAIG,cAAc,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5F,OAAO;IACHT,EAAE,EAAFA,EAAE;IACFO,YAAY,EAAZA,YAAY;IACZL,KAAK,EAALA,KAAK;IACLC,cAAc,EAAEK,MAAM,CAACL,cAAc,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC;IACjDL,YAAY,EAAEI,MAAM,CAACJ,YAAY,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7CH,UAAU,EAAEE,MAAM,CAACF,UAAU,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;IACzChB,kBAAkB,EAAEA,kBAAkB,CAACO,EAAE,CAAC;IAC1CK,SAAS,EAAEG,MAAM,CAACH,SAAS,CAACI,OAAO,CAAC,CAAC,CAAC;EAC1C,CAAC;AACL,CAAC;AACD,OAAO,IAAMb,cAAc,GAAG,SAAjBA,cAAc,QAA0D;EAAA,IAApDI,EAAE,SAAFA,EAAE;IAAEG,cAAc,SAAdA,cAAc;IAAEV,kBAAkB,SAAlBA,kBAAkB;IAAES,KAAK,SAALA,KAAK;EAC1EQ,OAAO,CAACC,KAAK,CAACT,KAAK,CAAC;EAEpBQ,OAAO,CAACE,GAAG,CAACZ,EAAE,EAAE,GAAG,EAAEG,cAAc,EAAEV,kBAAkB,CAAC;EAMxDiB,OAAO,CAACG,QAAQ,EAAE;AACtB,CAAC"},"metadata":{},"sourceType":"module"}