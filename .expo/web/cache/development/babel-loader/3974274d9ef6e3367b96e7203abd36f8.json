{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport XDate from 'xdate';\nimport React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { sameMonth } from \"../../dateutils\";\nimport { xdateToData } from \"../../interface\";\nimport { useDidUpdate } from \"../../hooks\";\nimport { UpdateSources } from \"../commons\";\nimport styleConstructor from \"../style\";\nimport CalendarContext from \"./index\";\nimport { shouldAnimateTodayButton, shouldAnimateOpacity, getButtonIcon, getPositionAnimation, getOpacityAnimation, getTodayDate, getTodayFormatted } from \"./Presenter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TOP_POSITION = 65;\nvar CalendarProvider = function CalendarProvider(props) {\n  var theme = props.theme,\n    date = props.date,\n    onDateChanged = props.onDateChanged,\n    onMonthChange = props.onMonthChange,\n    _props$showTodayButto = props.showTodayButton,\n    showTodayButton = _props$showTodayButto === void 0 ? false : _props$showTodayButto,\n    todayBottomMargin = props.todayBottomMargin,\n    todayButtonStyle = props.todayButtonStyle,\n    propsStyle = props.style,\n    numberOfDays = props.numberOfDays,\n    _props$timelineLeftIn = props.timelineLeftInset,\n    timelineLeftInset = _props$timelineLeftIn === void 0 ? 72 : _props$timelineLeftIn,\n    children = props.children;\n  var style = useRef(styleConstructor(theme));\n  var buttonY = useRef(new Animated.Value(todayBottomMargin ? -todayBottomMargin : -TOP_POSITION));\n  var opacity = useRef(new Animated.Value(1));\n  var today = useRef(getTodayFormatted());\n  var prevDate = useRef(date);\n  var currDate = useRef(date);\n  var _useState = useState(date),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentDate = _useState2[0],\n    setCurrentDate = _useState2[1];\n  var _useState3 = useState(UpdateSources.CALENDAR_INIT),\n    _useState4 = _slicedToArray(_useState3, 2),\n    updateSource = _useState4[0],\n    setUpdateSource = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isDisabled = _useState6[0],\n    setIsDisabled = _useState6[1];\n  var _useState7 = useState(getButtonIcon(date, showTodayButton)),\n    _useState8 = _slicedToArray(_useState7, 2),\n    buttonIcon = _useState8[0],\n    setButtonIcon = _useState8[1];\n  var wrapperStyle = useMemo(function () {\n    return [style.current.contextWrapper, propsStyle];\n  }, [style, propsStyle]);\n  useDidUpdate(function () {\n    if (date) {\n      _setDate(date, UpdateSources.PROP_UPDATE);\n    }\n  }, [date]);\n  useEffect(function () {\n    animateTodayButton(currentDate);\n  }, [todayBottomMargin, currentDate]);\n  var _setDate = useCallback(function (date, updateSource) {\n    prevDate.current = currDate.current;\n    currDate.current = date;\n    setCurrentDate(date);\n    setUpdateSource(updateSource);\n    setButtonIcon(getButtonIcon(date, showTodayButton));\n    onDateChanged == null ? void 0 : onDateChanged(date, updateSource);\n    if (!sameMonth(new XDate(date), new XDate(prevDate.current))) {\n      onMonthChange == null ? void 0 : onMonthChange(xdateToData(new XDate(date)), updateSource);\n    }\n  }, [onDateChanged, onMonthChange]);\n  var _setDisabled = useCallback(function (disabled) {\n    if (!showTodayButton || disabled === isDisabled) {\n      return;\n    }\n    setIsDisabled(disabled);\n    animateOpacity(disabled);\n  }, [showTodayButton, isDisabled]);\n  var contextValue = useMemo(function () {\n    return {\n      date: currentDate,\n      prevDate: prevDate.current,\n      updateSource: updateSource,\n      setDate: _setDate,\n      setDisabled: _setDisabled,\n      numberOfDays: numberOfDays,\n      timelineLeftInset: timelineLeftInset\n    };\n  }, [currentDate, updateSource, numberOfDays, _setDisabled]);\n  var animateTodayButton = function animateTodayButton(date) {\n    if (shouldAnimateTodayButton(props)) {\n      var animationData = getPositionAnimation(date, todayBottomMargin);\n      Animated.spring(buttonY.current, _objectSpread({}, animationData)).start();\n    }\n  };\n  var animateOpacity = function animateOpacity(disabled) {\n    if (shouldAnimateOpacity(props)) {\n      var animationData = getOpacityAnimation(props, disabled);\n      Animated.timing(opacity.current, _objectSpread({}, animationData)).start();\n    }\n  };\n  var onTodayPress = useCallback(function () {\n    _setDate(getTodayDate(), UpdateSources.TODAY_PRESS);\n  }, [_setDate]);\n  var renderTodayButton = function renderTodayButton() {\n    return _jsx(Animated.View, {\n      style: [style.current.todayButtonContainer, {\n        transform: [{\n          translateY: buttonY.current\n        }]\n      }],\n      children: _jsxs(TouchableOpacity, {\n        style: [style.current.todayButton, todayButtonStyle],\n        onPress: onTodayPress,\n        disabled: isDisabled,\n        children: [_jsx(Animated.Image, {\n          style: [style.current.todayButtonImage, {\n            opacity: opacity.current\n          }],\n          source: buttonIcon\n        }), _jsx(Animated.Text, {\n          allowFontScaling: false,\n          style: [style.current.todayButtonText, {\n            opacity: opacity.current\n          }],\n          children: today.current\n        })]\n      })\n    });\n  };\n  return _jsxs(CalendarContext.Provider, {\n    value: contextValue,\n    children: [_jsx(View, {\n      style: wrapperStyle,\n      children: children\n    }), showTodayButton && renderTodayButton()]\n  });\n};\nexport default CalendarProvider;\nCalendarProvider.displayName = 'CalendarProvider';","map":{"version":3,"names":["XDate","React","useEffect","useRef","useState","useCallback","useMemo","sameMonth","xdateToData","useDidUpdate","UpdateSources","styleConstructor","CalendarContext","shouldAnimateTodayButton","shouldAnimateOpacity","getButtonIcon","getPositionAnimation","getOpacityAnimation","getTodayDate","getTodayFormatted","TOP_POSITION","CalendarProvider","props","theme","date","onDateChanged","onMonthChange","showTodayButton","todayBottomMargin","todayButtonStyle","propsStyle","style","numberOfDays","timelineLeftInset","children","buttonY","Animated","Value","opacity","today","prevDate","currDate","currentDate","setCurrentDate","CALENDAR_INIT","updateSource","setUpdateSource","isDisabled","setIsDisabled","buttonIcon","setButtonIcon","wrapperStyle","current","contextWrapper","_setDate","PROP_UPDATE","animateTodayButton","_setDisabled","disabled","animateOpacity","contextValue","setDate","setDisabled","animationData","spring","start","timing","onTodayPress","TODAY_PRESS","renderTodayButton","todayButtonContainer","transform","translateY","todayButton","todayButtonImage","todayButtonText","displayName"],"sources":["D:/repos/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/expandableCalendar/Context/Provider.js"],"sourcesContent":["import XDate from 'xdate';\nimport React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport { Animated, TouchableOpacity, View } from 'react-native';\nimport { sameMonth } from '../../dateutils';\nimport { xdateToData } from '../../interface';\nimport { useDidUpdate } from '../../hooks';\nimport { UpdateSources } from '../commons';\nimport styleConstructor from '../style';\nimport CalendarContext from './index';\nimport { shouldAnimateTodayButton, shouldAnimateOpacity, getButtonIcon, getPositionAnimation, getOpacityAnimation, getTodayDate, getTodayFormatted } from './Presenter';\nconst TOP_POSITION = 65;\n/**\n * @description: Calendar context provider component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nconst CalendarProvider = (props) => {\n    const { theme, date, onDateChanged, onMonthChange, showTodayButton = false, todayBottomMargin, todayButtonStyle, style: propsStyle, numberOfDays, timelineLeftInset = 72, children } = props;\n    const style = useRef(styleConstructor(theme));\n    const buttonY = useRef(new Animated.Value(todayBottomMargin ? -todayBottomMargin : -TOP_POSITION));\n    const opacity = useRef(new Animated.Value(1));\n    const today = useRef(getTodayFormatted());\n    const prevDate = useRef(date);\n    const currDate = useRef(date); // for setDate only to keep prevDate up to date\n    const [currentDate, setCurrentDate] = useState(date);\n    const [updateSource, setUpdateSource] = useState(UpdateSources.CALENDAR_INIT);\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [buttonIcon, setButtonIcon] = useState(getButtonIcon(date, showTodayButton));\n    const wrapperStyle = useMemo(() => {\n        return [style.current.contextWrapper, propsStyle];\n    }, [style, propsStyle]);\n    useDidUpdate(() => {\n        if (date) {\n            _setDate(date, UpdateSources.PROP_UPDATE);\n        }\n    }, [date]);\n    useEffect(() => {\n        animateTodayButton(currentDate);\n    }, [todayBottomMargin, currentDate]);\n    /** Context */\n    const _setDate = useCallback((date, updateSource) => {\n        prevDate.current = currDate.current;\n        currDate.current = date;\n        setCurrentDate(date);\n        setUpdateSource(updateSource);\n        setButtonIcon(getButtonIcon(date, showTodayButton));\n        onDateChanged?.(date, updateSource);\n        if (!sameMonth(new XDate(date), new XDate(prevDate.current))) {\n            onMonthChange?.(xdateToData(new XDate(date)), updateSource);\n        }\n    }, [onDateChanged, onMonthChange]);\n    const _setDisabled = useCallback((disabled) => {\n        if (!showTodayButton || disabled === isDisabled) {\n            return;\n        }\n        setIsDisabled(disabled);\n        animateOpacity(disabled);\n    }, [showTodayButton, isDisabled]);\n    const contextValue = useMemo(() => {\n        return {\n            date: currentDate,\n            prevDate: prevDate.current,\n            updateSource: updateSource,\n            setDate: _setDate,\n            setDisabled: _setDisabled,\n            numberOfDays,\n            timelineLeftInset\n        };\n    }, [currentDate, updateSource, numberOfDays, _setDisabled]);\n    /** Animations */\n    const animateTodayButton = (date) => {\n        if (shouldAnimateTodayButton(props)) {\n            const animationData = getPositionAnimation(date, todayBottomMargin);\n            Animated.spring(buttonY.current, {\n                ...animationData\n            }).start();\n        }\n    };\n    const animateOpacity = (disabled) => {\n        if (shouldAnimateOpacity(props)) {\n            const animationData = getOpacityAnimation(props, disabled);\n            Animated.timing(opacity.current, {\n                ...animationData\n            }).start();\n        }\n    };\n    /** Events */\n    const onTodayPress = useCallback(() => {\n        _setDate(getTodayDate(), UpdateSources.TODAY_PRESS);\n    }, [_setDate]);\n    /** Renders */\n    const renderTodayButton = () => {\n        return (<Animated.View style={[style.current.todayButtonContainer, { transform: [{ translateY: buttonY.current }] }]}>\n        <TouchableOpacity style={[style.current.todayButton, todayButtonStyle]} onPress={onTodayPress} disabled={isDisabled}>\n          <Animated.Image style={[style.current.todayButtonImage, { opacity: opacity.current }]} source={buttonIcon}/>\n          <Animated.Text allowFontScaling={false} style={[style.current.todayButtonText, { opacity: opacity.current }]}>\n            {today.current}\n          </Animated.Text>\n        </TouchableOpacity>\n      </Animated.View>);\n    };\n    return (<CalendarContext.Provider value={contextValue}>\n      <View style={wrapperStyle}>{children}</View>\n      {showTodayButton && renderTodayButton()}\n    </CalendarContext.Provider>);\n};\nexport default CalendarProvider;\nCalendarProvider.displayName = 'CalendarProvider';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}