{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Calendar, Agenda } from \"react-native-calendars\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { Card, Avatar } from \"react-native-paper\";\nimport { firebase, db } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction eventsData(onReceiveList) {\n  var events, snapshot;\n  return _regeneratorRuntime.async(function eventsData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          events = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"events\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              var start = doc.data().start_date,\n                  end = doc.data().end_date,\n                  name = doc.data().name,\n                  id = doc.data().id,\n                  programme = doc.data().programme,\n                  key = events.length + 1;\n              events.push({\n                key: key,\n                start: start,\n                end: end,\n                id: id,\n                programme: programme,\n                name: name\n              });\n            });\n          }));\n\n        case 3:\n          snapshot = _context.sent;\n          onReceiveList(events);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nLogBox.ignoreLogs([\"Setting a timer\"]);\n\nvar EventsCalendar = function (_React$Component) {\n  _inherits(EventsCalendar, _React$Component);\n\n  var _super = _createSuper(EventsCalendar);\n\n  function EventsCalendar(props) {\n    var _this;\n\n    _classCallCheck(this, EventsCalendar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      items: {},\n      events: []\n    };\n    return _this;\n  }\n\n  _createClass(EventsCalendar, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(Agenda, {\n        theme: {\n          calendarBackground: \"white\",\n          agendaKnobColor: \"rgba(28,56,107,0.9)\",\n          backgroundColor: \"rgba(28,56,107,0.9)\",\n          agendaDayTextColor: \"white\",\n          agendaDayNumColor: \"white\",\n          agendaTodayColor: \"rgba(28,56,107,0.9)\",\n          monthTextColor: \"rgba(28,56,107,0.9)\",\n          todayBackgroundColor: \"rgba(28,56,107,0.9)\",\n          textSectionTitleColor: \"rgba(28,56,107,0.9)\",\n          selectedDayBackgroundColor: \"rgba(28,56,107,0.9)\",\n          dayTextColor: \"rgba(28,56,107,0.9)\",\n          dotColor: \"black\"\n        },\n        items: this.state.items,\n        selected: new Date(),\n        loadItemsForMonth: this.loadFromList.bind(this),\n        renderItem: this.renderItem.bind(this),\n        renderEmptyDate: this.renderEmptyDate.bind(this),\n        rowHasChanged: this.rowHasChanged.bind(this)\n      });\n    }\n  }, {\n    key: \"loadFromList\",\n    value: function loadFromList() {\n      var _this2 = this;\n\n      var onReceive = function onReceive(data) {\n        _this2.setState({\n          events: data\n        });\n      };\n\n      eventsData(onReceive);\n      this.state.events.map(function (key, index) {\n        var day = key.start;\n\n        if (!_this2.state.items[day]) {\n          _this2.state.items[day] = [];\n\n          _this2.state.items[day].push({\n            Name: \"Event: \" + key.name,\n            Programme: \"Programme: \" + key.programme,\n            start: \"start day: \" + key.start,\n            end: \"end day: \" + key.end,\n            height: Math.max(50, Math.floor(Math.random() * 150))\n          });\n        }\n\n        var newItems = {};\n        Object.keys(_this2.state.items).forEach(function (key) {\n          newItems[key] = _this2.state.items[key];\n        });\n\n        _this2.setState({\n          items: newItems\n        });\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return _jsxs(View, {\n        style: [styles.item, {\n          height: item.height\n        }],\n        children: [_jsx(Text, {\n          children: item.Name\n        }), _jsx(Text, {\n          children: item.Programme\n        }), _jsx(Text, {\n          children: item.start\n        }), _jsx(Text, {\n          children: item.end\n        })]\n      });\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return _jsx(View, {\n        style: styles.emptyDate,\n        children: _jsx(Text, {\n          children: \"No Agenda On this day!\"\n        })\n      });\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }]);\n\n  return EventsCalendar;\n}(React.Component);\n\nexport { EventsCalendar as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"white\",\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  }\n});","map":{"version":3,"names":["Calendar","Agenda","React","useState","Card","Avatar","firebase","db","eventsData","onReceiveList","events","firestore","collection","get","then","querySnapshot","forEach","doc","start","data","start_date","end","end_date","name","id","programme","key","length","push","snapshot","LogBox","ignoreLogs","EventsCalendar","props","state","items","calendarBackground","agendaKnobColor","backgroundColor","agendaDayTextColor","agendaDayNumColor","agendaTodayColor","monthTextColor","todayBackgroundColor","textSectionTitleColor","selectedDayBackgroundColor","dayTextColor","dotColor","Date","loadFromList","bind","renderItem","renderEmptyDate","rowHasChanged","onReceive","setState","map","index","day","Name","Programme","height","Math","max","floor","random","newItems","Object","keys","item","styles","emptyDate","r1","r2","Component","StyleSheet","create","flex","borderRadius","padding","marginRight","marginTop","paddingTop"],"sources":["C:/Users/nokno/OneDrive/Documents/GitHub/DFMPC-Student-Placement-System/Screens/EventsCalendar.js"],"sourcesContent":["import { Calendar, Agenda } from \"react-native-calendars\"; // 1.5.3\r\nimport React, { useState } from \"react\";\r\nimport { View, StyleSheet, TouchableOpacity, Text, LogBox } from \"react-native\";\r\nimport { Card, Avatar } from \"react-native-paper\";\r\nimport { firebase, db } from \"../firebase\";\r\n\r\nasync function eventsData(onReceiveList) {\r\n  const events = [];\r\n  var snapshot = await firebase\r\n    .firestore()\r\n    .collection(\"events\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach(function (doc) {\r\n        let start = doc.data().start_date,\r\n          end = doc.data().end_date,\r\n          name = doc.data().name,\r\n          id = doc.data().id,\r\n          programme = doc.data().programme,\r\n          key = events.length + 1;\r\n        // events.push(JSON.stringify({key, start, end, name, id, programme})); //this is an array of strings\r\n        events.push({\r\n          key: key,\r\n          start: start,\r\n          end: end,\r\n          id: id,\r\n          programme: programme,\r\n          name: name,\r\n        });\r\n      });\r\n    });\r\n\r\n  onReceiveList(events);\r\n}\r\n\r\nLogBox.ignoreLogs([\"Setting a timer\"]);\r\n\r\nexport default class EventsCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: {},\r\n      events: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Agenda\r\n        theme={{\r\n          calendarBackground: \"white\", //agenda background\r\n          agendaKnobColor: \"rgba(28,56,107,0.9)\", // knob color\r\n          backgroundColor: \"rgba(28,56,107,0.9)\", // background color below agenda\r\n          agendaDayTextColor: \"white\", // day name\r\n          agendaDayNumColor: \"white\", // day number\r\n          agendaTodayColor: \"rgba(28,56,107,0.9)\", // today in list\r\n          monthTextColor: \"rgba(28,56,107,0.9)\", // name in calendar\r\n          todayBackgroundColor: \"rgba(28,56,107,0.9)\",\r\n          textSectionTitleColor: \"rgba(28,56,107,0.9)\",\r\n          selectedDayBackgroundColor: \"rgba(28,56,107,0.9)\", // calendar sel date\r\n          dayTextColor: \"rgba(28,56,107,0.9)\", // calendar day\r\n          dotColor: \"black\", // dots\r\n        }}\r\n        items={this.state.items}\r\n        selected={new Date()}\r\n        loadItemsForMonth={this.loadFromList.bind(this)}\r\n        renderItem={this.renderItem.bind(this)}\r\n        renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n        rowHasChanged={this.rowHasChanged.bind(this)}\r\n      />\r\n    );\r\n  }\r\n\r\n  loadFromList() {\r\n    const onReceive = (data) => {\r\n      this.setState({\r\n        events: data,\r\n      });\r\n    };\r\n    eventsData(onReceive);\r\n    this.state.events.map((key, index) => {\r\n      const day = key.start;\r\n\r\n      if (!this.state.items[day]) {\r\n        this.state.items[day] = [];\r\n        this.state.items[day].push({\r\n          Name: \"Event: \" + key.name,\r\n          Programme: \"Programme: \" + key.programme,\r\n          start: \"start day: \" + key.start,\r\n          end: \"end day: \" + key.end,\r\n          height: Math.max(50, Math.floor(Math.random() * 150)),\r\n        });\r\n      }\r\n      //console.log(this.state.items);\r\n      const newItems = {};\r\n      Object.keys(this.state.items).forEach((key) => {\r\n        newItems[key] = this.state.items[key];\r\n      });\r\n      this.setState({\r\n        items: newItems,\r\n      });\r\n    });\r\n  }\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <View style={[styles.item, { height: item.height }]}>\r\n        <Text>{item.Name}</Text>\r\n        <Text>{item.Programme}</Text>\r\n        <Text>{item.start}</Text>\r\n        <Text>{item.end}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>No Agenda On this day!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  rowHasChanged(r1, r2) {\r\n    return r1.name !== r2.name;\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}