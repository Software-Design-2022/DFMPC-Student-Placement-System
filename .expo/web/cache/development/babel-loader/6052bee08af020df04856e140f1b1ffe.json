{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function setNotificationChannelAsync(channelId, channel) {\n  return _regeneratorRuntime.async(function setNotificationChannelAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.debug('Notification channels feature is only supported on Android.');\n          return _context.abrupt(\"return\", null);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../src/setNotificationChannelAsync.ts"],"names":[],"mappings":";AAEA,eAAe,SAAe,2BAAf,CACb,SADa,EAEb,OAFa;EAAA;IAAA;MAAA;QAAA;UAIb,OAAO,CAAC,KAAR,CAAc,6DAAd;UAJa,iCAKN,IALM;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA","sourcesContent":["import { NotificationChannel, NotificationChannelInput } from './NotificationChannelManager.types';\n\nexport default async function setNotificationChannelAsync(\n  channelId: string,\n  channel: NotificationChannelInput\n): Promise<NotificationChannel | null> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return null;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}