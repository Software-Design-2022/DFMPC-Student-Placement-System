{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this;\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Calendar } from \"react-native-calendars\";\nimport { Provider } from \"react-native-paper\";\nimport { firebase } from \"../firebase\";\nimport { getCurrentDate } from \"../HelperFunctions\";\nimport BottomSheet from \"./BottomSheet\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { Card, Avatar } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport \"../global\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar SPACING = 20;\nvar ICON_SIZE = 75;\nvar initialDate = getCurrentDate();\nvar today = new Date();\nvar compare = function compare(obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n};\nvar generateColor = function generateColor() {\n  var randomColor = Math.floor(Math.random() * 16777215).toString(16).padStart(6, \"0\");\n  return \"#\" + randomColor;\n};\nvar randomColor = generateColor();\nvar randomColor2 = generateColor();\nfunction eventsData(onReceiveList) {\n  var events, snapshot;\n  return _regeneratorRuntime.async(function eventsData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          events = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"events\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              var start = doc.data().start_date,\n                end = doc.data().end_date,\n                name = doc.data().name,\n                id = doc.data().id,\n                programme = doc.data().programme,\n                key = events.length + 1;\n              var date = new Date();\n              var date2 = new Date(start);\n              var diff = Math.ceil((date2 - date) / (1000 * 3600 * 24));\n              if (Math.abs(diff) < 90) {\n                events.push({\n                  name: name,\n                  key: key,\n                  start: start,\n                  end: end,\n                  id: id,\n                  programme: programme\n                });\n              }\n            });\n          }));\n        case 3:\n          snapshot = _context.sent;\n          onReceiveList(events);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nvar validateInput = function validateInput(eventtext, notetext) {\n  var valid = true;\n  if (JSON.stringify(eventtext).length - 2 <= 0) {\n    Alert.alert(\"Warning\", \"Event name cannot be left empty\", [{\n      text: \"OK\",\n      onPress: function onPress() {}\n    }]);\n    valid = false;\n  }\n  if (JSON.stringify(notetext).length - 2 <= 0) {\n    Alert.alert(\"Warning\", \"Event programme cannot be left empty\", [{\n      text: \"OK\",\n      onPress: function onPress() {}\n    }]);\n    valid = false;\n  }\n  return valid;\n};\nfunction sendToFirestore(eventtext, notetext, startdatetext, enddatetext) {\n  return _regeneratorRuntime.async(function sendToFirestore$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(validateInput(eventtext, notetext) == true)) {\n            _context2.next = 3;\n            break;\n          }\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"events\").add({\n            name: eventtext,\n            start_date: startdatetext,\n            end_date: enddatetext,\n            id: Math.max(50, Math.floor(Math.random() * 150)),\n            programme: notetext\n          }).then(function () {\n            Alert.alert(\"Event Added\");\n          }));\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nvar EventsCalendar = function EventsCalendar() {\n  var _useState = useState({\n      events: [{\n        key: 0,\n        programme: \"\",\n        name: \"\",\n        id: 0,\n        start: \"\",\n        end: \"\"\n      }]\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    EventsState = _useState2[0],\n    SetEventsState = _useState2[1];\n  var onReceive = function onReceive(newEvents) {\n    SetEventsState(function (prevState) {\n      return {\n        events: prevState.events = newEvents\n      };\n    });\n  };\n  eventsData(onReceive);\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    shouldShow = _useState4[0],\n    setShouldShow = _useState4[1];\n  var _useState5 = useState([{}]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    dayData = _useState6[0],\n    setDayData = _useState6[1];\n  var GetMarkedDates = function GetMarkedDates() {\n    var markedDay = {};\n    EventsState.events.map(function (item, key) {\n      if (compare(item.start, item.end)) {\n        markedDay[item.start] = {\n          startingDay: true,\n          endingDay: true,\n          selected: true,\n          marked: true,\n          color: randomColor2,\n          dotColor: \"blue\"\n        };\n      } else {\n        markedDay[item.start] = {\n          startingDay: true,\n          color: randomColor,\n          textColor: \"white\",\n          marked: true,\n          dotColor: \"black\"\n        };\n        markedDay[item.end] = {\n          endingDay: true,\n          color: randomColor,\n          textColor: \"white\",\n          marked: true,\n          dotColor: \"black\"\n        };\n      }\n    });\n    return markedDay;\n  };\n  var getDayEvents = function getDayEvents(day) {\n    var data = [];\n    EventsState.events.map(function (event, key) {\n      if (compare(event.start, day.dateString) == true) {\n        data.push(event);\n      }\n    });\n    setDayData(data);\n  };\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    eventName = _useState8[0],\n    setEventName = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    eventProgramme = _useState10[0],\n    setEventProgramme = _useState10[1];\n  var _useState11 = useState(new Date().toISOString().split(\"T\")[0]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    startDate = _useState12[0],\n    setStartDate = _useState12[1];\n  var _useState13 = useState(new Date().toISOString().split(\"T\")[0]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    endDate = _useState14[0],\n    setEndDate = _useState14[1];\n  var _useState15 = useState(new Date()),\n    _useState16 = _slicedToArray(_useState15, 2),\n    selectedDate = _useState16[0],\n    setSelectedDate = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    btnstart = _useState18[0],\n    setBtnStart = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    btnend = _useState20[0],\n    setBtnEnd = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    modalVisible = _useState22[0],\n    setModalVisible = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    datePickerVisible = _useState24[0],\n    setDatePicker = _useState24[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      children: [_jsx(View, {\n        children: _jsx(Button, {\n          title: \"View General\",\n          onPress: function onPress() {\n            return _this.props.navigation.navigate(\"CalendarView\");\n          },\n          style: styles.button\n        })\n      }), _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this.props.navigation.navigate(\"CalendarView\");\n          },\n          style: {\n            backgroundColor: \"rgba(28,56,107,0.0)\",\n            position: \"relative\",\n            alignSelf: \"flex-start\",\n            borderRadius: 50,\n            width: 200,\n            height: 50,\n            zIndex: 1,\n            left: 20,\n            top: height - 220,\n            alignItems: \"center\"\n          },\n          children: _jsx(AntDesign, {\n            name: \"swap\",\n            color: \"black\",\n            size: 100\n          })\n        })\n      })]\n    }), _jsx(Modal, {\n      style: styles.modalStyle,\n      animationType: \"fade\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert(\"Modal has been closed.\");\n        setModalVisible(false);\n      },\n      children: _jsxs(View, {\n        style: styles.modalStyle,\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 25,\n            top: 10,\n            textAlign: \"center\"\n          },\n          children: \"Create Event\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          underlineColorAndroid: \"transparent\",\n          placeholder: \"Title\",\n          placeholderTextColor: \"black\",\n          autoCapitalize: \"none\",\n          onChangeText: function onChangeText(newText) {\n            setEventName(newText);\n          }\n        }), _jsx(TextInput, {\n          style: styles.input,\n          underlineColorAndroid: \"transparent\",\n          placeholder: \"Program\",\n          placeholderTextColor: \"black\",\n          autoCapitalize: \"none\",\n          onChangeText: function onChangeText(newText) {\n            setEventProgramme(newText);\n          }\n        }), _jsxs(Pressable, {\n          style: function style(_ref) {\n            var pressed = _ref.pressed;\n            return [{\n              backgroundColor: pressed ? \"rgb(210, 230, 255)\" : \"#2c477a\"\n            }, {\n              borderRadius: 10,\n              margin: 10,\n              flexDirection: \"row\",\n              marginTop: 40\n            }];\n          },\n          onPress: function onPress() {\n            setDatePicker(true);\n            setBtnStart(true);\n            setBtnEnd(false);\n          },\n          children: [_jsx(Text, {\n            style: {\n              margin: 30\n            },\n            children: \"Start\"\n          }), _jsxs(Text, {\n            style: {\n              marginLeft: 100,\n              marginBottom: 10,\n              marginTop: 30\n            },\n            children: [startDate, \"   \", \"18:00\"]\n          })]\n        }), _jsxs(Pressable, {\n          style: function style(_ref2) {\n            var pressed = _ref2.pressed;\n            return [{\n              backgroundColor: pressed ? \"rgb(210, 230, 255)\" : \"#2c477a\"\n            }, {\n              borderRadius: 10,\n              margin: 10,\n              flexDirection: \"row\"\n            }];\n          },\n          onPress: function onPress() {\n            setDatePicker(true);\n            setBtnStart(false);\n            setBtnEnd(true);\n          },\n          children: [_jsx(Text, {\n            style: {\n              margin: 30\n            },\n            children: \"End\"\n          }), _jsxs(Text, {\n            style: {\n              marginLeft: 100,\n              marginBottom: 10,\n              marginTop: 30\n            },\n            children: [endDate, \"   \", \"18:00\"]\n          })]\n        }), _jsx(View, {\n          style: {\n            marginBottom: 10,\n            flex: 1,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: _jsx(DateTimePickerModal, {\n            date: selectedDate,\n            isVisible: datePickerVisible,\n            mode: \"date\",\n            onConfirm: function onConfirm(date) {\n              setSelectedDate(date), setDatePicker(false);\n              if (btnstart === true) {\n                var datestr = selectedDate.toISOString().split(\"T\")[0];\n                setStartDate(datestr);\n              } else if (btnend === true) {\n                var _datestr = selectedDate.toISOString().split(\"T\")[0];\n                setEndDate(_datestr);\n              }\n            },\n            onCancel: function onCancel() {\n              setDatePicker(false);\n            }\n          })\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Pressable, {\n            style: function style(_ref3) {\n              var pressed = _ref3.pressed;\n              return [styles.button, styles.buttonClose, {\n                marginRight: 40,\n                width: width / 3,\n                left: 10,\n                bottom: 30,\n                backgroundColor: pressed ? \"rgba(28,56,107,1)\" : \"pink\"\n              }];\n            },\n            onPress: function onPress() {\n              return setModalVisible(false);\n            },\n            children: _jsx(Text, {\n              onPress: function onPress() {\n                return setModalVisible(false);\n              },\n              style: [styles.textStyle],\n              children: \"Close\"\n            })\n          }), _jsx(Pressable, {\n            style: function style(_ref4) {\n              var pressed = _ref4.pressed;\n              return [styles.button, styles.buttonClose, {\n                width: width / 3,\n                left: 20,\n                right: 30,\n                bottom: 30,\n                backgroundColor: pressed ? \"rgba(28,56,107,0.3)\" : \"rgba(28,56,107,1)\"\n              }];\n            },\n            onPress: function onPress() {\n              sendToFirestore(eventName, eventProgramme, startDate, endDate);\n            },\n            children: _jsx(Text, {\n              style: [styles.textStyle],\n              children: \"Save\"\n            })\n          })]\n        })]\n      })\n    }), _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setModalVisible(true);\n        },\n        style: {\n          backgroundColor: \"rgba(28,56,107,0.0)\",\n          position: \"absolute\",\n          borderRadius: 50,\n          width: 50,\n          height: 50,\n          zIndex: 1,\n          right: 20,\n          top: height - 220,\n          alignItems: \"center\"\n        },\n        children: _jsx(AntDesign, {\n          name: \"pluscircle\",\n          color: \"black\",\n          size: 50\n        })\n      })\n    }), _jsx(Calendar, {\n      style: {\n        shadowColor: \"black\",\n        height: 500,\n        marginTop: 80,\n        marginBottom: 30,\n        marginLeft: 30,\n        marginRight: 30\n      },\n      markingType: \"period\",\n      markedDates: GetMarkedDates(),\n      onDayPress: function onDayPress(day) {\n        getDayEvents(day);\n        eventData = dayData;\n        if (showEvent == false) {\n          showEvent = true;\n        }\n      }\n      ,\n      onDayLongPress: function onDayLongPress(day) {\n        setModalVisible(true);\n      }\n    }), _jsx(Provider, {\n      children: _jsx(View, {\n        children: _jsx(BottomSheet, {})\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(28,56,107,0.05)\"\n  },\n  input: {\n    margin: 15,\n    height: 50,\n    borderColor: \"rgba(28,56,107,0.6)\",\n    borderWidth: 1,\n    backgroundColor: \"rgba(28,56,107,0.5)\"\n  },\n  button: {\n    marginTop: 50,\n    display: \"flex\",\n    height: 60,\n    borderRadius: 6,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    backgroundColor: \"#2AC062\",\n    shadowColor: \"#2AC062\",\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      height: 10,\n      width: 0\n    },\n    shadowRadius: 25\n  },\n  modalStyle: {\n    zIndex: 100,\n    height: height - 400,\n    width: width - 40,\n    marginLeft: 20,\n    marginRight: 10,\n    marginTop: 250,\n    backgroundColor: \"rgba(28,56,107,1)\"\n  },\n  closeButton: {\n    display: \"flex\",\n    height: 60,\n    borderRadius: 6,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FF3974\",\n    shadowColor: \"#2AC062\",\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      height: 10,\n      width: 0\n    },\n    shadowRadius: 25\n  },\n  buttonText: {\n    color: \"#FFFFFF\",\n    fontSize: 22\n  },\n  image: {\n    marginTop: 150,\n    marginBottom: 10,\n    width: \"100%\",\n    height: 350\n  },\n  text: {\n    fontSize: 24,\n    marginBottom: 30,\n    padding: 40\n  },\n  closeText: {\n    fontSize: 24,\n    color: \"#00479e\",\n    textAlign: \"center\"\n  },\n  buttonClose: {\n    marginRight: 30,\n    marginLeft: 10\n  },\n  eventStyle: {\n    justifyContent: \"flex-end\",\n    marginBottom: 36,\n    width: 50,\n    height: 50,\n    margin: 10,\n    backgroundColor: \"green\"\n  },\n  item: {\n    backgroundColor: \"white\",\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    width: width / 2,\n    height: height / 3\n  },\n  buttonClose: {\n    backgroundColor: \"black\"\n  },\n  buttonClose: {\n    backgroundColor: \"black\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default EventsCalendar;","map":{"version":3,"names":["React","useState","Calendar","Provider","firebase","getCurrentDate","BottomSheet","DateTimePickerModal","Card","Avatar","useNavigation","AntDesign","Dimensions","get","width","height","SPACING","ICON_SIZE","initialDate","today","Date","compare","obj1","obj2","JSON","stringify","generateColor","randomColor","Math","floor","random","toString","padStart","randomColor2","eventsData","onReceiveList","events","firestore","collection","then","querySnapshot","forEach","doc","start","data","start_date","end","end_date","name","id","programme","key","length","date","date2","diff","ceil","abs","push","snapshot","validateInput","eventtext","notetext","valid","Alert","alert","text","onPress","sendToFirestore","startdatetext","enddatetext","add","max","EventsCalendar","EventsState","SetEventsState","onReceive","newEvents","prevState","shouldShow","setShouldShow","dayData","setDayData","GetMarkedDates","markedDay","map","item","startingDay","endingDay","selected","marked","color","dotColor","textColor","getDayEvents","day","event","dateString","eventName","setEventName","eventProgramme","setEventProgramme","toISOString","split","startDate","setStartDate","endDate","setEndDate","selectedDate","setSelectedDate","btnstart","setBtnStart","btnend","setBtnEnd","modalVisible","setModalVisible","datePickerVisible","setDatePicker","styles","container","props","navigation","navigate","button","backgroundColor","position","alignSelf","borderRadius","zIndex","left","top","alignItems","modalStyle","fontSize","textAlign","input","newText","pressed","margin","flexDirection","marginTop","marginLeft","marginBottom","flex","display","justifyContent","datestr","buttonClose","marginRight","bottom","textStyle","right","shadowColor","eventData","showEvent","StyleSheet","create","borderColor","borderWidth","shadowOpacity","shadowOffset","shadowRadius","closeButton","buttonText","image","padding","closeText","eventStyle","emptyDate","paddingTop","centeredView","modalView","elevation","fontWeight","modalText"],"sources":["D:/repos/DFMPC-Student-Placement-System/Screens/EventsCalendar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Dimensions,\r\n  Modal,\r\n  TouchableHighlight,\r\n  Image,\r\n  TextInput,\r\n  Alert,\r\n  TouchableOpacity,\r\n  Pressable,\r\n} from \"react-native\";\r\nimport { Calendar } from \"react-native-calendars\";\r\nimport { Provider } from \"react-native-paper\";\r\nimport { firebase } from \"../firebase\";\r\nimport { getCurrentDate } from \"../HelperFunctions\";\r\nimport BottomSheet from \"./BottomSheet\";\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport { Card, Avatar } from \"react-native-paper\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport \"../global\";\r\n\r\nconst { width, height } = Dimensions.get(\"screen\");\r\nconst SPACING = 20;\r\nconst ICON_SIZE = 75;\r\nconst initialDate = getCurrentDate();\r\nconst today = new Date();\r\nconst compare = (obj1, obj2) => {\r\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n};\r\n\r\nconst generateColor = () => {\r\n  const randomColor = Math.floor(Math.random() * 16777215)\r\n    .toString(16)\r\n    .padStart(6, \"0\");\r\n  return `#${randomColor}`;\r\n};\r\nconst randomColor = generateColor();\r\nconst randomColor2 = generateColor();\r\nasync function eventsData(onReceiveList) {\r\n  const events = [];\r\n  var snapshot = await firebase\r\n    .firestore()\r\n    .collection(\"events\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach(function (doc) {\r\n        let start = doc.data().start_date,\r\n          end = doc.data().end_date,\r\n          name = doc.data().name,\r\n          id = doc.data().id,\r\n          programme = doc.data().programme,\r\n          key = events.length + 1;\r\n        let date = new Date();\r\n        let date2 = new Date(start);\r\n        let diff = Math.ceil((date2 - date) / (1000 * 3600 * 24));\r\n        if (Math.abs(diff) < 90) {\r\n          events.push({\r\n            name: name,\r\n            key: key,\r\n            start: start,\r\n            end: end,\r\n            id: id,\r\n            programme: programme,\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n  onReceiveList(events);\r\n}\r\n\r\nconst validateInput = (eventtext, notetext) => {\r\n  let valid = true;\r\n  if (JSON.stringify(eventtext).length - 2 <= 0) {\r\n    Alert.alert(\"Warning\", \"Event name cannot be left empty\", [\r\n      { text: \"OK\", onPress: () => {} },\r\n    ]);\r\n    valid = false;\r\n  }\r\n\r\n  if (JSON.stringify(notetext).length - 2 <= 0) {\r\n    Alert.alert(\"Warning\", \"Event programme cannot be left empty\", [\r\n      { text: \"OK\", onPress: () => {} },\r\n    ]);\r\n    valid = false;\r\n  }\r\n  return valid;\r\n};\r\n\r\nasync function sendToFirestore(\r\n  eventtext,\r\n  notetext,\r\n  startdatetext,\r\n  enddatetext\r\n) {\r\n  if (validateInput(eventtext, notetext) == true) {\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"events\")\r\n      .add({\r\n        name: eventtext,\r\n        start_date: startdatetext,\r\n        end_date: enddatetext,\r\n        id: Math.max(50, Math.floor(Math.random() * 150)),\r\n        programme: notetext,\r\n      })\r\n      .then(() => {\r\n        Alert.alert(\"Event Added\");\r\n      });\r\n  }\r\n}\r\n\r\nconst EventsCalendar = () => {\r\n  const [EventsState, SetEventsState] = useState({\r\n    events: [\r\n      {\r\n        key: 0,\r\n        programme: \"\",\r\n        name: \"\",\r\n        id: 0,\r\n        start: \"\",\r\n        end: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onReceive = (newEvents) => {\r\n    // when the list is received we set our protocolLIst to the current received list (updating)\r\n    SetEventsState((prevState) => ({\r\n      events: (prevState.events = newEvents),\r\n    }));\r\n  };\r\n  eventsData(onReceive);\r\n\r\n  const [shouldShow, setShouldShow] = useState(false);\r\n  const [dayData, setDayData] = useState([{}]);\r\n  const GetMarkedDates = () => {\r\n    let markedDay = {};\r\n\r\n    EventsState.events.map((item, key) => {\r\n      if (compare(item.start, item.end)) {\r\n        markedDay[item.start] = {\r\n          startingDay: true,\r\n          endingDay: true,\r\n          selected: true,\r\n          marked: true,\r\n          color: randomColor2,\r\n          dotColor: \"blue\",\r\n        };\r\n      } else {\r\n        markedDay[item.start] = {\r\n          startingDay: true,\r\n          color: randomColor,\r\n          textColor: \"white\",\r\n          marked: true,\r\n          dotColor: \"black\",\r\n        };\r\n        markedDay[item.end] = {\r\n          endingDay: true,\r\n          color: randomColor,\r\n          textColor: \"white\",\r\n          marked: true,\r\n          dotColor: \"black\",\r\n        };\r\n      }\r\n    });\r\n\r\n    return markedDay;\r\n  };\r\n\r\n  const getDayEvents = (day) => {\r\n    const data = [];\r\n    EventsState.events.map((event, key) => {\r\n      if (compare(event.start, day.dateString) == true) {\r\n        data.push(event);\r\n      }\r\n    });\r\n    setDayData(data);\r\n  };\r\n\r\n  const [eventName, setEventName] = useState(\"\");\r\n  const [eventProgramme, setEventProgramme] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [endDate, setEndDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [btnstart, setBtnStart] = useState(false);\r\n  const [btnend, setBtnEnd] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [datePickerVisible, setDatePicker] = useState(false);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <View>\r\n          <Button\r\n            title=\"View General\"\r\n            onPress={() => this.props.navigation.navigate(\"CalendarView\")}\r\n            style={styles.button}\r\n          />\r\n        </View>\r\n        <View>\r\n          <TouchableOpacity\r\n            onPress={() => this.props.navigation.navigate(\"CalendarView\")}\r\n            style={{\r\n              backgroundColor: \"rgba(28,56,107,0.0)\",\r\n              position: \"relative\",\r\n              alignSelf: \"flex-start\",\r\n              borderRadius: 50,\r\n              width: 200,\r\n              height: 50,\r\n              zIndex: 1,\r\n              left: 20,\r\n              top: height - 220,\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <AntDesign name=\"swap\" color=\"black\" size={100} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      <Modal\r\n        style={styles.modalStyle}\r\n        animationType={\"fade\"}\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert(\"Modal has been closed.\");\r\n          setModalVisible(false);\r\n        }}\r\n      >\r\n        <View style={styles.modalStyle}>\r\n          <Text style={{ fontSize: 25, top: 10, textAlign: \"center\" }}>\r\n            Create Event\r\n          </Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            underlineColorAndroid=\"transparent\"\r\n            placeholder=\"Title\"\r\n            placeholderTextColor=\"black\"\r\n            autoCapitalize=\"none\"\r\n            onChangeText={(newText) => {\r\n              setEventName(newText);\r\n            }}\r\n          />\r\n          <TextInput\r\n            style={styles.input}\r\n            underlineColorAndroid=\"transparent\"\r\n            placeholder=\"Program\"\r\n            placeholderTextColor=\"black\"\r\n            autoCapitalize=\"none\"\r\n            onChangeText={(newText) => {\r\n              setEventProgramme(newText);\r\n            }}\r\n          />\r\n\r\n          <Pressable\r\n            style={({ pressed }) => [\r\n              {\r\n                backgroundColor: pressed ? \"rgb(210, 230, 255)\" : \"#2c477a\",\r\n              },\r\n              {\r\n                borderRadius: 10,\r\n                margin: 10,\r\n                flexDirection: \"row\",\r\n                marginTop: 40,\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              setDatePicker(true);\r\n              setBtnStart(true);\r\n              setBtnEnd(false);\r\n            }}\r\n          >\r\n            <Text style={{ margin: 30 }}>Start</Text>\r\n            <Text style={{ marginLeft: 100, marginBottom: 10, marginTop: 30 }}>\r\n              {startDate}\r\n              {\"   \"}\r\n              {\"18:00\"}\r\n            </Text>\r\n          </Pressable>\r\n\r\n          <Pressable\r\n            style={({ pressed }) => [\r\n              {\r\n                backgroundColor: pressed ? \"rgb(210, 230, 255)\" : \"#2c477a\",\r\n              },\r\n              {\r\n                borderRadius: 10,\r\n                margin: 10,\r\n                flexDirection: \"row\",\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              setDatePicker(true);\r\n              setBtnStart(false);\r\n              setBtnEnd(true);\r\n            }}\r\n          >\r\n            <Text style={{ margin: 30 }}>End</Text>\r\n            <Text style={{ marginLeft: 100, marginBottom: 10, marginTop: 30 }}>\r\n              {endDate}\r\n              {\"   \"}\r\n              {\"18:00\"}\r\n            </Text>\r\n          </Pressable>\r\n\r\n          <View\r\n            style={{\r\n              marginBottom: 10,\r\n              flex: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <DateTimePickerModal\r\n              date={selectedDate}\r\n              isVisible={datePickerVisible}\r\n              mode=\"date\"\r\n              onConfirm={(date) => {\r\n                setSelectedDate(date), setDatePicker(false);\r\n\r\n                if (btnstart === true) {\r\n                  let datestr = selectedDate.toISOString().split(\"T\")[0];\r\n                  setStartDate(datestr);\r\n                } else if (btnend === true) {\r\n                  let datestr = selectedDate.toISOString().split(\"T\")[0];\r\n                  setEndDate(datestr);\r\n                }\r\n              }}\r\n              onCancel={() => {\r\n                setDatePicker(false);\r\n              }}\r\n            />\r\n          </View>\r\n\r\n          <View style={{ flexDirection: \"row\" }}>\r\n            <Pressable\r\n              style={({ pressed }) => [\r\n                styles.button,\r\n                styles.buttonClose,\r\n                {\r\n                  marginRight: 40,\r\n                  width: width / 3,\r\n                  left: 10,\r\n                  bottom: 30,\r\n                  backgroundColor: pressed ? \"rgba(28,56,107,1)\" : \"pink\",\r\n                },\r\n              ]}\r\n              onPress={() => setModalVisible(false)}\r\n            >\r\n              <Text\r\n                onPress={() => setModalVisible(false)}\r\n                style={[styles.textStyle]}\r\n              >\r\n                Close\r\n              </Text>\r\n            </Pressable>\r\n            <Pressable\r\n              style={({ pressed }) => [\r\n                styles.button,\r\n                styles.buttonClose,\r\n                {\r\n                  width: width / 3,\r\n                  left: 20,\r\n                  right: 30,\r\n                  bottom: 30,\r\n\r\n                  backgroundColor: pressed\r\n                    ? \"rgba(28,56,107,0.3)\"\r\n                    : \"rgba(28,56,107,1)\",\r\n                },\r\n              ]}\r\n              onPress={() => {\r\n                sendToFirestore(eventName, eventProgramme, startDate, endDate);\r\n              }}\r\n            >\r\n              <Text style={[styles.textStyle]}>Save</Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      <View>\r\n        <TouchableOpacity\r\n          onPress={() => setModalVisible(true)}\r\n          style={{\r\n            backgroundColor: \"rgba(28,56,107,0.0)\",\r\n            position: \"absolute\",\r\n            borderRadius: 50,\r\n            width: 50,\r\n            height: 50,\r\n            zIndex: 1,\r\n            right: 20,\r\n            top: height - 220,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <AntDesign name=\"pluscircle\" color=\"black\" size={50} />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Calendar\r\n        style={{\r\n          shadowColor: \"black\",\r\n          height: 500,\r\n          marginTop: 80,\r\n          marginBottom: 30,\r\n          marginLeft: 30,\r\n          marginRight: 30,\r\n        }}\r\n        markingType={\"period\"}\r\n        markedDates={GetMarkedDates()}\r\n        onDayPress={(day) => {\r\n          getDayEvents(day);\r\n          eventData = dayData;\r\n          if (showEvent == false) {\r\n            showEvent = true;\r\n          }\r\n        }}\r\n        /*       theme={{\r\n          \"stylesheet.day.period\": {\r\n            wrapper: {\r\n              alignItems: \"center\",\r\n              alignSelf: \"stretch\",\r\n              marginLeft: -2,\r\n              borderRadius: 2,\r\n              overflow: \"hidden\",\r\n            },\r\n            leftFiller: {\r\n              height: 26,\r\n              flex: 1,\r\n              marginLeft: 50,\r\n            },\r\n          },\r\n        }} */\r\n        onDayLongPress={(day) => {\r\n          setModalVisible(true);\r\n        }}\r\n      />\r\n      <Provider>\r\n        <View>\r\n          <BottomSheet></BottomSheet>\r\n        </View>\r\n      </Provider>\r\n    </View>\r\n  );\r\n};\r\n\r\nvar styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(28,56,107,0.05)\",\r\n  },\r\n  input: {\r\n    margin: 15,\r\n    height: 50,\r\n    borderColor: \"rgba(28,56,107,0.6)\",\r\n    borderWidth: 1,\r\n    backgroundColor: \"rgba(28,56,107,0.5)\",\r\n  },\r\n  button: {\r\n    marginTop: 50,\r\n    display: \"flex\",\r\n    height: 60,\r\n    borderRadius: 6,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#2AC062\",\r\n    shadowColor: \"#2AC062\",\r\n    shadowOpacity: 0.5,\r\n    shadowOffset: {\r\n      height: 10,\r\n      width: 0,\r\n    },\r\n    shadowRadius: 25,\r\n  },\r\n  modalStyle: {\r\n    zIndex: 100,\r\n    height: height - 400,\r\n    width: width - 40,\r\n    marginLeft: 20,\r\n    marginRight: 10,\r\n    marginTop: 250,\r\n    backgroundColor: \"rgba(28,56,107,1)\",\r\n  },\r\n  closeButton: {\r\n    display: \"flex\",\r\n    height: 60,\r\n    borderRadius: 6,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#FF3974\",\r\n    shadowColor: \"#2AC062\",\r\n    shadowOpacity: 0.5,\r\n    shadowOffset: {\r\n      height: 10,\r\n      width: 0,\r\n    },\r\n    shadowRadius: 25,\r\n  },\r\n  buttonText: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: 22,\r\n  },\r\n  image: {\r\n    marginTop: 150,\r\n    marginBottom: 10,\r\n    width: \"100%\",\r\n    height: 350,\r\n  },\r\n\r\n  text: {\r\n    fontSize: 24,\r\n    marginBottom: 30,\r\n    padding: 40,\r\n  },\r\n  closeText: {\r\n    fontSize: 24,\r\n    color: \"#00479e\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  buttonClose: {\r\n    marginRight: 30,\r\n    marginLeft: 10,\r\n  },\r\n  eventStyle: {\r\n    justifyContent: \"flex-end\",\r\n    marginBottom: 36,\r\n    width: 50,\r\n    height: 50,\r\n    margin: 10,\r\n    backgroundColor: \"green\",\r\n  },\r\n  item: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n    width: width / 2,\r\n    height: height / 3,\r\n  },\r\n\r\n  buttonClose: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    fontSize: 20,\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\nexport default EventsCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}