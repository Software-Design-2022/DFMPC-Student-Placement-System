{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport studentData from \"../dfmpc-student-placement-system.json\";\nimport AppContext from \"../AppContext\";\nimport \"../global.js\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { setStatusBarNetworkActivityIndicatorVisible } from \"expo-status-bar\";\nimport { getSchedule } from \"./RetrieveSchedules\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\nvar dateToPass = \"\";\nvar specialty = \"\";\nvar RANGE = 12;\nvar initialDate = \"2022-01-02\";\nvar usersAgenda = {};\nvar days = \"\";\n\nvar CalendarView = function CalendarView() {\n  var navigation = useNavigation();\n  var myContext = useContext(AppContext);\n\n  var _useState = useState(initialDate),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedDate = _useState2[0],\n      setSelectedDate = _useState2[1];\n\n  var _useState3 = useState({\n    scheduleList: [{\n      key: 0,\n      SpecialtyName: \"\",\n      start_date: \"\",\n      end_date: \"\"\n    }]\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      state = _useState4[0],\n      setState = _useState4[1];\n\n  var onReceive = function onReceive(scheduleList) {\n    setState(function (prevState) {\n      return {\n        scheduleList: prevState.scheduleList = scheduleList\n      };\n    });\n  };\n\n  getSchedule(onReceive);\n  var fullScheduleList = studentData.schedules;\n\n  var onDayPress = function onDayPress(day) {\n    console.log(\"Just ran the redundant function\");\n  };\n\n  return _jsx(View, {\n    children: _jsx(CalendarList, {\n      current: initialDate,\n      pastScrollRange: 3,\n      futureScrollRange: RANGE,\n      theme: theme,\n      onDayPress: function onDayPress(day) {\n        setSelectedDate(day.dateString);\n        dateToPass = day.dateString;\n        console.log(\"dateToPass value before navigation:\", dateToPass);\n        navigation.navigate(\"DayAgenda\");\n      },\n      markingType: \"period\",\n      markedDates: generateSchedule(fullScheduleList)\n    })\n  });\n};\n\nvar generateSchedule = function generateSchedule(onReceive) {\n  var userSchedulesListObj = {};\n  var userMarkedDatesListObj = {};\n  onReceive.forEach(function (scheduleItem) {\n    var scheduleObj = {};\n    var markedDateObj = {};\n\n    if (scheduleItem.student_id != authUserID) {\n      return {};\n    }\n\n    var color = \"rgba(80,206,187,0.5)\";\n    var startcolor = color;\n    var middlecolor = startcolor;\n    var endcolor = startcolor;\n\n    if (scheduleItem.specialty_id == 2) {\n      startcolor = \"rgba(226,135,67,0.5)\";\n      middlecolor = \"rgba(226,135,67,0.25)\";\n      endcolor = \"rgba(226,135,67,0.5)\";\n    } else if (scheduleItem.specialty_id == 5) {\n      startcolor = \"rgba(8,181,245,0.5)\";\n      middlecolor = \"rgba(8,181,245,0.25)\";\n      endcolor = \"rgba(8,181,245,0.5)\";\n    } else if (scheduleItem.specialty_id == 6) {\n      startcolor = \"rgba(245,58,245,0.5)\";\n      middlecolor = \"rgba(245,58,245,0.25)\";\n      endcolor = \"rgba(245,58,245,0.5)\";\n    } else {\n      startcolor = \"rgba(80,206,187,0.5)\";\n      middlecolor = \"rgba(80,206,187,0.25)\";\n      endcolor = \"rgba(80,206,187,0.5)\";\n    }\n\n    daysInWeek.forEach(function (day, dayIndex) {\n      scheduleObj = {};\n      markedDateObj = {};\n\n      if (dayIndex === 0) {\n        scheduleObj.startingDate = true;\n        scheduleObj.color = startcolor;\n        scheduleObj.textColor = \"white\";\n      } else if (dayIndex > 0 && dayIndex <= 5) {\n        scheduleObj.color = middlecolor;\n        scheduleObj.textColor = \"white\";\n      } else {\n        scheduleObj.endingDay = true;\n        scheduleObj.color = endcolor;\n        scheduleObj.textColor = \"white\";\n      }\n\n      scheduleObj.student_id = scheduleItem.student_id;\n      scheduleObj.created_at = scheduleItem.created_at;\n      scheduleObj.updated_at = scheduleItem.updated_at;\n      scheduleObj.hospital_id = scheduleItem.hospital_id;\n      scheduleObj.specialty_id = scheduleItem.specialty_id;\n      scheduleObj.startingDate;\n      scheduleObj.color;\n      scheduleObj.textColor;\n      markedDateObj.startingDate = scheduleObj.startingDate;\n      markedDateObj.color = scheduleObj.color;\n      markedDateObj.textColor = scheduleObj.textColor;\n      userSchedulesListObj[day] = scheduleObj;\n      userMarkedDatesListObj[day] = markedDateObj;\n    });\n  });\n  usersAgenda = userSchedulesListObj;\n  return userMarkedDatesListObj;\n};\n\nvar getDaysInWeek = function getDaysInWeek(startDate, specialtyduration) {\n  var dates = [];\n\n  for (var i = 0; i < specialtyduration; i++) {\n    var currentDate = new Date(startDate);\n    currentDate.setDate(startDate.getDate() + i);\n    var formattedDate = currentDate.toISOString().split(\"T\")[0];\n    dates.push(formattedDate);\n  }\n\n  return dates;\n};\n\nvar getDateFromWeekNum = function getDateFromWeekNum(weekNum, year, specialtyduration) {\n  var daynum = weekNum * 7;\n\n  if (weekNum * 7 > 30) {\n    var month = weekNum * 7 / 30 + 1;\n  } else {\n    var month = 0;\n  }\n\n  while (daynum > 30) {\n    daynum = daynum - 30;\n  }\n\n  month = parseInt(month);\n  var d = new Date(year, month, 1);\n  var endDate = new Date(d.setDate(daynum));\n  var startDate = new Date(year, month, 2);\n  startDate.setDate(endDate.getDate() - specialtyduration);\n  return {\n    startDate: startDate,\n    endDate: endDate\n  };\n};\n\nvar theme = {\n  \"stylesheet.calendar.header\": {\n    dayHeader: {\n      fontWeight: \"600\",\n      color: \"#48BFE3\"\n    }\n  },\n  \"stylesheet.day.basic\": {\n    today: {\n      borderColor: \"#48BFE3\",\n      borderWidth: 0.8\n    },\n    todayText: {\n      color: \"#5390D9\",\n      fontWeight: \"800\"\n    }\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderRadius: 20,\n    flex: 1,\n    borderColor: \"rgba(36,50,61,1)\",\n    borderWidth: 5\n  }\n});\nexport default CalendarView;\nexport { dateToPass };\nexport { days };","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigation","Calendar","CalendarList","Agenda","studentData","AppContext","NavigationContainer","setStatusBarNetworkActivityIndicatorVisible","getSchedule","buttonHeight","textPos","SPACING","AVATAR_SIZE","ICON_SIZE","dateToPass","specialty","RANGE","initialDate","usersAgenda","days","CalendarView","navigation","myContext","selectedDate","setSelectedDate","scheduleList","key","SpecialtyName","start_date","end_date","state","setState","onReceive","prevState","fullScheduleList","schedules","onDayPress","day","console","log","theme","dateString","navigate","generateSchedule","userSchedulesListObj","userMarkedDatesListObj","forEach","scheduleItem","scheduleObj","markedDateObj","student_id","authUserID","color","startcolor","middlecolor","endcolor","specialty_id","daysInWeek","dayIndex","startingDate","textColor","endingDay","created_at","updated_at","hospital_id","getDaysInWeek","startDate","specialtyduration","dates","i","currentDate","Date","setDate","getDate","formattedDate","toISOString","split","push","getDateFromWeekNum","weekNum","year","daynum","month","parseInt","d","endDate","dayHeader","fontWeight","today","borderColor","borderWidth","todayText","styles","StyleSheet","create","container","marginTop","backgroundColor","borderRadius","flex"],"sources":["C:/Users/nokno/OneDrive/Documents/GitHub/DFMPC-Student-Placement-System/Screens/CalendarView.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n\r\n  View,\r\n} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\r\nimport studentData from \"../dfmpc-student-placement-system.json\";\r\nimport AppContext from \"../AppContext\";\r\nimport \"../global.js\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { setStatusBarNetworkActivityIndicatorVisible } from \"expo-status-bar\";\r\nimport { getSchedule } from \"./RetrieveSchedules\";\r\n\r\n//constants\r\nconst buttonHeight = 50;\r\nconst textPos = buttonHeight / 2;\r\nconst SPACING = 20;\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 80;\r\nvar dateToPass = \"\";\r\nvar specialty = \"\";\r\nconst RANGE = 12;\r\nconst initialDate = \"2022-01-02\";\r\nvar usersAgenda = {};\r\nconst days=\"\";\r\nconst CalendarView = () => {\r\n  //use navigation\r\n  const navigation = useNavigation();\r\n  const myContext = useContext(AppContext);\r\n  // Keeps track of selected date\r\n  const [selectedDate, setSelectedDate] = useState(initialDate);\r\n\r\n  const [state, setState] = useState({\r\n    scheduleList: [\r\n      {\r\n      key: 0,\r\n      SpecialtyName:\"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      },\r\n    ],\r\n  })\r\n  //fetches record of schedules for all users\r\n  const onReceive = (scheduleList) => {\r\n    setState((prevState) => ({\r\n      scheduleList: (prevState.scheduleList = scheduleList),\r\n    }));\r\n  };\r\n  getSchedule(onReceive);\r\n\r\n  const fullScheduleList = studentData.schedules;\r\n  // Keeps track of schedule for user\r\n  // User's agenda\r\n  // What to do when day is pressed.\r\n  const onDayPress = (day) => {\r\n    console.log(\"Just ran the redundant function\");\r\n  };\r\n\r\n  return (\r\n    <View>\r\n    <CalendarList\r\n      // testID={testIDs.calendarList.CONTAINER}\r\n      current={initialDate}\r\n      pastScrollRange={3}\r\n      futureScrollRange={RANGE}\r\n      // renderHeader={renderCustomHeader}\r\n      theme={theme}\r\n      onDayPress={(day) => {\r\n        setSelectedDate(day.dateString);\r\n        dateToPass = day.dateString;\r\n        console.log(\"dateToPass value before navigation:\", dateToPass);\r\n        navigation.navigate(\"DayAgenda\"); // @Noku Does this js file exist? \r\n      }}\r\n      markingType=\"period\"\r\n      // * The generateSchedule method does way too much at once, really caused issues with understanding\r\n      // I need to add back in the \"created_at\",\"updated_at\", \"hospital_id\", \"specialty_id\" into the generate Schedule function then strip out only the marked dates format.\r\n      markedDates={generateSchedule(fullScheduleList)} // now this function is the wrong format only to include: color, textColor and [startDate,endDate]\r\n    />\r\n    </View>\r\n  );\r\n};\r\n\r\n// generate marked dates [Too specific, needs to include relevant info for agenda ]\\\r\n// Refactored generateSchedule to include data it \"threw away\". Namely \"student_id\";,\"created_at\" ,\"updated_at\" ,\"hospital_id\",\"specialty_id\"\r\n// Returns objects with properties: \"startingDate\",\"color\",\"textColor\"\r\nconst generateSchedule = (onReceive) => {\r\n  let userSchedulesListObj = {};\r\n  let userMarkedDatesListObj = {};\r\n  // Iterate through entire list of schedules for all users\r\n  // Skip immediately if it's a different user, else parse the database object\r\n  onReceive.forEach((scheduleItem) => {\r\n    let scheduleObj = {};\r\n    let markedDateObj = {};\r\n\r\n    //only show scheduleItem for correct user\r\n    if (scheduleItem.student_id != authUserID) {\r\n      return {};\r\n    }\r\n    // Parse  week for the scheduleItem\r\n    // Returns: [startDate, endDate]\r\n    \r\n\r\n    //default colours. Can use a gradient of 2 colors, but I'm setting them all to the same color.\r\n    var color = \"rgba(80,206,187,0.5)\";\r\n    var startcolor = color;\r\n    var middlecolor = startcolor;\r\n    var endcolor = startcolor;\r\n\r\n    //change color based on specialty\r\n    // These are the different options color options (no interpolation)\r\n    if (scheduleItem.specialty_id == 2) {\r\n      startcolor = \"rgba(226,135,67,0.5)\";\r\n      middlecolor = \"rgba(226,135,67,0.25)\";\r\n      endcolor = \"rgba(226,135,67,0.5)\";\r\n    } else if (scheduleItem.specialty_id == 5) {\r\n      startcolor = \"rgba(8,181,245,0.5)\";\r\n      middlecolor = \"rgba(8,181,245,0.25)\";\r\n      endcolor = \"rgba(8,181,245,0.5)\";\r\n    } else if (scheduleItem.specialty_id == 6) {\r\n      startcolor = \"rgba(245,58,245,0.5)\";\r\n      middlecolor = \"rgba(245,58,245,0.25)\";\r\n      endcolor = \"rgba(245,58,245,0.5)\";\r\n    } else {\r\n      startcolor = \"rgba(80,206,187,0.5)\";\r\n      middlecolor = \"rgba(80,206,187,0.25)\";\r\n      endcolor = \"rgba(80,206,187,0.5)\";\r\n    }\r\n\r\n    // Iterates through each day and adds all the information to each schedule object/Agenda item\r\n    // This is a very important section, used to pass all the information to the views\r\n    daysInWeek.forEach((day, dayIndex) => {\r\n      scheduleObj = {};\r\n      markedDateObj = {};\r\n\r\n      // Configuring Conditional Variables\r\n      // Conditions for start dates\r\n      if (dayIndex === 0) {\r\n        scheduleObj.startingDate = true;\r\n        scheduleObj.color = startcolor;\r\n        scheduleObj.textColor = \"white\";\r\n      }\r\n      // Conditions for middle dates\r\n      else if (dayIndex > 0 && dayIndex <= 5) {\r\n        scheduleObj.color = middlecolor;\r\n        scheduleObj.textColor = \"white\";\r\n      }\r\n      // Conditions for end dates\r\n      else {\r\n        scheduleObj.endingDay = true;\r\n        scheduleObj.color = endcolor;\r\n        scheduleObj.textColor = \"white\";\r\n      }\r\n      // Packing the values into the schedule/agenda object\r\n      scheduleObj.student_id = scheduleItem.student_id;\r\n      scheduleObj.created_at = scheduleItem.created_at;\r\n      scheduleObj.updated_at = scheduleItem.updated_at;\r\n      scheduleObj.hospital_id = scheduleItem.hospital_id;\r\n      scheduleObj.specialty_id = scheduleItem.specialty_id;\r\n      scheduleObj.startingDate;\r\n      scheduleObj.color;\r\n      scheduleObj.textColor;\r\n\r\n      markedDateObj.startingDate = scheduleObj.startingDate;\r\n      markedDateObj.color = scheduleObj.color;\r\n      markedDateObj.textColor = scheduleObj.textColor;\r\n      // creating the object and stashing it in the user's schedule object list\r\n\r\n      userSchedulesListObj[day] = scheduleObj;\r\n      userMarkedDatesListObj[day] = markedDateObj;\r\n    }); // end of days i week\r\n  }); // End of Schedule List\r\n  // Saving a user's schedule as individual objects for each day higher up in scope.\r\n  usersAgenda = userSchedulesListObj;\r\n  // To test function\r\n  // console.log(\"Should be more verbose than marked again\", usersAgenda);\r\n  // console.log(\"Should be a only 3 properties\", userMarkedDatesListObj);\r\n  return userMarkedDatesListObj;\r\n};\r\n\r\n// get days that the specialty will run over using specialty duration\r\nconst getDaysInWeek = (startDate, specialtyduration) => {\r\n  let dates = [];\r\n  for (let i = 0; i < specialtyduration; i++) {\r\n    //takes current date and counts days prior to it for listing on calendar\r\n    const currentDate = new Date(startDate);\r\n    currentDate.setDate(startDate.getDate() + i);\r\n    const formattedDate = currentDate.toISOString().split(\"T\")[0];\r\n\r\n    dates.push(formattedDate);\r\n  }\r\n  return dates;\r\n};\r\n\r\n// calculates correct week based on the weeknumber and specialty duration\r\nconst getDateFromWeekNum = (weekNum, year, specialtyduration) => {\r\n  var daynum = weekNum * 7;\r\n  if (weekNum * 7 > 30) {\r\n    var month = (weekNum * 7) / 30 + 1;\r\n  } else {\r\n    var month = 0;\r\n  }\r\n  while (daynum > 30) {\r\n    daynum = daynum - 30;\r\n  }\r\n  month = parseInt(month);\r\n  var d = new Date(year, month, 1);\r\n  const endDate = new Date(d.setDate(daynum));\r\n  const startDate = new Date(year, month, 2);\r\n  startDate.setDate(endDate.getDate() - specialtyduration);\r\n  return { startDate: startDate, endDate: endDate };\r\n};\r\n\r\nconst theme = {\r\n  \"stylesheet.calendar.header\": {\r\n    dayHeader: {\r\n      fontWeight: \"600\",\r\n      color: \"#48BFE3\",\r\n    },\r\n  },\r\n  \"stylesheet.day.basic\": {\r\n    today: {\r\n      borderColor: \"#48BFE3\",\r\n      borderWidth: 0.8,\r\n    },\r\n    todayText: {\r\n      color: \"#5390D9\",\r\n      fontWeight: \"800\",\r\n    },\r\n  },\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 20,\r\n    backgroundColor: \"white\",\r\n    marginTop: 10,\r\n    borderRadius: 20,\r\n    flex: 1,\r\n    borderColor: \"rgba(36,50,61,1)\",\r\n    borderWidth: 5,\r\n  },\r\n});\r\n\r\nexport default CalendarView;\r\n\r\nexport { dateToPass };\r\nexport{ days};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}