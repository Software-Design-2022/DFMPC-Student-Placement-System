{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport { getEvents } from \"../Screens/RetrieveEvents\";\nimport AppContext from \"../AppContext\";\nimport \"../global.js\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { setStatusBarNetworkActivityIndicatorVisible } from \"expo-status-bar\";\nimport { firebase } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\nvar dateToPass = \"\";\nvar specialty = \"\";\nvar RANGE = 12;\nvar initialDate = \"2022-01-02\";\nvar usersAgenda = {};\nvar days = \"\";\n\nvar EventCalendar = function EventCalendar() {\n  var navigation = useNavigation();\n  var myContext = useContext(AppContext);\n\n  var _useState = useState(initialDate),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedDate = _useState2[0],\n      setSelectedDate = _useState2[1];\n\n  function getFirestoreEvents() {\n    var events,\n        snapshot,\n        _args = arguments;\n    return _regeneratorRuntime.async(function getFirestoreEvents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            events = _args.length > 0 && _args[0] !== undefined ? _args[0] : [];\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection(\"events\").get().then(function (querySnapshot) {\n              querySnapshot.forEach(function (doc) {\n                events.push({\n                  key: events.length + 1,\n                  name: doc.data().name,\n                  programme: doc.data().programme,\n                  ID: doc.data().id,\n                  start_date: doc.data().start_date,\n                  end_date: doc.data().end_date\n                });\n              });\n            }));\n\n          case 3:\n            snapshot = _context.sent;\n            console.log(events);\n            return _context.abrupt(\"return\", events);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var EventsList = [];\n  getFirestoreEvents();\n\n  var onDayPress = function onDayPress(day) {\n    console.log(\"Just ran the redundant function\");\n  };\n\n  return _jsx(View, {\n    children: _jsx(CalendarList, {\n      current: initialDate,\n      pastScrollRange: 3,\n      futureScrollRange: RANGE,\n      theme: theme,\n      onDayPress: function onDayPress(day) {\n        setSelectedDate(day.dateString);\n        dateToPass = day.dateString;\n        console.log(\"dateToPass value before navigation:\", dateToPass);\n        navigation.navigate(\"DayAgenda\");\n      },\n      markingType: \"period\",\n      markedDates: EventList\n    })\n  });\n};\n\nvar generateSchedule = function generateSchedule(onReceive) {};\n\nvar theme = {\n  \"stylesheet.calendar.header\": {\n    dayHeader: {\n      fontWeight: \"600\",\n      color: \"#48BFE3\"\n    }\n  },\n  \"stylesheet.day.basic\": {\n    today: {\n      borderColor: \"#48BFE3\",\n      borderWidth: 0.8\n    },\n    todayText: {\n      color: \"#5390D9\",\n      fontWeight: \"800\"\n    }\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderRadius: 20,\n    flex: 1,\n    borderColor: \"rgba(36,50,61,1)\",\n    borderWidth: 5\n  }\n});\nexport default EventCalendar;\nexport { dateToPass };\nexport { days };","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigation","Calendar","CalendarList","Agenda","getEvents","AppContext","NavigationContainer","setStatusBarNetworkActivityIndicatorVisible","firebase","buttonHeight","textPos","SPACING","AVATAR_SIZE","ICON_SIZE","dateToPass","specialty","RANGE","initialDate","usersAgenda","days","EventCalendar","navigation","myContext","selectedDate","setSelectedDate","getFirestoreEvents","events","firestore","collection","get","then","querySnapshot","forEach","doc","push","key","length","name","data","programme","ID","id","start_date","end_date","snapshot","console","log","EventsList","onDayPress","day","theme","dateString","navigate","EventList","generateSchedule","onReceive","dayHeader","fontWeight","color","today","borderColor","borderWidth","todayText","styles","StyleSheet","create","container","marginTop","backgroundColor","borderRadius","flex"],"sources":["C:/Users/nokno/OneDrive/Documents/GitHub/DFMPC-Student-Placement-System/Screens/EventsCalendar.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\r\nimport { getEvents } from \"../Screens/RetrieveEvents\";\r\nimport AppContext from \"../AppContext\";\r\nimport \"../global.js\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { setStatusBarNetworkActivityIndicatorVisible } from \"expo-status-bar\";\r\nimport {firebase} from \"../firebase\"\r\n\r\n//constants\r\nconst buttonHeight = 50;\r\nconst textPos = buttonHeight / 2;\r\nconst SPACING = 20;\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 80;\r\nvar dateToPass = \"\";\r\nvar specialty = \"\";\r\nconst RANGE = 12;\r\nconst initialDate = \"2022-01-02\";\r\nvar usersAgenda = {};\r\nconst days = \"\"; //@Noku - this is what I used to fix the Calendar\r\n\r\nconst EventCalendar = () => {\r\n  //use navigation\r\n  const navigation = useNavigation();\r\n  const myContext = useContext(AppContext);\r\n  // Keeps track of selected date\r\n  const [selectedDate, setSelectedDate] = useState(initialDate);\r\n\r\n\r\n  async function getFirestoreEvents(events = []) {\r\n    var snapshot = await firebase\r\n    .firestore()\r\n    .collection(\"events\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n        querySnapshot.forEach(function (doc) {\r\n            events.push({\r\n              key: events.length + 1,\r\n              name: doc.data().name,\r\n              programme: doc.data().programme,\r\n              ID: doc.data().id,\r\n              start_date: doc.data().start_date,\r\n              end_date: doc.data().end_date,\r\n            });\r\n    \r\n        });\r\n    });\r\n    console.log(events);\r\n   return events;\r\n}\r\n\r\nvar EventsList = []\r\ngetFirestoreEvents();\r\n\r\n\r\n  // User's agenda\r\n  // What to do when day is pressed.\r\n  const onDayPress = (day) => {\r\n    console.log(\"Just ran the redundant function\");\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <CalendarList\r\n        // testID={testIDs.calendarList.CONTAINER}\r\n        current={initialDate}\r\n        pastScrollRange={3}\r\n        futureScrollRange={RANGE}\r\n        // renderHeader={renderCustomHeader}\r\n        theme={theme}\r\n        \r\n        onDayPress={(day) => {\r\n          setSelectedDate(day.dateString);\r\n          dateToPass = day.dateString;\r\n          console.log(\"dateToPass value before navigation:\", dateToPass);\r\n          navigation.navigate(\"DayAgenda\"); // @Noku Does this js file exist?\r\n        }}\r\n        markingType=\"period\"\r\n        \r\n        markedDates={\r\n          EventList\r\n        } \r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst generateSchedule = (onReceive) => {\r\n  /**\r\n   * Function to generate the schedule for the calendar\r\n   * TODO: Create a calendar with the student's ID as their schedule.\r\n   * For loop through the Event List and add the dates to the calendar as followed.\r\n   * Create .saveEvent() function to save the event to the database.\r\n   * RNCalendarEvents.saveEvent(specialtyName, {\r\n   * calendarId: studentID,\r\n   * startDate: start_date, \\\\ Correct format '2016-08-19T19:26:00.000Z'\r\n   * recurrenceRule: {\r\n   * frequency: 'weekly',\r\n   * endDate: end_date,\r\n   * }\r\n   * location:  hospitalID,\r\n   * notes: 'Bring sunglasses'\r\n   * }\r\n   */\r\n  \r\n};\r\n\r\nconst theme = {\r\n  \"stylesheet.calendar.header\": {\r\n    dayHeader: {\r\n      fontWeight: \"600\",\r\n      color: \"#48BFE3\",\r\n    },\r\n  },\r\n  \"stylesheet.day.basic\": {\r\n    today: {\r\n      borderColor: \"#48BFE3\",\r\n      borderWidth: 0.8,\r\n    },\r\n    todayText: {\r\n      color: \"#5390D9\",\r\n      fontWeight: \"800\",\r\n    },\r\n  },\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 20,\r\n    backgroundColor: \"white\",\r\n    marginTop: 10,\r\n    borderRadius: 20,\r\n    flex: 1,\r\n    borderColor: \"rgba(36,50,61,1)\",\r\n    borderWidth: 5,\r\n  },\r\n});\r\n\r\nexport default EventCalendar;\r\n\r\nexport { dateToPass };\r\nexport { days };\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;;AAEA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,MAAjC,QAA+C,wBAA/C;AACA,SAASC,SAAT;AACA,OAAOC,UAAP;AACA;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,2CAAT,QAA4D,iBAA5D;AACA,SAAQC,QAAR;;AAGA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,OAAO,GAAGD,YAAY,GAAG,CAA/B;AACA,IAAME,OAAO,GAAG,EAAhB;AACA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAMC,KAAK,GAAG,EAAd;AACA,IAAMC,WAAW,GAAG,YAApB;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAMC,IAAI,GAAG,EAAb;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAE1B,IAAMC,UAAU,GAAGrB,aAAa,EAAhC;EACA,IAAMsB,SAAS,GAAGvB,UAAU,CAACM,UAAD,CAA5B;;EAEA,gBAAwCR,QAAQ,CAACoB,WAAD,CAAhD;EAAA;EAAA,IAAOM,YAAP;EAAA,IAAqBC,eAArB;;EAGA,SAAeC,kBAAf;IAAA;IAAA;IAAA;IAAA;MAAA;QAAA;UAAA;YAAkCC,MAAlC,2DAA2C,EAA3C;YAAA;YAAA,iCACuBlB,QAAQ,CAC5BmB,SADoB,GAEpBC,UAFoB,CAET,QAFS,EAGpBC,GAHoB,GAIpBC,IAJoB,CAIf,UAACC,aAAD,EAAmB;cACrBA,aAAa,CAACC,OAAd,CAAsB,UAAUC,GAAV,EAAe;gBACjCP,MAAM,CAACQ,IAAP,CAAY;kBACVC,GAAG,EAAET,MAAM,CAACU,MAAP,GAAgB,CADX;kBAEVC,IAAI,EAAEJ,GAAG,CAACK,IAAJ,GAAWD,IAFP;kBAGVE,SAAS,EAAEN,GAAG,CAACK,IAAJ,GAAWC,SAHZ;kBAIVC,EAAE,EAAEP,GAAG,CAACK,IAAJ,GAAWG,EAJL;kBAKVC,UAAU,EAAET,GAAG,CAACK,IAAJ,GAAWI,UALb;kBAMVC,QAAQ,EAAEV,GAAG,CAACK,IAAJ,GAAWK;gBANX,CAAZ;cASH,CAVD;YAWH,CAhBoB,CADvB;;UAAA;YACMC,QADN;YAkBEC,OAAO,CAACC,GAAR,CAAYpB,MAAZ;YAlBF,iCAmBQA,MAnBR;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAsBF,IAAIqB,UAAU,GAAG,EAAjB;EACAtB,kBAAkB;;EAKhB,IAAMuB,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;IAC1BJ,OAAO,CAACC,GAAR,CAAY,iCAAZ;EACD,CAFD;;EAIA,OACE,KAAC,IAAD;IAAA,UACE,KAAC,YAAD;MAEE,OAAO,EAAE7B,WAFX;MAGE,eAAe,EAAE,CAHnB;MAIE,iBAAiB,EAAED,KAJrB;MAME,KAAK,EAAEkC,KANT;MAQE,UAAU,EAAE,oBAACD,GAAD,EAAS;QACnBzB,eAAe,CAACyB,GAAG,CAACE,UAAL,CAAf;QACArC,UAAU,GAAGmC,GAAG,CAACE,UAAjB;QACAN,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDhC,UAAnD;QACAO,UAAU,CAAC+B,QAAX,CAAoB,WAApB;MACD,CAbH;MAcE,WAAW,EAAC,QAdd;MAgBE,WAAW,EACTC;IAjBJ;EADF,EADF;AAwBD,CAhED;;AAkEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAAe,CAkBvC,CAlBD;;AAoBA,IAAML,KAAK,GAAG;EACZ,8BAA8B;IAC5BM,SAAS,EAAE;MACTC,UAAU,EAAE,KADH;MAETC,KAAK,EAAE;IAFE;EADiB,CADlB;EAOZ,wBAAwB;IACtBC,KAAK,EAAE;MACLC,WAAW,EAAE,SADR;MAELC,WAAW,EAAE;IAFR,CADe;IAKtBC,SAAS,EAAE;MACTJ,KAAK,EAAE,SADE;MAETD,UAAU,EAAE;IAFH;EALW;AAPZ,CAAd;AAmBA,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,SAAS,EAAE,EADF;IAETC,eAAe,EAAE,OAFR;IAGTD,SAAS,EAAE,EAHF;IAITE,YAAY,EAAE,EAJL;IAKTC,IAAI,EAAE,CALG;IAMTV,WAAW,EAAE,kBANJ;IAOTC,WAAW,EAAE;EAPJ;AADoB,CAAlB,CAAf;AAYA,eAAezC,aAAf;AAEA,SAASN,UAAT;AACA,SAASK,IAAT"},"metadata":{},"sourceType":"module"}