{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"index\", \"total\", \"siblings\", \"style\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar CardContent = function CardContent(_ref) {\n  var index = _ref.index,\n    total = _ref.total,\n    siblings = _ref.siblings,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var cover = 'withTheme(CardCover)';\n  var title = 'withTheme(CardTitle)';\n  var contentStyle, prev, next;\n  if (typeof index === 'number' && siblings) {\n    prev = siblings[index - 1];\n    next = siblings[index + 1];\n  }\n  if (prev === cover && next === cover || prev === title && next === title || total === 1) {\n    contentStyle = styles.only;\n  } else if (index === 0) {\n    if (next === cover || next === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.first;\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    if (prev === cover || prev === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.last;\n    }\n  } else if (prev === cover || prev === title) {\n    contentStyle = styles.first;\n  } else if (next === cover || next === title) {\n    contentStyle = styles.last;\n  }\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.container, contentStyle, style]\n  }));\n};\nCardContent.displayName = 'Card.Content';\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16\n  },\n  first: {\n    paddingTop: 16\n  },\n  last: {\n    paddingBottom: 16\n  },\n  only: {\n    paddingVertical: 16\n  }\n});\nexport default CardContent;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAkDA,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAGC,MAAuD;EAAA,IAApDC,KAAF,GAAsDD,KAApDC,KAAF;IAASC,KAAT,GAAsDF,KAA7CE,KAAT;IAAgBC,QAAhB,GAAsDH,KAAtCG,QAAhB;IAA0BC,KAA1B,GAAsDJ,KAA5BI,KAA1B;IAAoCC,gCAAkBL;EACzE,IAAMM,KAAK,GAAG,sBAAd;EACA,IAAMC,KAAK,GAAG,sBAAd;EAEA,IAAIC,YAAJ,EAAkBC,IAAlB,EAAwBC,IAAxB;EAEA,IAAI,OAAOT,KAAP,KAAiB,QAAjB,IAA6BE,QAAjC,EAA2C;IACzCM,IAAI,GAAGN,QAAQ,CAACF,KAAK,GAAG,CAAT,CAAf;IACAS,IAAI,GAAGP,QAAQ,CAACF,KAAK,GAAG,CAAT,CAAf;EACD;EAED,IACGQ,IAAI,KAAKH,KAAT,IAAkBI,IAAI,KAAKJ,KAA5B,IACCG,IAAI,KAAKF,KAAT,IAAkBG,IAAI,KAAKH,KAD5B,IAEAL,KAAK,KAAK,CAHZ,EAIE;IACAM,YAAY,GAAGG,MAAM,CAACC,IAAtB;EACD,CAND,MAMO,IAAIX,KAAK,KAAK,CAAd,EAAiB;IACtB,IAAIS,IAAI,KAAKJ,KAAT,IAAkBI,IAAI,KAAKH,KAA/B,EAAsC;MACpCC,YAAY,GAAGG,MAAM,CAACC,IAAtB;IACD,CAFD,MAEO;MACLJ,YAAY,GAAGG,MAAM,CAACE,KAAtB;IACD;EACF,CANM,MAMA,IAAI,OAAOX,KAAP,KAAiB,QAAjB,IAA6BD,KAAK,KAAKC,KAAK,GAAG,CAAnD,EAAsD;IAC3D,IAAIO,IAAI,KAAKH,KAAT,IAAkBG,IAAI,KAAKF,KAA/B,EAAsC;MACpCC,YAAY,GAAGG,MAAM,CAACC,IAAtB;IACD,CAFD,MAEO;MACLJ,YAAY,GAAGG,MAAM,CAACG,IAAtB;IACD;EACF,CANM,MAMA,IAAIL,IAAI,KAAKH,KAAT,IAAkBG,IAAI,KAAKF,KAA/B,EAAsC;IAC3CC,YAAY,GAAGG,MAAM,CAACE,KAAtB;EACD,CAFM,MAEA,IAAIH,IAAI,KAAKJ,KAAT,IAAkBI,IAAI,KAAKH,KAA/B,EAAsC;IAC3CC,YAAY,GAAGG,MAAM,CAACG,IAAtB;EACD;EAED,OAAOhB,oBAACiB,IAAD,eAAUV,IAAV;IAAgBD,KAAK,EAAE,CAACO,MAAM,CAACK,SAAR,EAAmBR,YAAnB,EAAiCJ,KAAjC;EAAvB,GAAP;AACD,CApCD;AAsCAL,WAAW,CAACkB,WAAZ,GAA0B,cAA1B;AAEA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,iBAAiB,EAAE;EADV,CADoB;EAI/BP,KAAK,EAAE;IACLQ,UAAU,EAAE;EADP,CAJwB;EAO/BP,IAAI,EAAE;IACJQ,aAAa,EAAE;EADX,CAPyB;EAU/BV,IAAI,EAAE;IACJW,eAAe,EAAE;EADb;AAVyB,CAAlB,CAAf;AAeA,eAAexB,WAAf","names":["React","CardContent","_ref","index","total","siblings","style","rest","cover","title","contentStyle","prev","next","styles","only","first","last","View","container","displayName","StyleSheet","create","paddingHorizontal","paddingTop","paddingBottom","paddingVertical"],"sources":["CardContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Items inside the `Card.Content`.\n   */\n  children: React.ReactNode;\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  /**\n   * @internal\n   */\n  siblings?: Array<string>;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show content inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-content-example.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card, Title, Paragraph } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst CardContent = ({ index, total, siblings, style, ...rest }: Props) => {\n  const cover = 'withTheme(CardCover)';\n  const title = 'withTheme(CardTitle)';\n\n  let contentStyle, prev, next;\n\n  if (typeof index === 'number' && siblings) {\n    prev = siblings[index - 1];\n    next = siblings[index + 1];\n  }\n\n  if (\n    (prev === cover && next === cover) ||\n    (prev === title && next === title) ||\n    total === 1\n  ) {\n    contentStyle = styles.only;\n  } else if (index === 0) {\n    if (next === cover || next === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.first;\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    if (prev === cover || prev === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.last;\n    }\n  } else if (prev === cover || prev === title) {\n    contentStyle = styles.first;\n  } else if (next === cover || next === title) {\n    contentStyle = styles.last;\n  }\n\n  return <View {...rest} style={[styles.container, contentStyle, style]} />;\n};\n\nCardContent.displayName = 'Card.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n  },\n  first: {\n    paddingTop: 16,\n  },\n  last: {\n    paddingBottom: 16,\n  },\n  only: {\n    paddingVertical: 16,\n  },\n});\n\nexport default CardContent;\n"]},"metadata":{},"sourceType":"module"}