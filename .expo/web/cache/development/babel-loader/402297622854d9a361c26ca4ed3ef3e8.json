{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport isFunction from 'lodash/isFunction';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { extractComponentProps } from \"../../componentUpdater\";\nimport { sameDate } from \"../../dateutils\";\nimport { toMarkingFormat } from \"../../interface\";\nimport styleConstructor from \"./style\";\nimport Reservation from \"./reservation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ReservationList = function (_Component) {\n  _inherits(ReservationList, _Component);\n\n  var _super = _createSuper(ReservationList);\n\n  function ReservationList(props) {\n    var _this;\n\n    _classCallCheck(this, ReservationList);\n\n    _this = _super.call(this, props);\n    _this.list = React.createRef();\n\n    _this.onScroll = function (event) {\n      var yOffset = event.nativeEvent.contentOffset.y;\n      _this.props.onScroll == null ? void 0 : _this.props.onScroll(yOffset);\n      var topRowOffset = 0;\n      var topRow;\n\n      for (topRow = 0; topRow < _this.heights.length; topRow++) {\n        if (topRowOffset + _this.heights[topRow] / 2 >= yOffset) {\n          break;\n        }\n\n        topRowOffset += _this.heights[topRow];\n      }\n\n      var row = _this.state.reservations[topRow];\n      if (!row) return;\n      var day = row.date;\n\n      if (day) {\n        if (!sameDate(day, _this.selectedDay) && _this.scrollOver) {\n          _this.selectedDay = day.clone();\n          _this.props.onDayChange == null ? void 0 : _this.props.onDayChange(day.clone());\n        }\n      }\n    };\n\n    _this.onMoveShouldSetResponderCapture = function () {\n      _this.onListTouch();\n\n      return false;\n    };\n\n    _this.renderRow = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var reservationProps = extractComponentProps(Reservation, _this.props);\n      return _jsx(View, {\n        onLayout: _this.onRowLayoutChange.bind(_assertThisInitialized(_this), index),\n        children: _jsx(Reservation, _objectSpread(_objectSpread({}, reservationProps), {}, {\n          item: item.reservation,\n          date: item.date\n        }))\n      });\n    };\n\n    _this.keyExtractor = function (item, index) {\n      var _item$reservation;\n\n      return (_this.props.reservationsKeyExtractor == null ? void 0 : _this.props.reservationsKeyExtractor(item, index)) || \"\" + (item == null ? void 0 : (_item$reservation = item.reservation) == null ? void 0 : _item$reservation.day) + index;\n    };\n\n    _this.style = styleConstructor(props.theme);\n    _this.state = {\n      reservations: []\n    };\n    _this.heights = [];\n    _this.selectedDay = props.selectedDay;\n    _this.scrollOver = true;\n    return _this;\n  }\n\n  _createClass(ReservationList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateDataSource(this.getReservations(this.props).reservations);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (this.props.topDay && prevProps.topDay && prevProps !== this.props) {\n        if (!sameDate(prevProps.topDay, this.props.topDay)) {\n          this.setState({\n            reservations: []\n          }, function () {\n            return _this2.updateReservations(_this2.props);\n          });\n        } else {\n          this.updateReservations(this.props);\n        }\n      }\n    }\n  }, {\n    key: \"updateDataSource\",\n    value: function updateDataSource(reservations) {\n      this.setState({\n        reservations: reservations\n      });\n    }\n  }, {\n    key: \"updateReservations\",\n    value: function updateReservations(props) {\n      var selectedDay = props.selectedDay;\n      var reservations = this.getReservations(props);\n\n      if (this.list && !sameDate(selectedDay, this.selectedDay)) {\n        var _this$list, _this$list$current;\n\n        var scrollPosition = 0;\n\n        for (var i = 0; i < reservations.scrollPosition; i++) {\n          scrollPosition += this.heights[i] || 0;\n        }\n\n        this.scrollOver = false;\n        (_this$list = this.list) == null ? void 0 : (_this$list$current = _this$list.current) == null ? void 0 : _this$list$current.scrollToOffset({\n          offset: scrollPosition,\n          animated: true\n        });\n      }\n\n      this.selectedDay = selectedDay;\n      this.updateDataSource(reservations.reservations);\n    }\n  }, {\n    key: \"getReservationsForDay\",\n    value: function getReservationsForDay(iterator, props) {\n      var _props$items;\n\n      var day = iterator.clone();\n      var res = (_props$items = props.items) == null ? void 0 : _props$items[toMarkingFormat(day)];\n\n      if (res && res.length) {\n        return res.map(function (reservation, i) {\n          return {\n            reservation: reservation,\n            date: i ? undefined : day\n          };\n        });\n      } else if (res) {\n        return [{\n          date: iterator.clone()\n        }];\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"getReservations\",\n    value: function getReservations(props) {\n      var selectedDay = props.selectedDay,\n          showOnlySelectedDayItems = props.showOnlySelectedDayItems;\n\n      if (!props.items || !selectedDay) {\n        return {\n          reservations: [],\n          scrollPosition: 0\n        };\n      }\n\n      var reservations = [];\n\n      if (this.state.reservations && this.state.reservations.length) {\n        var _this$state$reservati;\n\n        var _iterator = (_this$state$reservati = this.state.reservations[0].date) == null ? void 0 : _this$state$reservati.clone();\n\n        if (_iterator) {\n          while (_iterator.getTime() < selectedDay.getTime()) {\n            var res = this.getReservationsForDay(_iterator, props);\n\n            if (!res) {\n              reservations = [];\n              break;\n            } else {\n              reservations = reservations.concat(res);\n            }\n\n            _iterator.addDays(1);\n          }\n        }\n      }\n\n      var scrollPosition = reservations.length;\n      var iterator = selectedDay.clone();\n\n      if (showOnlySelectedDayItems) {\n        var _res = this.getReservationsForDay(iterator, props);\n\n        if (_res) {\n          reservations = _res;\n        }\n\n        iterator.addDays(1);\n      } else {\n        for (var i = 0; i < 31; i++) {\n          var _res2 = this.getReservationsForDay(iterator, props);\n\n          if (_res2) {\n            reservations = reservations.concat(_res2);\n          }\n\n          iterator.addDays(1);\n        }\n      }\n\n      return {\n        reservations: reservations,\n        scrollPosition: scrollPosition\n      };\n    }\n  }, {\n    key: \"onListTouch\",\n    value: function onListTouch() {\n      this.scrollOver = true;\n    }\n  }, {\n    key: \"onRowLayoutChange\",\n    value: function onRowLayoutChange(index, event) {\n      this.heights[index] = event.nativeEvent.layout.height;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          items = _this$props.items,\n          selectedDay = _this$props.selectedDay,\n          theme = _this$props.theme,\n          style = _this$props.style;\n\n      if (!items || selectedDay && !items[toMarkingFormat(selectedDay)]) {\n        if (isFunction(this.props.renderEmptyData)) {\n          var _this$props$renderEmp, _this$props2;\n\n          return (_this$props$renderEmp = (_this$props2 = this.props).renderEmptyData) == null ? void 0 : _this$props$renderEmp.call(_this$props2);\n        }\n\n        return _jsx(ActivityIndicator, {\n          style: this.style.indicator,\n          color: theme == null ? void 0 : theme.indicatorColor\n        });\n      }\n\n      return _jsx(FlatList, {\n        ref: this.list,\n        style: style,\n        contentContainerStyle: this.style.content,\n        data: this.state.reservations,\n        renderItem: this.renderRow,\n        keyExtractor: this.keyExtractor,\n        showsVerticalScrollIndicator: false,\n        scrollEventThrottle: 200,\n        onMoveShouldSetResponderCapture: this.onMoveShouldSetResponderCapture,\n        onScroll: this.onScroll,\n        refreshControl: this.props.refreshControl,\n        refreshing: this.props.refreshing,\n        onRefresh: this.props.onRefresh,\n        onScrollBeginDrag: this.props.onScrollBeginDrag,\n        onScrollEndDrag: this.props.onScrollEndDrag,\n        onMomentumScrollBegin: this.props.onMomentumScrollBegin,\n        onMomentumScrollEnd: this.props.onMomentumScrollEnd\n      });\n    }\n  }]);\n\n  return ReservationList;\n}(Component);\n\nReservationList.displayName = 'ReservationList';\nReservationList.propTypes = _objectSpread(_objectSpread({}, Reservation.propTypes), {}, {\n  items: PropTypes.object,\n  selectedDay: PropTypes.instanceOf(XDate),\n  topDay: PropTypes.instanceOf(XDate),\n  onDayChange: PropTypes.func,\n  showOnlySelectedDayItems: PropTypes.bool,\n  renderEmptyData: PropTypes.func,\n  onScroll: PropTypes.func,\n  onScrollBeginDrag: PropTypes.func,\n  onScrollEndDrag: PropTypes.func,\n  onMomentumScrollBegin: PropTypes.func,\n  onMomentumScrollEnd: PropTypes.func,\n  refreshControl: PropTypes.element,\n  refreshing: PropTypes.bool,\n  onRefresh: PropTypes.func,\n  reservationsKeyExtractor: PropTypes.func\n});\nReservationList.defaultProps = {\n  refreshing: false,\n  selectedDay: new XDate(true)\n};\nexport default ReservationList;","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/agenda/reservation-list/index.js"],"names":["isFunction","PropTypes","XDate","React","Component","extractComponentProps","sameDate","toMarkingFormat","styleConstructor","Reservation","ReservationList","props","list","createRef","onScroll","event","yOffset","nativeEvent","contentOffset","y","topRowOffset","topRow","heights","length","row","state","reservations","day","date","selectedDay","scrollOver","clone","onDayChange","onMoveShouldSetResponderCapture","onListTouch","renderRow","item","index","reservationProps","onRowLayoutChange","bind","reservation","keyExtractor","reservationsKeyExtractor","style","theme","updateDataSource","getReservations","prevProps","topDay","setState","updateReservations","scrollPosition","i","current","scrollToOffset","offset","animated","iterator","res","items","map","undefined","showOnlySelectedDayItems","getTime","getReservationsForDay","concat","addDays","layout","height","renderEmptyData","indicator","indicatorColor","content","refreshControl","refreshing","onRefresh","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","displayName","propTypes","object","instanceOf","func","bool","element","defaultProps"],"mappings":"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","sourcesContent":["import isFunction from 'lodash/isFunction';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { ActivityIndicator, View, FlatList } from 'react-native';\nimport { extractComponentProps } from '../../componentUpdater';\nimport { sameDate } from '../../dateutils';\nimport { toMarkingFormat } from '../../interface';\nimport styleConstructor from './style';\nimport Reservation from './reservation';\nclass ReservationList extends Component {\n    static displayName = 'ReservationList';\n    static propTypes = {\n        ...Reservation.propTypes,\n        items: PropTypes.object,\n        selectedDay: PropTypes.instanceOf(XDate),\n        topDay: PropTypes.instanceOf(XDate),\n        onDayChange: PropTypes.func,\n        showOnlySelectedDayItems: PropTypes.bool,\n        renderEmptyData: PropTypes.func,\n        onScroll: PropTypes.func,\n        onScrollBeginDrag: PropTypes.func,\n        onScrollEndDrag: PropTypes.func,\n        onMomentumScrollBegin: PropTypes.func,\n        onMomentumScrollEnd: PropTypes.func,\n        refreshControl: PropTypes.element,\n        refreshing: PropTypes.bool,\n        onRefresh: PropTypes.func,\n        reservationsKeyExtractor: PropTypes.func\n    };\n    static defaultProps = {\n        refreshing: false,\n        selectedDay: new XDate(true)\n    };\n    style;\n    heights;\n    selectedDay;\n    scrollOver;\n    list = React.createRef();\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n        this.state = {\n            reservations: []\n        };\n        this.heights = [];\n        this.selectedDay = props.selectedDay;\n        this.scrollOver = true;\n    }\n    componentDidMount() {\n        this.updateDataSource(this.getReservations(this.props).reservations);\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.topDay && prevProps.topDay && prevProps !== this.props) {\n            if (!sameDate(prevProps.topDay, this.props.topDay)) {\n                this.setState({ reservations: [] }, () => this.updateReservations(this.props));\n            }\n            else {\n                this.updateReservations(this.props);\n            }\n        }\n    }\n    updateDataSource(reservations) {\n        this.setState({ reservations });\n    }\n    updateReservations(props) {\n        const { selectedDay } = props;\n        const reservations = this.getReservations(props);\n        if (this.list && !sameDate(selectedDay, this.selectedDay)) {\n            let scrollPosition = 0;\n            for (let i = 0; i < reservations.scrollPosition; i++) {\n                scrollPosition += this.heights[i] || 0;\n            }\n            this.scrollOver = false;\n            this.list?.current?.scrollToOffset({ offset: scrollPosition, animated: true });\n        }\n        this.selectedDay = selectedDay;\n        this.updateDataSource(reservations.reservations);\n    }\n    getReservationsForDay(iterator, props) {\n        const day = iterator.clone();\n        const res = props.items?.[toMarkingFormat(day)];\n        if (res && res.length) {\n            return res.map((reservation, i) => {\n                return {\n                    reservation,\n                    date: i ? undefined : day\n                };\n            });\n        }\n        else if (res) {\n            return [\n                {\n                    date: iterator.clone()\n                }\n            ];\n        }\n        else {\n            return false;\n        }\n    }\n    getReservations(props) {\n        const { selectedDay, showOnlySelectedDayItems } = props;\n        if (!props.items || !selectedDay) {\n            return { reservations: [], scrollPosition: 0 };\n        }\n        let reservations = [];\n        if (this.state.reservations && this.state.reservations.length) {\n            const iterator = this.state.reservations[0].date?.clone();\n            if (iterator) {\n                while (iterator.getTime() < selectedDay.getTime()) {\n                    const res = this.getReservationsForDay(iterator, props);\n                    if (!res) {\n                        reservations = [];\n                        break;\n                    }\n                    else {\n                        reservations = reservations.concat(res);\n                    }\n                    iterator.addDays(1);\n                }\n            }\n        }\n        const scrollPosition = reservations.length;\n        const iterator = selectedDay.clone();\n        if (showOnlySelectedDayItems) {\n            const res = this.getReservationsForDay(iterator, props);\n            if (res) {\n                reservations = res;\n            }\n            iterator.addDays(1);\n        }\n        else {\n            for (let i = 0; i < 31; i++) {\n                const res = this.getReservationsForDay(iterator, props);\n                if (res) {\n                    reservations = reservations.concat(res);\n                }\n                iterator.addDays(1);\n            }\n        }\n        return { reservations, scrollPosition };\n    }\n    onScroll = (event) => {\n        const yOffset = event.nativeEvent.contentOffset.y;\n        this.props.onScroll?.(yOffset);\n        let topRowOffset = 0;\n        let topRow;\n        for (topRow = 0; topRow < this.heights.length; topRow++) {\n            if (topRowOffset + this.heights[topRow] / 2 >= yOffset) {\n                break;\n            }\n            topRowOffset += this.heights[topRow];\n        }\n        const row = this.state.reservations[topRow];\n        if (!row)\n            return;\n        const day = row.date;\n        if (day) {\n            if (!sameDate(day, this.selectedDay) && this.scrollOver) {\n                this.selectedDay = day.clone();\n                this.props.onDayChange?.(day.clone());\n            }\n        }\n    };\n    onListTouch() {\n        this.scrollOver = true;\n    }\n    onRowLayoutChange(index, event) {\n        this.heights[index] = event.nativeEvent.layout.height;\n    }\n    onMoveShouldSetResponderCapture = () => {\n        this.onListTouch();\n        return false;\n    };\n    renderRow = ({ item, index }) => {\n        const reservationProps = extractComponentProps(Reservation, this.props);\n        return (<View onLayout={this.onRowLayoutChange.bind(this, index)}>\n        <Reservation {...reservationProps} item={item.reservation} date={item.date}/>\n      </View>);\n    };\n    keyExtractor = (item, index) => {\n        return this.props.reservationsKeyExtractor?.(item, index) || `${item?.reservation?.day}${index}`;\n    };\n    render() {\n        const { items, selectedDay, theme, style } = this.props;\n        if (!items || selectedDay && !items[toMarkingFormat(selectedDay)]) {\n            if (isFunction(this.props.renderEmptyData)) {\n                return this.props.renderEmptyData?.();\n            }\n            return <ActivityIndicator style={this.style.indicator} color={theme?.indicatorColor}/>;\n        }\n        return (<FlatList ref={this.list} style={style} contentContainerStyle={this.style.content} data={this.state.reservations} renderItem={this.renderRow} keyExtractor={this.keyExtractor} showsVerticalScrollIndicator={false} scrollEventThrottle={200} onMoveShouldSetResponderCapture={this.onMoveShouldSetResponderCapture} onScroll={this.onScroll} refreshControl={this.props.refreshControl} refreshing={this.props.refreshing} onRefresh={this.props.onRefresh} onScrollBeginDrag={this.props.onScrollBeginDrag} onScrollEndDrag={this.props.onScrollEndDrag} onMomentumScrollBegin={this.props.onMomentumScrollBegin} onMomentumScrollEnd={this.props.onMomentumScrollEnd}/>);\n    }\n}\nexport default ReservationList;\n"]},"metadata":{},"sourceType":"module"}