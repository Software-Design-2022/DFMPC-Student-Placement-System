{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { db } from \"../firebase\";\nimport { firebase } from \"../firebase\";\nimport { v4 as uuidv4 } from 'uuid';\nexport function getSchedule(onReceiveList) {\n  var schedules, snapshot;\n  return _regeneratorRuntime.async(function getSchedule$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          schedules = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection());\n\n        case 3:\n          snapshot = _context.sent;\n          snapshot.forEach(function (doc) {\n            schedules.push({\n              key1: schedules.length + 1,\n              student_id: doc.data().student_id,\n              SpecialtyName: doc.data().SpecialtyName,\n              hospital_ID: doc.data().hospital_id,\n              specialty_duration: doc.data().specialty_duration,\n              start_date: doc.data().start_date,\n              end_date: doc.data().end_date,\n              specialty_id: doc.data().specialty_id\n            });\n          });\n          onReceiveList(schedules);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["db","firebase","v4","uuidv4","getSchedule","onReceiveList","schedules","firestore","collection","snapshot","forEach","doc","push","key1","length","student_id","data","SpecialtyName","hospital_ID","hospital_id","specialty_duration","start_date","end_date","specialty_id"],"sources":["C:/Users/nokno/OneDrive/Documents/GitHub/DFMPC-Student-Placement-System/Screens/RetrieveSchedules.js"],"sourcesContent":["import {db} from \"../firebase\"\r\nimport {firebase} from \"../firebase\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n\r\n\r\n\r\nexport async function getSchedule(onReceiveList) {\r\n    var schedules = [];\r\n    var snapshot = await firebase\r\n    .firestore()\r\n    .collection()\r\n    snapshot.forEach(function (doc) {\r\n        \r\n        schedules.push({\r\n            key1: schedules.length + 1,\r\n            student_id: doc.data().student_id,\r\n            SpecialtyName: doc.data().SpecialtyName,\r\n            hospital_ID: doc.data().hospital_id,\r\n            specialty_duration: doc.data().specialty_duration,\r\n            start_date: doc.data().start_date,\r\n            end_date: doc.data().end_date,\r\n            specialty_id: doc.data().specialty_id,\r\n        });\r\n\r\n    });\r\n   onReceiveList(schedules);\r\n}"],"mappings":";AAAA,SAAQA,EAAR;AACA,SAAQC,QAAR;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAMA,OAAO,SAAeC,WAAf,CAA2BC,aAA3B;EAAA;EAAA;IAAA;MAAA;QAAA;UACCC,SADD,GACa,EADb;UAAA;UAAA,iCAEkBL,QAAQ,CAC5BM,SADoB,GAEpBC,UAFoB,EAFlB;;QAAA;UAECC,QAFD;UAKHA,QAAQ,CAACC,OAAT,CAAiB,UAAUC,GAAV,EAAe;YAE5BL,SAAS,CAACM,IAAV,CAAe;cACXC,IAAI,EAAEP,SAAS,CAACQ,MAAV,GAAmB,CADd;cAEXC,UAAU,EAAEJ,GAAG,CAACK,IAAJ,GAAWD,UAFZ;cAGXE,aAAa,EAAEN,GAAG,CAACK,IAAJ,GAAWC,aAHf;cAIXC,WAAW,EAAEP,GAAG,CAACK,IAAJ,GAAWG,WAJb;cAKXC,kBAAkB,EAAET,GAAG,CAACK,IAAJ,GAAWI,kBALpB;cAMXC,UAAU,EAAEV,GAAG,CAACK,IAAJ,GAAWK,UANZ;cAOXC,QAAQ,EAAEX,GAAG,CAACK,IAAJ,GAAWM,QAPV;cAQXC,YAAY,EAAEZ,GAAG,CAACK,IAAJ,GAAWO;YARd,CAAf;UAWH,CAbD;UAcDlB,aAAa,CAACC,SAAD,CAAb;;QAnBI;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}