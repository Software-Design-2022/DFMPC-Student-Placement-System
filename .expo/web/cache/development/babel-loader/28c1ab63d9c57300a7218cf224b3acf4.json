{
  "ast": null,
  "code": "var XDate = require('xdate');\n\nexport function padNumber(n) {\n  if (n < 10) {\n    return '0' + n;\n  }\n\n  return n;\n}\nexport function xdateToData(d) {\n  var dateString = toMarkingFormat(d);\n  return {\n    year: d.getFullYear(),\n    month: d.getMonth() + 1,\n    day: d.getDate(),\n    timestamp: new XDate(dateString, true).getTime(),\n    dateString: dateString\n  };\n}\nexport function parseDate(d) {\n  if (!d) {\n    return;\n  } else if (d.timestamp) {\n    return new XDate(d.timestamp, true);\n  } else if (d instanceof XDate) {\n    return new XDate(toMarkingFormat(d), true);\n  } else if (d.getTime) {\n    var dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n    return new XDate(dateString, true);\n  } else if (d.year) {\n    var _dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n\n    return new XDate(_dateString, true);\n  } else if (d) {\n    return new XDate(d, true);\n  }\n}\nexport function toMarkingFormat(d) {\n  return d.toString('yyyy-MM-dd');\n}",
  "map": {
    "version": 3,
    "names": [
      "XDate",
      "require",
      "padNumber",
      "n",
      "xdateToData",
      "d",
      "dateString",
      "toMarkingFormat",
      "year",
      "getFullYear",
      "month",
      "getMonth",
      "day",
      "getDate",
      "timestamp",
      "getTime",
      "parseDate",
      "toString"
    ],
    "sources": [
      "C:/Users/Peace/Desktop/YOS3/SEMESTER 1/Software Design III/2022/Software Design Project/SPS-Project/DFMPC-Student-Placement-System/project/node_modules/react-native-calendars/src/interface.js"
    ],
    "sourcesContent": [
      "const XDate = require('xdate');\nexport function padNumber(n) {\n    if (n < 10) {\n        return '0' + n;\n    }\n    return n;\n}\nexport function xdateToData(d) {\n    const dateString = toMarkingFormat(d);\n    return {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate(),\n        timestamp: new XDate(dateString, true).getTime(),\n        dateString: dateString\n    };\n}\nexport function parseDate(d) {\n    if (!d) {\n        return;\n    }\n    else if (d.timestamp) {\n        // conventional data timestamp\n        return new XDate(d.timestamp, true);\n    }\n    else if (d instanceof XDate) {\n        // xdate\n        return new XDate(toMarkingFormat(d), true);\n    }\n    else if (d.getTime) {\n        // javascript date\n        const dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n        return new XDate(dateString, true);\n    }\n    else if (d.year) {\n        const dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n        return new XDate(dateString, true);\n    }\n    else if (d) {\n        // timestamp number or date formatted as string\n        return new XDate(d, true);\n    }\n}\nexport function toMarkingFormat(d) {\n    return d.toString('yyyy-MM-dd');\n}\n"
    ],
    "mappings": "AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,OAAO,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;EACzB,IAAIA,CAAC,GAAG,EAAR,EAAY;IACR,OAAO,MAAMA,CAAb;EACH;;EACD,OAAOA,CAAP;AACH;AACD,OAAO,SAASC,WAAT,CAAqBC,CAArB,EAAwB;EAC3B,IAAMC,UAAU,GAAGC,eAAe,CAACF,CAAD,CAAlC;EACA,OAAO;IACHG,IAAI,EAAEH,CAAC,CAACI,WAAF,EADH;IAEHC,KAAK,EAAEL,CAAC,CAACM,QAAF,KAAe,CAFnB;IAGHC,GAAG,EAAEP,CAAC,CAACQ,OAAF,EAHF;IAIHC,SAAS,EAAE,IAAId,KAAJ,CAAUM,UAAV,EAAsB,IAAtB,EAA4BS,OAA5B,EAJR;IAKHT,UAAU,EAAEA;EALT,CAAP;AAOH;AACD,OAAO,SAASU,SAAT,CAAmBX,CAAnB,EAAsB;EACzB,IAAI,CAACA,CAAL,EAAQ;IACJ;EACH,CAFD,MAGK,IAAIA,CAAC,CAACS,SAAN,EAAiB;IAElB,OAAO,IAAId,KAAJ,CAAUK,CAAC,CAACS,SAAZ,EAAuB,IAAvB,CAAP;EACH,CAHI,MAIA,IAAIT,CAAC,YAAYL,KAAjB,EAAwB;IAEzB,OAAO,IAAIA,KAAJ,CAAUO,eAAe,CAACF,CAAD,CAAzB,EAA8B,IAA9B,CAAP;EACH,CAHI,MAIA,IAAIA,CAAC,CAACU,OAAN,EAAe;IAEhB,IAAMT,UAAU,GAAGD,CAAC,CAACI,WAAF,KAAkB,GAAlB,GAAwBP,SAAS,CAACG,CAAC,CAACM,QAAF,KAAe,CAAhB,CAAjC,GAAsD,GAAtD,GAA4DT,SAAS,CAACG,CAAC,CAACQ,OAAF,EAAD,CAAxF;IACA,OAAO,IAAIb,KAAJ,CAAUM,UAAV,EAAsB,IAAtB,CAAP;EACH,CAJI,MAKA,IAAID,CAAC,CAACG,IAAN,EAAY;IACb,IAAMF,WAAU,GAAGD,CAAC,CAACG,IAAF,GAAS,GAAT,GAAeN,SAAS,CAACG,CAAC,CAACK,KAAH,CAAxB,GAAoC,GAApC,GAA0CR,SAAS,CAACG,CAAC,CAACO,GAAH,CAAtE;;IACA,OAAO,IAAIZ,KAAJ,CAAUM,WAAV,EAAsB,IAAtB,CAAP;EACH,CAHI,MAIA,IAAID,CAAJ,EAAO;IAER,OAAO,IAAIL,KAAJ,CAAUK,CAAV,EAAa,IAAb,CAAP;EACH;AACJ;AACD,OAAO,SAASE,eAAT,CAAyBF,CAAzB,EAA4B;EAC/B,OAAOA,CAAC,CAACY,QAAF,CAAW,YAAX,CAAP;AACH"
  },
  "metadata": {},
  "sourceType": "module"
}
