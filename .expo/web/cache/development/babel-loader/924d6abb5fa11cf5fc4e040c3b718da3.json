{"ast":null,"code":"var XDate = require('xdate');\n\nvar _require = require(\"./interface\"),\n    parseDate = _require.parseDate,\n    toMarkingFormat = _require.toMarkingFormat;\n\nvar _require2 = require(\"./services\"),\n    getDefaultLocale = _require2.getDefaultLocale;\n\nvar latinNumbersPattern = /[0-9]/g;\n\nfunction isValidXDate(date) {\n  return date && date instanceof XDate;\n}\n\nexport function sameMonth(a, b) {\n  if (!isValidXDate(a) || !isValidXDate(b)) {\n    return false;\n  } else {\n    return (a == null ? void 0 : a.getFullYear()) === (b == null ? void 0 : b.getFullYear()) && (a == null ? void 0 : a.getMonth()) === (b == null ? void 0 : b.getMonth());\n  }\n}\nexport function sameDate(a, b) {\n  if (!isValidXDate(a) || !isValidXDate(b)) {\n    return false;\n  } else {\n    return (a == null ? void 0 : a.getFullYear()) === (b == null ? void 0 : b.getFullYear()) && (a == null ? void 0 : a.getMonth()) === (b == null ? void 0 : b.getMonth()) && (a == null ? void 0 : a.getDate()) === (b == null ? void 0 : b.getDate());\n  }\n}\nexport function sameWeek(a, b, firstDayOfWeek) {\n  var weekDates = getWeekDates(a, firstDayOfWeek, 'yyyy-MM-dd');\n  return weekDates == null ? void 0 : weekDates.includes(b);\n}\nexport function isPastDate(date) {\n  var today = new XDate();\n  var d = new XDate(date);\n\n  if (today.getFullYear() > d.getFullYear()) {\n    return true;\n  }\n\n  if (today.getFullYear() === d.getFullYear()) {\n    if (today.getMonth() > d.getMonth()) {\n      return true;\n    }\n\n    if (today.getMonth() === d.getMonth()) {\n      if (today.getDate() > d.getDate()) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\nexport function isToday(date) {\n  return sameDate(date, XDate.today());\n}\nexport function isGTE(a, b) {\n  return b.diffDays(a) > -1;\n}\nexport function isLTE(a, b) {\n  return a.diffDays(b) > -1;\n}\nexport function formatNumbers(date) {\n  var numbers = getDefaultLocale().numbers;\n  return numbers ? date.toString().replace(latinNumbersPattern, function (char) {\n    return numbers[+char];\n  }) : date;\n}\nexport function fromTo(a, b) {\n  var days = [];\n  var from = +a;\n  var to = +b;\n\n  for (; from <= to; from = new XDate(from, true).addDays(1).getTime()) {\n    days.push(new XDate(from, true));\n  }\n\n  return days;\n}\nexport function month(date) {\n  var year = date.getFullYear(),\n      month = date.getMonth();\n  var days = new XDate(year, month + 1, 0).getDate();\n  var firstDay = new XDate(year, month, 1, 0, 0, 0, true);\n  var lastDay = new XDate(year, month, days, 0, 0, 0, true);\n  return fromTo(firstDay, lastDay);\n}\nexport function weekDayNames() {\n  var firstDayOfWeek = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var weekDaysNames = getDefaultLocale().dayNamesShort;\n  var dayShift = firstDayOfWeek % 7;\n\n  if (dayShift) {\n    weekDaysNames = weekDaysNames.slice(dayShift).concat(weekDaysNames.slice(0, dayShift));\n  }\n\n  return weekDaysNames;\n}\nexport function page(date) {\n  var firstDayOfWeek = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var showSixWeeks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var days = month(date);\n  var before = [];\n  var after = [];\n  var fdow = (7 + firstDayOfWeek) % 7 || 7;\n  var ldow = (fdow + 6) % 7;\n  firstDayOfWeek = firstDayOfWeek || 0;\n  var from = days[0].clone();\n  var daysBefore = from.getDay();\n\n  if (from.getDay() !== fdow) {\n    from.addDays(-(from.getDay() + 7 - fdow) % 7);\n  }\n\n  var to = days[days.length - 1].clone();\n  var day = to.getDay();\n\n  if (day !== ldow) {\n    to.addDays((ldow + 7 - day) % 7);\n  }\n\n  var daysForSixWeeks = (daysBefore + days.length) / 6 >= 6;\n\n  if (showSixWeeks && !daysForSixWeeks) {\n    to.addDays(7);\n  }\n\n  if (isLTE(from, days[0])) {\n    before = fromTo(from, days[0]);\n  }\n\n  if (isGTE(to, days[days.length - 1])) {\n    after = fromTo(days[days.length - 1], to);\n  }\n\n  return before.concat(days.slice(1, days.length - 1), after);\n}\nexport function isDateNotInTheRange(minDate, maxDate, date) {\n  return minDate && !isGTE(date, minDate) || maxDate && !isLTE(date, maxDate);\n}\nexport function getWeekDates(date) {\n  var firstDay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var format = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (date && parseDate(date).valid()) {\n    var current = parseDate(date);\n    var daysArray = [current];\n    var dayOfTheWeek = current.getDay() - firstDay;\n\n    if (dayOfTheWeek < 0) {\n      dayOfTheWeek = 7 + dayOfTheWeek;\n    }\n\n    var newDate = current;\n    var index = dayOfTheWeek - 1;\n\n    while (index >= 0) {\n      newDate = parseDate(newDate).addDays(-1);\n      daysArray.unshift(newDate);\n      index -= 1;\n    }\n\n    newDate = current;\n    index = dayOfTheWeek + 1;\n\n    while (index < 7) {\n      newDate = parseDate(newDate).addDays(1);\n      daysArray.push(newDate);\n      index += 1;\n    }\n\n    if (format) {\n      return daysArray.map(function (d) {\n        return d.toString(format);\n      });\n    }\n\n    return daysArray;\n  }\n}\nexport function generateDay(originDate) {\n  var daysOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var baseDate = new XDate(originDate);\n  return toMarkingFormat(baseDate.clone().addDays(daysOffset));\n}","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/dateutils.js"],"names":["XDate","require","parseDate","toMarkingFormat","getDefaultLocale","latinNumbersPattern","isValidXDate","date","sameMonth","a","b","getFullYear","getMonth","sameDate","getDate","sameWeek","firstDayOfWeek","weekDates","getWeekDates","includes","isPastDate","today","d","isToday","isGTE","diffDays","isLTE","formatNumbers","numbers","toString","replace","char","fromTo","days","from","to","addDays","getTime","push","month","year","firstDay","lastDay","weekDayNames","weekDaysNames","dayNamesShort","dayShift","slice","concat","page","showSixWeeks","before","after","fdow","ldow","clone","daysBefore","getDay","length","day","daysForSixWeeks","isDateNotInTheRange","minDate","maxDate","format","valid","current","daysArray","dayOfTheWeek","newDate","index","unshift","map","generateDay","originDate","daysOffset","baseDate"],"mappings":"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","sourcesContent":["const XDate = require('xdate');\nconst { parseDate, toMarkingFormat } = require('./interface');\nconst { getDefaultLocale } = require('./services');\nconst latinNumbersPattern = /[0-9]/g;\nfunction isValidXDate(date) {\n    return date && (date instanceof XDate);\n}\nexport function sameMonth(a, b) {\n    if (!isValidXDate(a) || !isValidXDate(b)) {\n        return false;\n    }\n    else {\n        return a?.getFullYear() === b?.getFullYear() && a?.getMonth() === b?.getMonth();\n    }\n}\nexport function sameDate(a, b) {\n    if (!isValidXDate(a) || !isValidXDate(b)) {\n        return false;\n    }\n    else {\n        return a?.getFullYear() === b?.getFullYear() && a?.getMonth() === b?.getMonth() && a?.getDate() === b?.getDate();\n    }\n}\nexport function sameWeek(a, b, firstDayOfWeek) {\n    const weekDates = getWeekDates(a, firstDayOfWeek, 'yyyy-MM-dd');\n    return weekDates?.includes(b);\n}\nexport function isPastDate(date) {\n    const today = new XDate();\n    const d = new XDate(date);\n    if (today.getFullYear() > d.getFullYear()) {\n        return true;\n    }\n    if (today.getFullYear() === d.getFullYear()) {\n        if (today.getMonth() > d.getMonth()) {\n            return true;\n        }\n        if (today.getMonth() === d.getMonth()) {\n            if (today.getDate() > d.getDate()) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexport function isToday(date) {\n    return sameDate(date, XDate.today());\n}\nexport function isGTE(a, b) {\n    return b.diffDays(a) > -1;\n}\nexport function isLTE(a, b) {\n    return a.diffDays(b) > -1;\n}\nexport function formatNumbers(date) {\n    const numbers = getDefaultLocale().numbers;\n    return numbers ? date.toString().replace(latinNumbersPattern, (char) => numbers[+char]) : date;\n}\nexport function fromTo(a, b) {\n    const days = [];\n    let from = +a;\n    const to = +b;\n    for (; from <= to; from = new XDate(from, true).addDays(1).getTime()) {\n        days.push(new XDate(from, true));\n    }\n    return days;\n}\nexport function month(date) {\n    const year = date.getFullYear(), month = date.getMonth();\n    const days = new XDate(year, month + 1, 0).getDate();\n    const firstDay = new XDate(year, month, 1, 0, 0, 0, true);\n    const lastDay = new XDate(year, month, days, 0, 0, 0, true);\n    return fromTo(firstDay, lastDay);\n}\nexport function weekDayNames(firstDayOfWeek = 0) {\n    let weekDaysNames = getDefaultLocale().dayNamesShort;\n    const dayShift = firstDayOfWeek % 7;\n    if (dayShift) {\n        weekDaysNames = weekDaysNames.slice(dayShift).concat(weekDaysNames.slice(0, dayShift));\n    }\n    return weekDaysNames;\n}\nexport function page(date, firstDayOfWeek = 0, showSixWeeks = false) {\n    const days = month(date);\n    let before = [];\n    let after = [];\n    const fdow = (7 + firstDayOfWeek) % 7 || 7;\n    const ldow = (fdow + 6) % 7;\n    firstDayOfWeek = firstDayOfWeek || 0;\n    const from = days[0].clone();\n    const daysBefore = from.getDay();\n    if (from.getDay() !== fdow) {\n        from.addDays(-(from.getDay() + 7 - fdow) % 7);\n    }\n    const to = days[days.length - 1].clone();\n    const day = to.getDay();\n    if (day !== ldow) {\n        to.addDays((ldow + 7 - day) % 7);\n    }\n    const daysForSixWeeks = (daysBefore + days.length) / 6 >= 6;\n    if (showSixWeeks && !daysForSixWeeks) {\n        to.addDays(7);\n    }\n    if (isLTE(from, days[0])) {\n        before = fromTo(from, days[0]);\n    }\n    if (isGTE(to, days[days.length - 1])) {\n        after = fromTo(days[days.length - 1], to);\n    }\n    return before.concat(days.slice(1, days.length - 1), after);\n}\nexport function isDateNotInTheRange(minDate, maxDate, date) {\n    return (minDate && !isGTE(date, minDate)) || (maxDate && !isLTE(date, maxDate));\n}\nexport function getWeekDates(date, firstDay = 0, format) {\n    if (date && parseDate(date).valid()) {\n        const current = parseDate(date);\n        const daysArray = [current];\n        let dayOfTheWeek = current.getDay() - firstDay;\n        if (dayOfTheWeek < 0) {\n            // to handle firstDay > 0\n            dayOfTheWeek = 7 + dayOfTheWeek;\n        }\n        let newDate = current;\n        let index = dayOfTheWeek - 1;\n        while (index >= 0) {\n            newDate = parseDate(newDate).addDays(-1);\n            daysArray.unshift(newDate);\n            index -= 1;\n        }\n        newDate = current;\n        index = dayOfTheWeek + 1;\n        while (index < 7) {\n            newDate = parseDate(newDate).addDays(1);\n            daysArray.push(newDate);\n            index += 1;\n        }\n        if (format) {\n            return daysArray.map(d => d.toString(format));\n        }\n        return daysArray;\n    }\n}\nexport function generateDay(originDate, daysOffset = 0) {\n    const baseDate = new XDate(originDate);\n    return toMarkingFormat(baseDate.clone().addDays(daysOffset));\n}\n"]},"metadata":{},"sourceType":"module"}