{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport filter from 'lodash/filter';\nimport React, { useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { extractComponentProps } from \"../../../componentUpdater\";\nimport styleConstructor from \"./style\";\nimport Dot from \"../dot\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport var Markings;\n\n(function (Markings) {\n  Markings[\"DOT\"] = \"dot\";\n  Markings[\"MULTI_DOT\"] = \"multi-dot\";\n  Markings[\"PERIOD\"] = \"period\";\n  Markings[\"MULTI_PERIOD\"] = \"multi-period\";\n  Markings[\"CUSTOM\"] = \"custom\";\n})(Markings || (Markings = {}));\n\nvar Marking = function Marking(props) {\n  var theme = props.theme,\n      type = props.type,\n      dots = props.dots,\n      periods = props.periods,\n      selected = props.selected,\n      dotColor = props.dotColor;\n  var style = useRef(styleConstructor(theme));\n\n  var getItems = function getItems(items) {\n    if (items && Array.isArray(items) && items.length > 0) {\n      var validItems = filter(items, function (o) {\n        return o.color;\n      });\n      return validItems.map(function (item, index) {\n        return type === Markings.MULTI_DOT ? renderDot(index, item) : renderPeriod(index, item);\n      });\n    }\n  };\n\n  var renderMarkingByType = function renderMarkingByType() {\n    switch (type) {\n      case Markings.MULTI_DOT:\n        return renderMultiMarkings(style.current.dots, dots);\n\n      case Markings.MULTI_PERIOD:\n        return renderMultiMarkings(style.current.periods, periods);\n\n      default:\n        return renderDot();\n    }\n  };\n\n  var renderMultiMarkings = function renderMultiMarkings(containerStyle, items) {\n    return _jsx(View, {\n      style: containerStyle,\n      children: getItems(items)\n    });\n  };\n\n  var renderPeriod = function renderPeriod(index, item) {\n    var color = item.color,\n        startingDay = item.startingDay,\n        endingDay = item.endingDay;\n    var styles = [style.current.period, {\n      backgroundColor: color\n    }];\n\n    if (startingDay) {\n      styles.push(style.current.startingDay);\n    }\n\n    if (endingDay) {\n      styles.push(style.current.endingDay);\n    }\n\n    return _jsx(View, {\n      style: styles\n    }, index);\n  };\n\n  var renderDot = function renderDot(index, item) {\n    var dotProps = extractComponentProps(Dot, props);\n    var key = index;\n    var color = dotColor;\n\n    if (item) {\n      if (item.key) {\n        key = item.key;\n      }\n\n      color = selected && item.selectedDotColor ? item.selectedDotColor : item.color;\n    }\n\n    return _createElement(Dot, _objectSpread(_objectSpread({}, dotProps), {}, {\n      key: key,\n      color: color\n    }));\n  };\n\n  return renderMarkingByType();\n};\n\nexport default Marking;\nMarking.displayName = 'Marking';\nMarking.markings = Markings;","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/calendar/day/marking/index.js"],"names":["filter","React","useRef","extractComponentProps","styleConstructor","Dot","Markings","Marking","props","theme","type","dots","periods","selected","dotColor","style","getItems","items","Array","isArray","length","validItems","o","color","map","item","index","MULTI_DOT","renderDot","renderPeriod","renderMarkingByType","renderMultiMarkings","current","MULTI_PERIOD","containerStyle","startingDay","endingDay","styles","period","backgroundColor","push","dotProps","key","selectedDotColor","displayName","markings"],"mappings":"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","sourcesContent":["import filter from 'lodash/filter';\nimport React, { useRef } from 'react';\nimport { View } from 'react-native';\nimport { extractComponentProps } from '../../../componentUpdater';\nimport styleConstructor from './style';\nimport Dot from '../dot';\nexport var Markings;\n(function (Markings) {\n    Markings[\"DOT\"] = \"dot\";\n    Markings[\"MULTI_DOT\"] = \"multi-dot\";\n    Markings[\"PERIOD\"] = \"period\";\n    Markings[\"MULTI_PERIOD\"] = \"multi-period\";\n    Markings[\"CUSTOM\"] = \"custom\";\n})(Markings || (Markings = {}));\nconst Marking = (props) => {\n    const { theme, type, dots, periods, selected, dotColor } = props;\n    const style = useRef(styleConstructor(theme));\n    const getItems = (items) => {\n        if (items && Array.isArray(items) && items.length > 0) {\n            // Filter out items so that we process only those which have color property\n            const validItems = filter(items, function (o) {\n                return o.color;\n            });\n            return validItems.map((item, index) => {\n                return type === Markings.MULTI_DOT ? renderDot(index, item) : renderPeriod(index, item);\n            });\n        }\n    };\n    const renderMarkingByType = () => {\n        switch (type) {\n            case Markings.MULTI_DOT:\n                return renderMultiMarkings(style.current.dots, dots);\n            case Markings.MULTI_PERIOD:\n                return renderMultiMarkings(style.current.periods, periods);\n            default:\n                return renderDot();\n        }\n    };\n    const renderMultiMarkings = (containerStyle, items) => {\n        return <View style={containerStyle}>{getItems(items)}</View>;\n    };\n    const renderPeriod = (index, item) => {\n        const { color, startingDay, endingDay } = item;\n        const styles = [\n            style.current.period,\n            {\n                backgroundColor: color\n            }\n        ];\n        if (startingDay) {\n            styles.push(style.current.startingDay);\n        }\n        if (endingDay) {\n            styles.push(style.current.endingDay);\n        }\n        return <View key={index} style={styles}/>;\n    };\n    const renderDot = (index, item) => {\n        const dotProps = extractComponentProps(Dot, props);\n        let key = index;\n        let color = dotColor;\n        if (item) {\n            if (item.key) {\n                key = item.key;\n            }\n            color = selected && item.selectedDotColor ? item.selectedDotColor : item.color;\n        }\n        return <Dot {...dotProps} key={key} color={color}/>;\n    };\n    return renderMarkingByType();\n};\nexport default Marking;\nMarking.displayName = 'Marking';\nMarking.markings = Markings;\n"]},"metadata":{},"sourceType":"module"}