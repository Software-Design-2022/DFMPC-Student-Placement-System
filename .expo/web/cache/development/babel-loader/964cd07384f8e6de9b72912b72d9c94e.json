{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport XDate from 'xdate';\nimport React, { useCallback, useEffect, useRef, useState, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport constants from \"../commons/constants\";\nimport { toMarkingFormat } from \"../interface\";\nimport { extractHeaderProps } from \"../componentUpdater\";\nimport Calendar from \"../calendar\";\nimport CalendarHeader from \"../calendar/header\";\nimport InfiniteList from \"../infinite-list\";\nimport styleConstructor from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NUMBER_OF_PAGES = 50;\nvar CALENDAR_HEIGHT = 360;\nvar CalendarList = function CalendarList(props) {\n  var initialDate = props.initialDate,\n    horizontal = props.horizontal,\n    _props$scrollRange = props.scrollRange,\n    scrollRange = _props$scrollRange === void 0 ? NUMBER_OF_PAGES : _props$scrollRange,\n    staticHeader = props.staticHeader,\n    scrollViewProps = props.scrollViewProps,\n    calendarProps = props.calendarProps,\n    testID = props.testID;\n  var style = useRef(styleConstructor(calendarProps == null ? void 0 : calendarProps.theme));\n  var list = useRef();\n  var _useState = useState(getDatesArray(initialDate, scrollRange)),\n    _useState2 = _slicedToArray(_useState, 2),\n    items = _useState2[0],\n    setItems = _useState2[1];\n  var _useState3 = useState(scrollRange),\n    _useState4 = _slicedToArray(_useState3, 2),\n    positionIndex = _useState4[0],\n    setPositionIndex = _useState4[1];\n  var _useState5 = useState(initialDate || items[scrollRange]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentMonth = _useState6[0],\n    setCurrentMonth = _useState6[1];\n  var shouldRenderStaticHeader = staticHeader && horizontal;\n  var headerProps = extractHeaderProps(props);\n  var staticHeaderStyle = useMemo(function () {\n    return [style.current.staticHeader, calendarProps == null ? void 0 : calendarProps.headerStyle];\n  }, [calendarProps == null ? void 0 : calendarProps.headerStyle]);\n  useEffect(function () {\n    scrollToMonth(currentMonth);\n  }, [currentMonth]);\n  var getMonthIndex = useCallback(function (month) {\n    if (!month) {\n      return -1;\n    }\n    return items.findIndex(function (item) {\n      return item.includes(month.toString('yyyy-MM'));\n    });\n  }, [items]);\n  var scrollToMonth = useCallback(function (month) {\n    if (month) {\n      var index = getMonthIndex(new XDate(month));\n      if (index !== -1) {\n        var _list$current;\n        var shouldAnimate = constants.isAndroid && !horizontal ? false : true;\n        (_list$current = list.current) == null ? void 0 : _list$current.scrollToOffset == null ? void 0 : _list$current.scrollToOffset(index * constants.screenWidth, 0, shouldAnimate);\n      }\n    }\n  }, [getMonthIndex]);\n  var updateMonth = useCallback(function (count, month) {\n    if (month) {\n      var next = new XDate(month).addMonths(count, true);\n      var nextNext = new XDate(month).addMonths(count * 2, true);\n      var nextNextIndex = getMonthIndex(nextNext);\n      if (nextNextIndex !== -1) {\n        setCurrentMonth(toMarkingFormat(next));\n      }\n    }\n  }, [getMonthIndex]);\n  var scrollToNextMonth = useCallback(function (method, month) {\n    if (calendarProps != null && calendarProps.onPressArrowLeft) {\n      calendarProps == null ? void 0 : calendarProps.onPressArrowLeft == null ? void 0 : calendarProps.onPressArrowLeft(method, month);\n    } else {\n      updateMonth(1, month);\n    }\n  }, [updateMonth]);\n  var scrollToPreviousMonth = useCallback(function (method, month) {\n    if (calendarProps != null && calendarProps.onPressArrowRight) {\n      calendarProps == null ? void 0 : calendarProps.onPressArrowRight == null ? void 0 : calendarProps.onPressArrowRight(method, month);\n    } else {\n      updateMonth(-1, month);\n    }\n  }, [updateMonth]);\n  var onPageChange = useCallback(function (pageIndex, _, info) {\n    if (shouldRenderStaticHeader && info.scrolledByUser) {\n      setCurrentMonth(items[pageIndex]);\n    }\n  }, [items]);\n  var renderStaticHeader = function renderStaticHeader() {\n    if (shouldRenderStaticHeader) {\n      return _jsx(CalendarHeader, _objectSpread(_objectSpread({}, headerProps), {}, {\n        month: new XDate(currentMonth),\n        onPressArrowRight: scrollToNextMonth,\n        onPressArrowLeft: scrollToPreviousMonth,\n        style: staticHeaderStyle,\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants',\n        testID: 'static-header'\n      }));\n    }\n  };\n  var reloadPages = useCallback(function (pageIndex) {\n    horizontal ? replaceItems(pageIndex) : addItems(pageIndex);\n  }, [items]);\n  var replaceItems = function replaceItems(index) {\n    var newItems = getDatesArray(items[index], scrollRange);\n    setItems(newItems);\n  };\n  var addItems = function addItems(index) {\n    var array = _toConsumableArray(items);\n    var startingDate = items[index];\n    var shouldAppend = index > scrollRange;\n    if (startingDate) {\n      if (shouldAppend) {\n        for (var i = 2; i <= scrollRange; i++) {\n          var newDate = getDate(startingDate, i);\n          array.push(newDate);\n        }\n      } else {\n        for (var _i = -1; _i > -scrollRange; _i--) {\n          var _newDate = getDate(startingDate, _i);\n          array.unshift(_newDate);\n        }\n      }\n      setPositionIndex(shouldAppend ? index : scrollRange - 1);\n      setItems(array);\n    }\n  };\n  var listContainerStyle = useMemo(function () {\n    return [style.current.flatListContainer, {\n      flex: horizontal ? undefined : 1\n    }];\n  }, [style, horizontal]);\n  var scrollProps = useMemo(function () {\n    return _objectSpread(_objectSpread({}, scrollViewProps), {}, {\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false\n    });\n  }, [scrollViewProps]);\n  var renderItem = useCallback(function (_type, item) {\n    return _jsx(Calendar, _objectSpread(_objectSpread(_objectSpread({}, calendarProps), headerProps), {}, {\n      initialDate: item,\n      disableMonthChange: true,\n      hideArrows: !horizontal,\n      onPressArrowRight: scrollToNextMonth,\n      onPressArrowLeft: scrollToPreviousMonth,\n      hideExtraDays: (calendarProps == null ? void 0 : calendarProps.hideExtraDays) || true,\n      style: [style.current.calendar, calendarProps == null ? void 0 : calendarProps.style],\n      headerStyle: horizontal ? calendarProps == null ? void 0 : calendarProps.headerStyle : undefined,\n      testID: testID + \"_\" + item\n    }));\n  }, [calendarProps, scrollToNextMonth, scrollToPreviousMonth]);\n  return _jsxs(View, {\n    style: listContainerStyle,\n    children: [_jsx(InfiniteList, {\n      ref: list,\n      data: items,\n      renderItem: renderItem,\n      reloadPages: reloadPages,\n      onReachNearEdgeThreshold: Math.round(NUMBER_OF_PAGES * 0.4),\n      extendedState: calendarProps == null ? void 0 : calendarProps.markedDates,\n      isHorizontal: horizontal,\n      style: style.current.container,\n      initialPageIndex: scrollRange,\n      positionIndex: positionIndex,\n      pageHeight: CALENDAR_HEIGHT,\n      pageWidth: constants.screenWidth,\n      onPageChange: onPageChange,\n      scrollViewProps: scrollProps\n    }, \"calendar-list\"), renderStaticHeader()]\n  });\n};\nexport default CalendarList;\nfunction getDate(date, index) {\n  var d = new XDate(date);\n  d.addMonths(index, true);\n  d.setDate(1);\n  return toMarkingFormat(d);\n}\nfunction getDatesArray(date) {\n  var numberOfPages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NUMBER_OF_PAGES;\n  var d = date || new XDate().toString();\n  var array = [];\n  for (var index = -numberOfPages; index <= numberOfPages; index++) {\n    var newDate = getDate(d, index);\n    array.push(newDate);\n  }\n  return array;\n}","map":{"version":3,"names":["XDate","React","useCallback","useEffect","useRef","useState","useMemo","constants","toMarkingFormat","extractHeaderProps","Calendar","CalendarHeader","InfiniteList","styleConstructor","NUMBER_OF_PAGES","CALENDAR_HEIGHT","CalendarList","props","initialDate","horizontal","scrollRange","staticHeader","scrollViewProps","calendarProps","testID","style","theme","list","getDatesArray","items","setItems","positionIndex","setPositionIndex","currentMonth","setCurrentMonth","shouldRenderStaticHeader","headerProps","staticHeaderStyle","current","headerStyle","scrollToMonth","getMonthIndex","month","findIndex","item","includes","toString","index","shouldAnimate","isAndroid","scrollToOffset","screenWidth","updateMonth","count","next","addMonths","nextNext","nextNextIndex","scrollToNextMonth","method","onPressArrowLeft","scrollToPreviousMonth","onPressArrowRight","onPageChange","pageIndex","_","info","scrolledByUser","renderStaticHeader","reloadPages","replaceItems","addItems","newItems","array","startingDate","shouldAppend","i","newDate","getDate","push","unshift","listContainerStyle","flatListContainer","flex","undefined","scrollProps","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","renderItem","_type","hideExtraDays","calendar","Math","round","markedDates","container","date","d","setDate","numberOfPages"],"sources":["D:/repos/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/calendar-list/new.js"],"sourcesContent":["import XDate from 'xdate';\nimport React, { useCallback, useEffect, useRef, useState, useMemo } from 'react';\nimport { View } from 'react-native';\nimport constants from '../commons/constants';\nimport { toMarkingFormat } from '../interface';\nimport { extractHeaderProps } from '../componentUpdater';\nimport Calendar from '../calendar';\nimport CalendarHeader from '../calendar/header';\nimport InfiniteList from '../infinite-list';\nimport styleConstructor from './style';\nconst NUMBER_OF_PAGES = 50;\nconst CALENDAR_HEIGHT = 360;\nconst CalendarList = (props) => {\n    const { initialDate, horizontal, scrollRange = NUMBER_OF_PAGES, staticHeader, scrollViewProps, calendarProps, testID } = props;\n    const style = useRef(styleConstructor(calendarProps?.theme));\n    const list = useRef();\n    const [items, setItems] = useState(getDatesArray(initialDate, scrollRange));\n    const [positionIndex, setPositionIndex] = useState(scrollRange);\n    /** Static Header */\n    const [currentMonth, setCurrentMonth] = useState(initialDate || items[scrollRange]);\n    const shouldRenderStaticHeader = staticHeader && horizontal;\n    const headerProps = extractHeaderProps(props);\n    const staticHeaderStyle = useMemo(() => {\n        return [style.current.staticHeader, calendarProps?.headerStyle];\n    }, [calendarProps?.headerStyle]);\n    useEffect(() => {\n        scrollToMonth(currentMonth);\n    }, [currentMonth]);\n    const getMonthIndex = useCallback((month) => {\n        if (!month) {\n            return -1;\n        }\n        return items.findIndex(item => item.includes(month.toString('yyyy-MM')));\n    }, [items]);\n    const scrollToMonth = useCallback((month) => {\n        if (month) {\n            const index = getMonthIndex(new XDate(month));\n            if (index !== -1) {\n                const shouldAnimate = constants.isAndroid && !horizontal ? false : true;\n                // @ts-expect-error\n                list.current?.scrollToOffset?.(index * constants.screenWidth, 0, shouldAnimate);\n            }\n        }\n    }, [getMonthIndex]);\n    const updateMonth = useCallback((count, month) => {\n        if (month) {\n            const next = new XDate(month).addMonths(count, true);\n            const nextNext = new XDate(month).addMonths(count * 2, true);\n            const nextNextIndex = getMonthIndex(nextNext);\n            if (nextNextIndex !== -1) {\n                setCurrentMonth(toMarkingFormat(next));\n            }\n        }\n    }, [getMonthIndex]);\n    const scrollToNextMonth = useCallback((method, month) => {\n        if (calendarProps?.onPressArrowLeft) {\n            calendarProps?.onPressArrowLeft?.(method, month);\n        }\n        else {\n            updateMonth(1, month);\n        }\n    }, [updateMonth]);\n    const scrollToPreviousMonth = useCallback((method, month) => {\n        if (calendarProps?.onPressArrowRight) {\n            calendarProps?.onPressArrowRight?.(method, month);\n        }\n        else {\n            updateMonth(-1, month);\n        }\n    }, [updateMonth]);\n    const onPageChange = useCallback((pageIndex, _, info) => {\n        if (shouldRenderStaticHeader && info.scrolledByUser) {\n            setCurrentMonth(items[pageIndex]);\n        }\n    }, [items]);\n    const renderStaticHeader = () => {\n        if (shouldRenderStaticHeader) {\n            return (<CalendarHeader {...headerProps} month={new XDate(currentMonth)} onPressArrowRight={scrollToNextMonth} onPressArrowLeft={scrollToPreviousMonth} style={staticHeaderStyle} accessibilityElementsHidden // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n             testID={'static-header'}/>);\n        }\n    };\n    /** Data */\n    const reloadPages = useCallback(pageIndex => {\n        horizontal ? replaceItems(pageIndex) : addItems(pageIndex);\n    }, [items]);\n    const replaceItems = (index) => {\n        const newItems = getDatesArray(items[index], scrollRange);\n        setItems(newItems);\n    };\n    const addItems = (index) => {\n        const array = [...items];\n        const startingDate = items[index];\n        const shouldAppend = index > scrollRange;\n        if (startingDate) {\n            if (shouldAppend) {\n                for (let i = 2; i <= scrollRange; i++) {\n                    const newDate = getDate(startingDate, i);\n                    array.push(newDate);\n                }\n            }\n            else {\n                for (let i = -1; i > -scrollRange; i--) {\n                    const newDate = getDate(startingDate, i);\n                    array.unshift(newDate);\n                }\n            }\n            setPositionIndex(shouldAppend ? index : scrollRange - 1);\n            setItems(array);\n        }\n    };\n    /** List */\n    const listContainerStyle = useMemo(() => {\n        return [style.current.flatListContainer, { flex: horizontal ? undefined : 1 }];\n    }, [style, horizontal]);\n    const scrollProps = useMemo(() => {\n        return {\n            ...scrollViewProps,\n            showsHorizontalScrollIndicator: false,\n            showsVerticalScrollIndicator: false\n        };\n    }, [scrollViewProps]);\n    const renderItem = useCallback((_type, item) => {\n        return (<Calendar {...calendarProps} {...headerProps} initialDate={item} disableMonthChange hideArrows={!horizontal} onPressArrowRight={scrollToNextMonth} onPressArrowLeft={scrollToPreviousMonth} hideExtraDays={calendarProps?.hideExtraDays || true} style={[style.current.calendar, calendarProps?.style]} headerStyle={horizontal ? calendarProps?.headerStyle : undefined} testID={`${testID}_${item}`}/>);\n    }, [calendarProps, scrollToNextMonth, scrollToPreviousMonth]);\n    return (<View style={listContainerStyle}>\n      <InfiniteList key=\"calendar-list\" ref={list} data={items} renderItem={renderItem} reloadPages={reloadPages} onReachNearEdgeThreshold={Math.round(NUMBER_OF_PAGES * 0.4)} extendedState={calendarProps?.markedDates} isHorizontal={horizontal} style={style.current.container} initialPageIndex={scrollRange} positionIndex={positionIndex} pageHeight={CALENDAR_HEIGHT} pageWidth={constants.screenWidth} onPageChange={onPageChange} scrollViewProps={scrollProps}/>\n      {renderStaticHeader()}\n    </View>);\n};\nexport default CalendarList;\nfunction getDate(date, index) {\n    const d = new XDate(date);\n    d.addMonths(index, true);\n    // if (index !== 0) {\n    d.setDate(1);\n    // }\n    return toMarkingFormat(d);\n}\nfunction getDatesArray(date, numberOfPages = NUMBER_OF_PAGES) {\n    const d = date || new XDate().toString();\n    const array = [];\n    for (let index = -numberOfPages; index <= numberOfPages; index++) {\n        const newDate = getDate(d, index);\n        array.push(newDate);\n    }\n    return array;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}