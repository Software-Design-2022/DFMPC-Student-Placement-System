{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Calendar, Agenda } from \"react-native-calendars\";\nimport React, { useState, PureComponent } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card, Avatar } from \"react-native-paper\";\nimport { firebase, db } from \"../firebase\";\nimport { getCurrentDate } from \"../HelperFunctions\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { createTopBar } from \"../HelperFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar data = [];\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar SPACING = 20;\nvar ICON_SIZE = 75;\n\nvar compare = function compare(obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n};\n\nfunction sendToFirestore(state) {\n  return _regeneratorRuntime.async(function sendToFirestore$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"events\").add({\n            name: state.eventtext,\n            start_date: state.startdatetext,\n            end_date: state.enddatetext,\n            id: Math.max(50, Math.floor(Math.random() * 150)),\n            programme: state.notetext\n          }).then(function () {\n            Alert.alert(\"Event Added\");\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction eventsData(onReceiveList) {\n  var events, snapshot;\n  return _regeneratorRuntime.async(function eventsData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          events = [];\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"events\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              var start = doc.data().start_date,\n                  end = doc.data().end_date,\n                  name = doc.data().name,\n                  id = doc.data().id,\n                  programme = doc.data().programme,\n                  key = events.length + 1;\n              var date = new Date();\n              var date2 = new Date(start);\n              var diff = Math.ceil((date2 - date) / (1000 * 3600 * 24));\n\n              if (Math.abs(diff) < 90) {\n                events.push({\n                  name: name,\n                  key: key,\n                  start: start,\n                  end: end,\n                  id: id,\n                  programme: programme\n                });\n              }\n            });\n          }));\n\n        case 3:\n          snapshot = _context2.sent;\n          onReceiveList(events);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nLogBox.ignoreLogs([\"Setting a timer\"]);\n\nvar EventsCalendar = function (_PureComponent) {\n  _inherits(EventsCalendar, _PureComponent);\n\n  var _super = _createSuper(EventsCalendar);\n\n  function EventsCalendar(props) {\n    var _this;\n\n    _classCallCheck(this, EventsCalendar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      items: {},\n      events: [],\n      modalVisible: false,\n      startdatetext: \"\",\n      enddatetext: \"\",\n      eventtext: \"\",\n      notetext: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(EventsCalendar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          top: SPACING * 2,\n          backgroundColor: \"white\"\n        },\n        children: [_jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: this.state.modalVisible,\n          onRequestClose: function onRequestClose() {\n            Alert.alert(\"Modal has been closed.\");\n\n            _this2.setState({\n              modalVisible: false\n            });\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: {\n                top: 50,\n                height: 400,\n                width: width / 1.2,\n                backgroundColor: \"white\",\n                borderRadius: 10,\n                borderWidth: 4\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontSize: 25,\n                  top: 10,\n                  textAlign: \"center\"\n                },\n                children: \"Create Event\"\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"Event name\"\n                }), _jsx(TextInput, {\n                  style: styles.message,\n                  placeholder: \"Enter name\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      eventtext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"Start date\"\n                }), _jsx(TextInput, {\n                  style: styles.message,\n                  placeholder: \"YYYY-MM-DD\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      startdatetext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"End date\"\n                }), _jsx(TextInput, {\n                  style: styles.message,\n                  placeholder: \"YYYY-MM-DD\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      enddatetext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  padding: 10,\n                  marginBottom: 10\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\",\n                    fontSize: 17\n                  },\n                  children: \"Notes\"\n                }), _jsx(TextInput, {\n                  style: styles.message,\n                  placeholder: \"Type notes here\",\n                  onChangeText: function onChangeText(newText) {\n                    return _this2.setState({\n                      notetext: newText\n                    });\n                  },\n                  defaultValue: this.state.text\n                })]\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: \"row\",\n                  left: 20,\n                  top: 42\n                },\n                children: [_jsx(Pressable, {\n                  style: [styles.button, styles.buttonClose, {\n                    width: width / 3,\n                    left: 10,\n                    bottom: 30\n                  }],\n                  onPress: function onPress() {\n                    return _this2.setState({\n                      modalVisible: false\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.textStyle],\n                    children: \"Done\"\n                  })\n                }), _jsx(Pressable, {\n                  style: [styles.button, styles.buttonClose, {\n                    width: width / 3,\n                    left: 20,\n                    bottom: 30,\n                    backgroundColor: \"rgba(28,56,107,1)\"\n                  }],\n                  onPress: function onPress() {\n                    return sendToFirestore(_this2.state);\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.textStyle],\n                    children: \"Add\"\n                  })\n                })]\n              })]\n            })\n          })\n        }), _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.setState({\n                modalVisible: true\n              });\n            },\n            style: {\n              backgroundColor: \"rgba(28,56,107,0.0)\",\n              position: \"absolute\",\n              borderRadius: 50,\n              width: 50,\n              height: 50,\n              zIndex: 1,\n              right: 20,\n              top: height - 175,\n              alignItems: \"center\"\n            },\n            children: _jsx(AntDesign, {\n              name: \"pluscircle\",\n              color: \"black\",\n              size: 50\n            })\n          })\n        }), _jsx(Agenda, {\n          theme: {\n            calendarBackground: \"white\",\n            agendaKnobColor: \"rgba(28,56,107,0.9)\",\n            backgroundColor: \"rgba(28,56,107,0.9)\",\n            agendaDayTextColor: \"white\",\n            agendaDayNumColor: \"white\",\n            agendaTodayColor: \"rgba(255,255,255,0.9)\",\n            monthTextColor: \"rgba(28,56,107,0.9)\",\n            todayBackgroundColor: \"rgba(28,56,107,0.9)\",\n            textSectionTitleColor: \"rgba(28,56,107,0.9)\",\n            selectedDayBackgroundColor: \"rgba(28,56,107,0.9)\",\n            dayTextColor: \"rgba(28,56,107,0.9)\",\n            dotColor: \"black\"\n          },\n          minDate: \"2022-01-01\",\n          maxDate: \"2023-01-01\",\n          refreshing: false,\n          refreshControl: null,\n          items: this.state.items,\n          selected: new Date(),\n          initialNumToRender: 5,\n          pastScrollRange: 5,\n          futureScrollRange: 5,\n          windowSize: 15,\n          maxToRenderPerBatch: 5,\n          updateCellsBatchingPeriod: 5,\n          removeClippedSubviews: false,\n          onEndReachedThreshold: 0.1,\n          loadItemsForMonth: this.loadFromList.bind(this),\n          renderItem: this.renderItem.bind(this),\n          renderEmptyDate: this.renderEmptyDate.bind(this)\n        })]\n      });\n    }\n  }, {\n    key: \"loadFromList\",\n    value: function loadFromList() {\n      var _this3 = this;\n\n      var onReceive = function onReceive(data) {\n        if (compare(data, _this3.state.events) === false) {\n          _this3.setState({\n            events: data,\n            item: {}\n          });\n        }\n      };\n\n      eventsData(onReceive);\n      this.state.events.map(function (key, index) {\n        var day = key.start;\n\n        if (!_this3.state.items[day]) {\n          _this3.state.items[day] = [];\n\n          _this3.state.items[day].push({\n            Name: \"Event: \" + key.name,\n            programme: \"programme: \" + key.programme,\n            start: \"start day: \" + key.start,\n            end: \"end day: \" + key.end,\n            height: Math.max(50, Math.floor(Math.random() * 150))\n          });\n        }\n\n        var newItems = {};\n        Object.keys(_this3.state.items).forEach(function (key) {\n          newItems[key] = _this3.state.items[key];\n        });\n\n        _this3.setState({\n          items: newItems\n        });\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return _jsxs(View, {\n        style: [styles.item, {\n          height: item.height + 50\n        }],\n        children: [_jsx(Text, {\n          children: item.Name\n        }), _jsx(Text, {\n          children: item.programme\n        }), _jsx(Text, {\n          children: item.start\n        }), _jsx(Text, {\n          children: item.end\n        })]\n      });\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return _jsx(View, {\n        style: styles.emptyDate,\n        children: _jsx(Text, {\n          children: \"No Agenda On this day!\"\n        })\n      });\n    }\n  }]);\n\n  return EventsCalendar;\n}(PureComponent);\n\nexport { EventsCalendar as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"white\",\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    width: width / 2,\n    height: height / 3\n  },\n  button: {\n    borderRadius: 10,\n    padding: 10,\n    elevation: 2,\n    bottom: -height / 5\n  },\n  buttonClose: {\n    backgroundColor: \"black\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["Calendar","Agenda","React","useState","PureComponent","Card","Avatar","firebase","db","getCurrentDate","useNavigation","AntDesign","createTopBar","data","Dimensions","get","width","height","SPACING","ICON_SIZE","compare","obj1","obj2","JSON","stringify","sendToFirestore","state","firestore","collection","add","name","eventtext","start_date","startdatetext","end_date","enddatetext","id","Math","max","floor","random","programme","notetext","then","Alert","alert","eventsData","onReceiveList","events","querySnapshot","forEach","doc","start","end","key","length","date","Date","date2","diff","ceil","abs","push","snapshot","LogBox","ignoreLogs","EventsCalendar","props","items","modalVisible","flex","top","backgroundColor","setState","styles","centeredView","borderRadius","borderWidth","fontSize","textAlign","padding","marginBottom","fontWeight","message","newText","text","flexDirection","left","button","buttonClose","bottom","textStyle","position","zIndex","right","alignItems","calendarBackground","agendaKnobColor","agendaDayTextColor","agendaDayNumColor","agendaTodayColor","monthTextColor","todayBackgroundColor","textSectionTitleColor","selectedDayBackgroundColor","dayTextColor","dotColor","loadFromList","bind","renderItem","renderEmptyDate","onReceive","item","map","index","day","Name","newItems","Object","keys","emptyDate","StyleSheet","create","marginRight","marginTop","paddingTop","justifyContent","modalView","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","color","modalText"],"sources":["C:/Users/nokno/OneDrive/Documents/GitHub/DFMPC-Student-Placement-System/Screens/EventsCalendar.js"],"sourcesContent":["import { Calendar, Agenda } from \"react-native-calendars\"; // 1.5.3\r\nimport React, { useState, PureComponent } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  Pressable,\r\n  LogBox,\r\n  Modal,\r\n  TouchableHighlight,\r\n  Image,\r\n  Dimensions,\r\n  TextInput,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { Card, Avatar } from \"react-native-paper\";\r\nimport { firebase, db } from \"../firebase\";\r\nimport { getCurrentDate } from \"../HelperFunctions\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n//import { Icon } from \"react-native-paper/lib/typescript/components/Avatar/Avatar\";\r\nimport { createTopBar } from \"../HelperFunctions\";\r\n\r\nconst data = [];\r\nconst { width, height } = Dimensions.get(\"screen\");\r\nconst SPACING = 20;\r\nconst ICON_SIZE = 75;\r\n\r\nconst compare = (obj1, obj2) => {\r\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n};\r\n\r\n//send event data to database\r\nasync function sendToFirestore(state) {\r\n  await firebase\r\n    .firestore()\r\n    .collection(\"events\")\r\n    .add({\r\n      name: state.eventtext,\r\n      start_date: state.startdatetext,\r\n      end_date: state.enddatetext,\r\n      id: Math.max(50, Math.floor(Math.random() * 150)),\r\n      programme: state.notetext,\r\n    })\r\n    .then(() => {\r\n      Alert.alert(\"Event Added\");\r\n    });\r\n}\r\n\r\n// function to retrieve events from firestore\r\nasync function eventsData(onReceiveList) {\r\n  const events = [];\r\n  var snapshot = await firebase\r\n    .firestore()\r\n    .collection(\"events\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach(function (doc) {\r\n        let start = doc.data().start_date,\r\n          end = doc.data().end_date,\r\n          name = doc.data().name,\r\n          id = doc.data().id,\r\n          programme = doc.data().programme,\r\n          key = events.length + 1;\r\n        let date = new Date();\r\n        let date2 = new Date(start);\r\n        let diff = Math.ceil((date2 - date) / (1000 * 3600 * 24));\r\n        if (Math.abs(diff) < 90) {\r\n          events.push({\r\n            name: name,\r\n            key: key,\r\n            start: start,\r\n            end: end,\r\n            id: id,\r\n            programme: programme,\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n  onReceiveList(events);\r\n}\r\n\r\nLogBox.ignoreLogs([\"Setting a timer\"]);\r\nexport default class EventsCalendar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: {},\r\n      events: [],\r\n      modalVisible: false,\r\n      startdatetext: \"\",\r\n      enddatetext: \"\",\r\n      eventtext: \"\",\r\n      notetext: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1, top: SPACING * 2, backgroundColor: \"white\" }}>\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={this.state.modalVisible}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            this.setState({\r\n              modalVisible: false,\r\n            });\r\n          }}\r\n        >\r\n          <View style={styles.centeredView}>\r\n            <View\r\n              style={{\r\n                top: 50,\r\n                height: 400,\r\n                width: width / 1.2,\r\n                backgroundColor: \"white\",\r\n                borderRadius: 10,\r\n                borderWidth: 4,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 25, top: 10, textAlign: \"center\" }}>\r\n                Create Event\r\n              </Text>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>\r\n                  Event name\r\n                </Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"Enter name\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ eventtext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>\r\n                  Start date\r\n                </Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ startdatetext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>\r\n                  End date\r\n                </Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ enddatetext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ padding: 10, marginBottom: 10 }}>\r\n                <Text style={{ fontWeight: \"bold\", fontSize: 17 }}>Notes</Text>\r\n                <TextInput\r\n                  // user can type their emergency message\r\n                  style={styles.message}\r\n                  placeholder=\"Type notes here\"\r\n                  onChangeText={(newText) =>\r\n                    this.setState({ notetext: newText })\r\n                  }\r\n                  defaultValue={this.state.text}\r\n                />\r\n              </View>\r\n              <View style={{ flexDirection: \"row\", left: 20, top: 42 }}>\r\n                <Pressable\r\n                  style={[\r\n                    styles.button,\r\n                    styles.buttonClose,\r\n                    { width: width / 3, left: 10, bottom: 30 },\r\n                  ]}\r\n                  onPress={() =>\r\n                    this.setState({\r\n                      modalVisible: false,\r\n                    })\r\n                  }\r\n                >\r\n                  <Text style={[styles.textStyle]}>Done</Text>\r\n                </Pressable>\r\n                <Pressable\r\n                  style={[\r\n                    styles.button,\r\n                    styles.buttonClose,\r\n                    {\r\n                      width: width / 3,\r\n                      left: 20,\r\n                      bottom: 30,\r\n                      backgroundColor: \"rgba(28,56,107,1)\",\r\n                    },\r\n                  ]}\r\n                  onPress={() => sendToFirestore(this.state)}\r\n                >\r\n                  <Text style={[styles.textStyle]}>Add</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n        <View>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              this.setState({\r\n                modalVisible: true,\r\n              })\r\n            }\r\n            style={{\r\n              backgroundColor: \"rgba(28,56,107,0.0)\",\r\n              position: \"absolute\",\r\n              borderRadius: 50,\r\n              width: 50,\r\n              height: 50,\r\n              zIndex: 1,\r\n              right: 20,\r\n              top: height - 175,\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <AntDesign name=\"pluscircle\" color=\"black\" size={50} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Agenda\r\n          theme={{\r\n            calendarBackground: \"white\", //agenda background\r\n            agendaKnobColor: \"rgba(28,56,107,0.9)\", // knob color\r\n            backgroundColor: \"rgba(28,56,107,0.9)\", // background color below agenda\r\n            agendaDayTextColor: \"white\", // day name\r\n            agendaDayNumColor: \"white\", // day number\r\n            agendaTodayColor: \"rgba(255,255,255,0.9)\", // today in list\r\n            monthTextColor: \"rgba(28,56,107,0.9)\", // name in calendar\r\n            todayBackgroundColor: \"rgba(28,56,107,0.9)\",\r\n            textSectionTitleColor: \"rgba(28,56,107,0.9)\",\r\n            selectedDayBackgroundColor: \"rgba(28,56,107,0.9)\", // calendar sel date\r\n            dayTextColor: \"rgba(28,56,107,0.9)\", // calendar day\r\n            dotColor: \"black\", // dots\r\n          }}\r\n          minDate={\"2022-01-01\"}\r\n          maxDate={\"2023-01-01\"}\r\n          refreshing={false}\r\n          refreshControl={null}\r\n          items={this.state.items}\r\n          selected={new Date()}\r\n          initialNumToRender={5}\r\n          pastScrollRange={5}\r\n          futureScrollRange={5}\r\n          windowSize={15}\r\n          maxToRenderPerBatch={5}\r\n          updateCellsBatchingPeriod={5}\r\n          removeClippedSubviews={false}\r\n          onEndReachedThreshold={0.1}\r\n          loadItemsForMonth={this.loadFromList.bind(this)}\r\n          renderItem={this.renderItem.bind(this)}\r\n          renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  loadFromList() {\r\n    const onReceive = (data) => {\r\n      if (compare(data, this.state.events) === false) {\r\n        this.setState({\r\n          events: data,\r\n          item: {},\r\n        });\r\n      }\r\n    };\r\n    eventsData(onReceive);\r\n    this.state.events.map((key, index) => {\r\n      const day = key.start;\r\n      if (!this.state.items[day]) {\r\n        this.state.items[day] = [];\r\n        this.state.items[day].push({\r\n          Name: \"Event: \" + key.name,\r\n          programme: \"programme: \" + key.programme,\r\n          start: \"start day: \" + key.start,\r\n          end: \"end day: \" + key.end,\r\n          height: Math.max(50, Math.floor(Math.random() * 150)),\r\n        });\r\n      }\r\n\r\n      const newItems = {};\r\n      Object.keys(this.state.items).forEach((key) => {\r\n        newItems[key] = this.state.items[key];\r\n      });\r\n      this.setState({\r\n        items: newItems,\r\n      });\r\n    });\r\n  }\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <View style={[styles.item, { height: item.height + 50 }]}>\r\n        <Text>{item.Name}</Text>\r\n        <Text>{item.programme}</Text>\r\n        <Text>{item.start}</Text>\r\n        <Text>{item.end}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>No Agenda On this day!</Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n    width: width / 2,\r\n    height: height / 3,\r\n  },\r\n  button: {\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    elevation: 2,\r\n    bottom: -height / 5,\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    fontSize: 20,\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}