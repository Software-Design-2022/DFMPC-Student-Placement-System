{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useEffect } from \"react-native-web/dist/index\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport MapView from \"react-native-maps\";\nimport { Marker } from \"react-native-maps\";\nimport \"../global\";\nimport { firebase } from \"../firebase\";\nimport Getlocation from \"react-native-geolocation-service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Separator = function Separator() {\n  return _jsx(View, {\n    style: styles.separator\n  });\n};\n\nvar sendToFirestore = function sendToFirestore(text) {\n  firebase.firestore().collection(\"panic_button\").add({\n    Location: [-latitude, longitude],\n    query: text,\n    student_Number: \"123456\",\n    user_FirstName: authname,\n    user_LastName: authlastName\n  }).then(function () {\n    Alert.alert(\"Emergency Message Saved\");\n  });\n};\n\nvar authname = authName;\nvar authlastName = authLastName;\nvar latitude = 20;\nvar longitude = 30;\n\nvar PanicButton = function PanicButton() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      position = _useState4[0],\n      setPosition = _useState4[1];\n\n  var navigation = useNavigation();\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: {\n        justifyContent: \"center\",\n        marginBottom: 30\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\",\n          color: \"#f194ff\",\n          textAlign: \"center\"\n        },\n        children: \"Emergency Button Page\"\n      })\n    }), _jsx(Separator, {}), _jsx(View, {\n      style: {\n        marginBottom: 20\n      },\n      children: _jsx(Button, {\n        title: \"Protocols\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Protocols\");\n        }\n      })\n    }), _jsx(Separator, {}), _jsx(View, {\n      style: {\n        padding: 10,\n        marginBottom: 20\n      },\n      children: _jsx(TextInput, {\n        style: {\n          height: 90,\n          textAlign: \"center\",\n          backgroundColor: \"lightblue\"\n        },\n        placeholder: \"Type emergency message here!\",\n        onChangeText: function onChangeText(newText) {\n          return setText(newText);\n        },\n        defaultValue: text\n      })\n    }), _jsx(Separator, {}), _jsx(View, {\n      style: {\n        marginBottom: 20\n      },\n      children: _jsx(Button, {\n        title: \"Send Emergency message\",\n        color: \"#f194ff\",\n        onPress: function onPress() {\n          return sendToFirestore(text);\n        }\n      })\n    }), _jsx(Separator, {}), _jsxs(View, {\n      style: styles.MapStyle,\n      children: [_jsx(MapView, {\n        style: styles.map,\n        region: {\n          latitude: -26.18471,\n          longitude: 28.026791,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        }\n      }), _jsx(Marker, {\n        coordinate: {\n          latitude: -26.18471,\n          longitude: 28.026791\n        }\n      })]\n    }), _jsx(View, {})]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 50,\n    flex: 1,\n    justifyContent: \"center\",\n    marginHorizontal: 16\n  },\n  title: {\n    textAlign: \"center\",\n    marginVertical: 8\n  },\n  fixToText: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: \"#737373\",\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  map: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  },\n  MapStyle: {\n    flex: 1,\n    margin: 20,\n    marginBottom: 90,\n    justifyContent: \"center\"\n  }\n});\nexport default PanicButton;","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/Screens/PanicButton.js"],"names":["React","useState","requireNativeComponent","useEffect","useNavigation","MapView","Marker","firebase","Getlocation","Separator","styles","separator","sendToFirestore","text","firestore","collection","add","Location","latitude","longitude","query","student_Number","user_FirstName","authname","user_LastName","authlastName","then","Alert","alert","authName","authLastName","PanicButton","setText","position","setPosition","navigation","container","justifyContent","marginBottom","fontSize","fontWeight","color","textAlign","navigate","padding","height","backgroundColor","newText","MapStyle","map","latitudeDelta","longitudeDelta","StyleSheet","create","marginTop","flex","marginHorizontal","title","marginVertical","fixToText","flexDirection","borderBottomColor","borderBottomWidth","hairlineWidth","top","left","bottom","right","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  requireNativeComponent,\r\n  StyleSheet,\r\n  Button,\r\n  View,\r\n  SafeAreaView,\r\n  Text,\r\n  Alert,\r\n  TextInput,\r\n  Platform,\r\n  useEffect,\r\n} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport MapView from \"react-native-maps\";\r\nimport { Marker } from \"react-native-maps\";\r\nimport  \"../global\";\r\nimport { firebase } from \"../firebase\";\r\nimport Getlocation from \"react-native-geolocation-service\";\r\nconst Separator = () => <View style={styles.separator} />;\r\n\r\n// this function will receive the text currently entered\r\n// it will the send it to the database\r\n// saves location amd user info\r\nconst sendToFirestore = (text) => {\r\n  firebase\r\n    .firestore()\r\n    .collection(\"panic_button\")\r\n    .add({\r\n      Location: [-latitude, longitude],\r\n      query: text,\r\n      student_Number: \"123456\",\r\n      user_FirstName: authname,\r\n      user_LastName: authlastName,\r\n    })\r\n    .then(() => {\r\n      Alert.alert(\"Emergency Message Saved\");\r\n    });\r\n};\r\nconst authname =authName;\r\nconst authlastName = authLastName;\r\nconst latitude = 20;\r\nconst longitude = 30;\r\nconst PanicButton = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [position, setPosition] = useState(null);\r\n  const navigation = useNavigation();\r\n\r\n  /*  Getlocation.getCurrentPosition(\r\n    (pos)=>{\r\n      setPosition(\r\n        pos.coords)\r\n    },\r\n    (error)=>{\r\n      Alert.alert(error.message)\r\n    },\r\n    {enableHighAccuracy:true,timeout:15000,maximumAge:10000}\r\n  )*/\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={{ justifyContent: \"center\", marginBottom: 30 }}>\r\n        <Text\r\n          style={{\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            color: \"#f194ff\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Emergency Button Page\r\n        </Text>\r\n      </View>\r\n      <Separator />\r\n      <View style={{ marginBottom: 20 }}>\r\n        <Button\r\n          // when clicked it will navigate to the Protocols page\r\n          // where user can have a look at the available protocols\r\n          title=\"Protocols\"\r\n          onPress={() => navigation.navigate(\"Protocols\")}\r\n        />\r\n      </View>\r\n      <Separator />\r\n\r\n      <View style={{ padding: 10, marginBottom: 20 }}>\r\n        <TextInput\r\n          // user can type their emergency message\r\n          style={{\r\n            height: 90,\r\n            textAlign: \"center\",\r\n            backgroundColor: \"lightblue\",\r\n          }}\r\n          placeholder=\"Type emergency message here!\"\r\n          onChangeText={(newText) => setText(newText)}\r\n          defaultValue={text}\r\n        />\r\n      </View>\r\n      <Separator />\r\n      <View style={{ marginBottom: 20 }}>\r\n        <Button\r\n          title=\"Send Emergency message\"\r\n          color=\"#f194ff\"\r\n          // when clicked data is send to firestore database\r\n          onPress={() => sendToFirestore(text)}\r\n        />\r\n      </View>\r\n      <Separator />\r\n      <View style={styles.MapStyle}>\r\n        <MapView\r\n          // show a mapview with the given longitude and latitude\r\n          style={styles.map}\r\n          region={{\r\n            latitude: -26.18471,\r\n            longitude: 28.026791,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421,\r\n          }}\r\n          // show a mapview with the given region\r\n        ></MapView>\r\n\r\n        <Marker\r\n          // mark the location\r\n          coordinate={{\r\n            latitude: -26.18471,\r\n            longitude: 28.026791,\r\n          }}\r\n          // image={{uri:\"./images/pin.png\"}}\r\n        />\r\n      </View>\r\n      <View>\r\n        {/* <Text>Display Current Location of device</Text> */}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 50,\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    marginHorizontal: 16,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    marginVertical: 8,\r\n  },\r\n  fixToText: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  separator: {\r\n    marginVertical: 8,\r\n    borderBottomColor: \"#737373\",\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n  },\r\n  map: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  MapStyle: {\r\n    flex: 1,\r\n    margin: 20,\r\n    marginBottom: 90,\r\n\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default PanicButton;\r\n"]},"metadata":{},"sourceType":"module"}