{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport includes from 'lodash/includes';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Fragment, useCallback, useMemo, forwardRef, useImperativeHandle, useRef } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { formatNumbers, weekDayNames } from \"../../dateutils\";\nimport { CHANGE_MONTH_LEFT_ARROW, CHANGE_MONTH_RIGHT_ARROW, HEADER_DAY_NAMES, HEADER_LOADING_INDICATOR, HEADER_MONTH_NAME } from \"../../testIDs\";\nimport styleConstructor from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar accessibilityActions = [{\n  name: 'increment',\n  label: 'increment'\n}, {\n  name: 'decrement',\n  label: 'decrement'\n}];\nvar CalendarHeader = forwardRef(function (props, ref) {\n  var theme = props.theme,\n      propsStyle = props.style,\n      propsAddMonth = props.addMonth,\n      month = props.month,\n      monthFormat = props.monthFormat,\n      firstDay = props.firstDay,\n      hideDayNames = props.hideDayNames,\n      showWeekNumbers = props.showWeekNumbers,\n      hideArrows = props.hideArrows,\n      renderArrow = props.renderArrow,\n      onPressArrowLeft = props.onPressArrowLeft,\n      onPressArrowRight = props.onPressArrowRight,\n      disableArrowLeft = props.disableArrowLeft,\n      disableArrowRight = props.disableArrowRight,\n      disabledDaysIndexes = props.disabledDaysIndexes,\n      displayLoadingIndicator = props.displayLoadingIndicator,\n      customHeaderTitle = props.customHeaderTitle,\n      renderHeader = props.renderHeader,\n      webAriaLevel = props.webAriaLevel,\n      testID = props.testID,\n      accessibilityElementsHidden = props.accessibilityElementsHidden,\n      importantForAccessibility = props.importantForAccessibility;\n  var style = useRef(styleConstructor(theme));\n  useImperativeHandle(ref, function () {\n    return {\n      onPressLeft: onPressLeft,\n      onPressRight: onPressRight\n    };\n  });\n  var addMonth = useCallback(function () {\n    propsAddMonth == null ? void 0 : propsAddMonth(1);\n  }, [propsAddMonth]);\n  var subtractMonth = useCallback(function () {\n    propsAddMonth == null ? void 0 : propsAddMonth(-1);\n  }, [propsAddMonth]);\n  var onPressLeft = useCallback(function () {\n    if (typeof onPressArrowLeft === 'function') {\n      return onPressArrowLeft(subtractMonth, month);\n    }\n\n    return subtractMonth();\n  }, [onPressArrowLeft, subtractMonth, month]);\n  var onPressRight = useCallback(function () {\n    if (typeof onPressArrowRight === 'function') {\n      return onPressArrowRight(addMonth, month);\n    }\n\n    return addMonth();\n  }, [onPressArrowRight, addMonth, month]);\n\n  var onAccessibilityAction = function onAccessibilityAction(event) {\n    switch (event.nativeEvent.actionName) {\n      case 'decrement':\n        onPressLeft();\n        break;\n\n      case 'increment':\n        onPressRight();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var renderWeekDays = useMemo(function () {\n    var weekDaysNames = weekDayNames(firstDay);\n    return weekDaysNames.map(function (day, index) {\n      var dayStyle = [style.current.dayHeader];\n\n      if (includes(disabledDaysIndexes, index)) {\n        dayStyle.push(style.current.disabledDayHeader);\n      }\n\n      var dayTextAtIndex = \"dayTextAtIndex\" + index;\n\n      if (style[dayTextAtIndex]) {\n        dayStyle.push(style[dayTextAtIndex]);\n      }\n\n      return _jsx(Text, {\n        allowFontScaling: false,\n        style: dayStyle,\n        numberOfLines: 1,\n        accessibilityLabel: '',\n        children: day\n      }, index);\n    });\n  }, [firstDay]);\n\n  var _renderHeader = function _renderHeader() {\n    var webProps = Platform.OS === 'web' ? {\n      'aria-level': webAriaLevel\n    } : {};\n\n    if (renderHeader) {\n      return renderHeader(month);\n    }\n\n    if (customHeaderTitle) {\n      return customHeaderTitle;\n    }\n\n    return _jsx(Fragment, {\n      children: _jsx(Text, _objectSpread(_objectSpread({\n        allowFontScaling: false,\n        style: style.current.monthText,\n        testID: testID ? HEADER_MONTH_NAME + \"-\" + testID : HEADER_MONTH_NAME\n      }, webProps), {}, {\n        children: formatNumbers(month == null ? void 0 : month.toString(monthFormat))\n      }))\n    });\n  };\n\n  var _renderArrow = function _renderArrow(direction) {\n    if (hideArrows) {\n      return _jsx(View, {});\n    }\n\n    var isLeft = direction === 'left';\n    var id = isLeft ? CHANGE_MONTH_LEFT_ARROW : CHANGE_MONTH_RIGHT_ARROW;\n    var testId = testID ? id + \"-\" + testID : id;\n    var onPress = isLeft ? onPressLeft : onPressRight;\n    var imageSource = isLeft ? require(\"../img/previous.png\") : require(\"../img/next.png\");\n    var renderArrowDirection = isLeft ? 'left' : 'right';\n    var shouldDisable = isLeft ? disableArrowLeft : disableArrowRight;\n    return _jsx(TouchableOpacity, {\n      onPress: !shouldDisable ? onPress : undefined,\n      disabled: shouldDisable,\n      style: style.current.arrow,\n      hitSlop: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20\n      },\n      testID: testId,\n      children: renderArrow ? renderArrow(renderArrowDirection) : _jsx(Image, {\n        source: imageSource,\n        style: shouldDisable ? style.current.disabledArrowImage : style.current.arrowImage\n      })\n    });\n  };\n\n  var renderIndicator = function renderIndicator() {\n    if (displayLoadingIndicator) {\n      return _jsx(ActivityIndicator, {\n        color: theme == null ? void 0 : theme.indicatorColor,\n        testID: testID ? HEADER_LOADING_INDICATOR + \"-\" + testID : HEADER_LOADING_INDICATOR\n      });\n    }\n  };\n\n  var renderWeekNumbersSpace = function renderWeekNumbersSpace() {\n    return showWeekNumbers && _jsx(View, {\n      style: style.current.dayHeader\n    });\n  };\n\n  var renderDayNames = function renderDayNames() {\n    if (!hideDayNames) {\n      return _jsxs(View, {\n        style: style.current.week,\n        testID: testID ? HEADER_DAY_NAMES + \"-\" + testID : HEADER_DAY_NAMES,\n        children: [renderWeekNumbersSpace(), renderWeekDays]\n      });\n    }\n  };\n\n  return _jsxs(View, {\n    testID: testID,\n    style: propsStyle,\n    accessible: true,\n    accessibilityRole: 'adjustable',\n    accessibilityActions: accessibilityActions,\n    onAccessibilityAction: onAccessibilityAction,\n    accessibilityElementsHidden: accessibilityElementsHidden,\n    importantForAccessibility: importantForAccessibility,\n    children: [_jsxs(View, {\n      style: style.current.header,\n      children: [_renderArrow('left'), _jsxs(View, {\n        style: style.current.headerContainer,\n        children: [_renderHeader(), renderIndicator()]\n      }), _renderArrow('right')]\n    }), renderDayNames()]\n  });\n});\nexport default CalendarHeader;\nCalendarHeader.displayName = 'CalendarHeader';\nCalendarHeader.propTypes = {\n  month: PropTypes.instanceOf(XDate),\n  addMonth: PropTypes.func,\n  theme: PropTypes.object,\n  firstDay: PropTypes.number,\n  displayLoadingIndicator: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  monthFormat: PropTypes.string,\n  hideDayNames: PropTypes.bool,\n  hideArrows: PropTypes.bool,\n  renderArrow: PropTypes.func,\n  onPressArrowLeft: PropTypes.func,\n  onPressArrowRight: PropTypes.func,\n  disableArrowLeft: PropTypes.bool,\n  disableArrowRight: PropTypes.bool,\n  disabledDaysIndexes: PropTypes.any,\n  renderHeader: PropTypes.any,\n  customHeaderTitle: PropTypes.any,\n  webAriaLevel: PropTypes.number\n};\nCalendarHeader.defaultProps = {\n  monthFormat: 'MMMM yyyy',\n  webAriaLevel: 1\n};","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/calendar/header/index.js"],"names":["includes","PropTypes","XDate","React","Fragment","useCallback","useMemo","forwardRef","useImperativeHandle","useRef","formatNumbers","weekDayNames","CHANGE_MONTH_LEFT_ARROW","CHANGE_MONTH_RIGHT_ARROW","HEADER_DAY_NAMES","HEADER_LOADING_INDICATOR","HEADER_MONTH_NAME","styleConstructor","accessibilityActions","name","label","CalendarHeader","props","ref","theme","propsStyle","style","propsAddMonth","addMonth","month","monthFormat","firstDay","hideDayNames","showWeekNumbers","hideArrows","renderArrow","onPressArrowLeft","onPressArrowRight","disableArrowLeft","disableArrowRight","disabledDaysIndexes","displayLoadingIndicator","customHeaderTitle","renderHeader","webAriaLevel","testID","accessibilityElementsHidden","importantForAccessibility","onPressLeft","onPressRight","subtractMonth","onAccessibilityAction","event","nativeEvent","actionName","renderWeekDays","weekDaysNames","map","day","index","dayStyle","current","dayHeader","push","disabledDayHeader","dayTextAtIndex","_renderHeader","webProps","Platform","OS","monthText","toString","_renderArrow","direction","isLeft","id","testId","onPress","imageSource","require","renderArrowDirection","shouldDisable","undefined","arrow","left","right","top","bottom","disabledArrowImage","arrowImage","renderIndicator","indicatorColor","renderWeekNumbersSpace","renderDayNames","week","header","headerContainer","displayName","propTypes","instanceOf","func","object","number","bool","string","any","defaultProps"],"mappings":"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","sourcesContent":["import includes from 'lodash/includes';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Fragment, useCallback, useMemo, forwardRef, useImperativeHandle, useRef } from 'react';\nimport { ActivityIndicator, Platform, View, Text, TouchableOpacity, Image } from 'react-native';\nimport { formatNumbers, weekDayNames } from '../../dateutils';\nimport { CHANGE_MONTH_LEFT_ARROW, CHANGE_MONTH_RIGHT_ARROW, HEADER_DAY_NAMES, HEADER_LOADING_INDICATOR, HEADER_MONTH_NAME\n// @ts-expect-error\n } from '../../testIDs';\nimport styleConstructor from './style';\nconst accessibilityActions = [\n    { name: 'increment', label: 'increment' },\n    { name: 'decrement', label: 'decrement' }\n];\nconst CalendarHeader = forwardRef((props, ref) => {\n    const { theme, style: propsStyle, addMonth: propsAddMonth, month, monthFormat, firstDay, hideDayNames, showWeekNumbers, hideArrows, renderArrow, onPressArrowLeft, onPressArrowRight, disableArrowLeft, disableArrowRight, disabledDaysIndexes, displayLoadingIndicator, customHeaderTitle, renderHeader, webAriaLevel, testID, accessibilityElementsHidden, importantForAccessibility } = props;\n    const style = useRef(styleConstructor(theme));\n    useImperativeHandle(ref, () => ({\n        onPressLeft,\n        onPressRight\n    }));\n    const addMonth = useCallback(() => {\n        propsAddMonth?.(1);\n    }, [propsAddMonth]);\n    const subtractMonth = useCallback(() => {\n        propsAddMonth?.(-1);\n    }, [propsAddMonth]);\n    const onPressLeft = useCallback(() => {\n        if (typeof onPressArrowLeft === 'function') {\n            return onPressArrowLeft(subtractMonth, month);\n        }\n        return subtractMonth();\n    }, [onPressArrowLeft, subtractMonth, month]);\n    const onPressRight = useCallback(() => {\n        if (typeof onPressArrowRight === 'function') {\n            return onPressArrowRight(addMonth, month);\n        }\n        return addMonth();\n    }, [onPressArrowRight, addMonth, month]);\n    const onAccessibilityAction = (event) => {\n        switch (event.nativeEvent.actionName) {\n            case 'decrement':\n                onPressLeft();\n                break;\n            case 'increment':\n                onPressRight();\n                break;\n            default:\n                break;\n        }\n    };\n    const renderWeekDays = useMemo(() => {\n        const weekDaysNames = weekDayNames(firstDay);\n        return weekDaysNames.map((day, index) => {\n            const dayStyle = [style.current.dayHeader];\n            if (includes(disabledDaysIndexes, index)) {\n                dayStyle.push(style.current.disabledDayHeader);\n            }\n            const dayTextAtIndex = `dayTextAtIndex${index}`;\n            // @ts-expect-error\n            if (style[dayTextAtIndex]) {\n                // @ts-expect-error\n                dayStyle.push(style[dayTextAtIndex]);\n            }\n            return (<Text allowFontScaling={false} key={index} style={dayStyle} numberOfLines={1} accessibilityLabel={''}>\n          {day}\n        </Text>);\n        });\n    }, [firstDay]);\n    const _renderHeader = () => {\n        const webProps = Platform.OS === 'web' ? { 'aria-level': webAriaLevel } : {};\n        if (renderHeader) {\n            return renderHeader(month);\n        }\n        if (customHeaderTitle) {\n            return customHeaderTitle;\n        }\n        return (<Fragment>\n        <Text allowFontScaling={false} style={style.current.monthText} testID={testID ? `${HEADER_MONTH_NAME}-${testID}` : HEADER_MONTH_NAME} {...webProps}>\n          {formatNumbers(month?.toString(monthFormat))}\n        </Text>\n      </Fragment>);\n    };\n    const _renderArrow = (direction) => {\n        if (hideArrows) {\n            return <View />;\n        }\n        const isLeft = direction === 'left';\n        const id = isLeft ? CHANGE_MONTH_LEFT_ARROW : CHANGE_MONTH_RIGHT_ARROW;\n        const testId = testID ? `${id}-${testID}` : id;\n        const onPress = isLeft ? onPressLeft : onPressRight;\n        const imageSource = isLeft ? require('../img/previous.png') : require('../img/next.png');\n        const renderArrowDirection = isLeft ? 'left' : 'right';\n        const shouldDisable = isLeft ? disableArrowLeft : disableArrowRight;\n        return (<TouchableOpacity onPress={!shouldDisable ? onPress : undefined} disabled={shouldDisable} style={style.current.arrow} hitSlop={{ left: 20, right: 20, top: 20, bottom: 20 }} testID={testId}>\n        {renderArrow ? (renderArrow(renderArrowDirection)) : (\n            // @ts-expect-error style?: StyleProp<ImageStyle>\n            <Image source={imageSource} style={shouldDisable ? style.current.disabledArrowImage : style.current.arrowImage}/>)}\n      </TouchableOpacity>);\n    };\n    const renderIndicator = () => {\n        if (displayLoadingIndicator) {\n            return (<ActivityIndicator color={theme?.indicatorColor} testID={testID ? `${HEADER_LOADING_INDICATOR}-${testID}` : HEADER_LOADING_INDICATOR}/>);\n        }\n    };\n    const renderWeekNumbersSpace = () => {\n        return showWeekNumbers && <View style={style.current.dayHeader}/>;\n    };\n    const renderDayNames = () => {\n        if (!hideDayNames) {\n            return (<View style={style.current.week} testID={testID ? `${HEADER_DAY_NAMES}-${testID}` : HEADER_DAY_NAMES}>\n          {renderWeekNumbersSpace()}\n          {renderWeekDays}\n        </View>);\n        }\n    };\n    return (<View testID={testID} style={propsStyle} accessible accessibilityRole={'adjustable'} accessibilityActions={accessibilityActions} onAccessibilityAction={onAccessibilityAction} accessibilityElementsHidden={accessibilityElementsHidden} // iOS\n     importantForAccessibility={importantForAccessibility} // Android\n    >\n      <View style={style.current.header}>\n        {_renderArrow('left')}\n        <View style={style.current.headerContainer}>\n          {_renderHeader()}\n          {renderIndicator()}\n        </View>\n        {_renderArrow('right')}\n      </View>\n      {renderDayNames()}\n    </View>);\n});\nexport default CalendarHeader;\nCalendarHeader.displayName = 'CalendarHeader';\nCalendarHeader.propTypes = {\n    month: PropTypes.instanceOf(XDate),\n    addMonth: PropTypes.func,\n    theme: PropTypes.object,\n    firstDay: PropTypes.number,\n    displayLoadingIndicator: PropTypes.bool,\n    showWeekNumbers: PropTypes.bool,\n    monthFormat: PropTypes.string,\n    hideDayNames: PropTypes.bool,\n    hideArrows: PropTypes.bool,\n    renderArrow: PropTypes.func,\n    onPressArrowLeft: PropTypes.func,\n    onPressArrowRight: PropTypes.func,\n    disableArrowLeft: PropTypes.bool,\n    disableArrowRight: PropTypes.bool,\n    disabledDaysIndexes: PropTypes.any,\n    renderHeader: PropTypes.any,\n    customHeaderTitle: PropTypes.any,\n    webAriaLevel: PropTypes.number\n};\nCalendarHeader.defaultProps = {\n    monthFormat: 'MMMM yyyy',\n    webAriaLevel: 1\n};\n"]},"metadata":{},"sourceType":"module"}