{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport omit from 'lodash/omit';\nimport isEqual from 'lodash/isEqual';\nimport some from 'lodash/some';\nimport XDate from 'xdate';\nimport React, { useMemo } from 'react';\nimport { formatNumbers, isToday } from \"../../dateutils\";\nimport { getDefaultLocale } from \"../../services\";\nimport { xdateToData } from \"../../interface\";\nimport { SELECT_DATE_SLOT } from \"../../testIDs\";\nimport BasicDay from \"./basic\";\nimport PeriodDay from \"./period\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction areEqual(prevProps, nextProps) {\n  var prevPropsWithoutMarkDates = omit(prevProps, 'marking');\n  var nextPropsWithoutMarkDates = omit(nextProps, 'marking');\n  var didPropsChange = some(prevPropsWithoutMarkDates, function (value, key) {\n    return value !== nextPropsWithoutMarkDates[key];\n  });\n  var isMarkingEqual = isEqual(prevProps.marking, nextProps.marking);\n  return !didPropsChange && isMarkingEqual;\n}\nvar Day = React.memo(function (props) {\n  var date = props.date,\n    marking = props.marking,\n    dayComponent = props.dayComponent,\n    markingType = props.markingType;\n  var _date = date ? new XDate(date) : undefined;\n  var _isToday = isToday(_date);\n  var markingAccessibilityLabel = useMemo(function () {\n    var label = '';\n    if (marking) {\n      if (marking.accessibilityLabel) {\n        return marking.accessibilityLabel;\n      }\n      if (marking.selected) {\n        label += 'selected ';\n        if (!marking.marked) {\n          label += 'You have no entries for this day ';\n        }\n      }\n      if (marking.marked) {\n        label += 'You have entries for this day ';\n      }\n      if (marking.startingDay) {\n        label += 'period start ';\n      }\n      if (marking.endingDay) {\n        label += 'period end ';\n      }\n      if (marking.disabled || marking.disableTouchEvent) {\n        label += 'disabled ';\n      }\n    }\n    return label;\n  }, [marking]);\n  var getAccessibilityLabel = useMemo(function () {\n    var today = getDefaultLocale().today || 'today';\n    var formatAccessibilityLabel = getDefaultLocale().formatAccessibilityLabel || 'dddd d MMMM yyyy';\n    return (_isToday ? today : '') + \" \" + (_date == null ? void 0 : _date.toString(formatAccessibilityLabel)) + \" \" + markingAccessibilityLabel;\n  }, [_date, marking, _isToday]);\n  var Component = dayComponent || (markingType === 'period' ? PeriodDay : BasicDay);\n  var dayComponentProps = dayComponent ? {\n    date: xdateToData(date || new XDate())\n  } : undefined;\n  return _jsx(Component, _objectSpread(_objectSpread(_objectSpread({}, props), {}, {\n    accessibilityLabel: getAccessibilityLabel,\n    testID: SELECT_DATE_SLOT + \"-\" + date\n  }, dayComponentProps), {}, {\n    children: formatNumbers(_date == null ? void 0 : _date.getDate())\n  }));\n}, areEqual);\nexport default Day;\nDay.displayName = 'Day';","map":{"version":3,"names":["omit","isEqual","some","XDate","React","useMemo","formatNumbers","isToday","getDefaultLocale","xdateToData","SELECT_DATE_SLOT","BasicDay","PeriodDay","areEqual","prevProps","nextProps","prevPropsWithoutMarkDates","nextPropsWithoutMarkDates","didPropsChange","value","key","isMarkingEqual","marking","Day","memo","props","date","dayComponent","markingType","_date","undefined","_isToday","markingAccessibilityLabel","label","accessibilityLabel","selected","marked","startingDay","endingDay","disabled","disableTouchEvent","getAccessibilityLabel","today","formatAccessibilityLabel","toString","Component","dayComponentProps","getDate","displayName"],"sources":["D:/repos/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/calendar/day/index.js"],"sourcesContent":["import omit from 'lodash/omit';\nimport isEqual from 'lodash/isEqual';\nimport some from 'lodash/some';\nimport XDate from 'xdate';\nimport React, { useMemo } from 'react';\nimport { formatNumbers, isToday } from '../../dateutils';\nimport { getDefaultLocale } from '../../services';\nimport { xdateToData } from '../../interface';\n// @ts-expect-error\nimport { SELECT_DATE_SLOT } from '../../testIDs';\nimport BasicDay from './basic';\nimport PeriodDay from './period';\nfunction areEqual(prevProps, nextProps) {\n    const prevPropsWithoutMarkDates = omit(prevProps, 'marking');\n    const nextPropsWithoutMarkDates = omit(nextProps, 'marking');\n    const didPropsChange = some(prevPropsWithoutMarkDates, function (value, key) {\n        //@ts-expect-error\n        return value !== nextPropsWithoutMarkDates[key];\n    });\n    const isMarkingEqual = isEqual(prevProps.marking, nextProps.marking);\n    return !didPropsChange && isMarkingEqual;\n}\nconst Day = React.memo((props) => {\n    const { date, marking, dayComponent, markingType } = props;\n    const _date = date ? new XDate(date) : undefined;\n    const _isToday = isToday(_date);\n    const markingAccessibilityLabel = useMemo(() => {\n        let label = '';\n        if (marking) {\n            if (marking.accessibilityLabel) {\n                return marking.accessibilityLabel;\n            }\n            if (marking.selected) {\n                label += 'selected ';\n                if (!marking.marked) {\n                    label += 'You have no entries for this day ';\n                }\n            }\n            if (marking.marked) {\n                label += 'You have entries for this day ';\n            }\n            if (marking.startingDay) {\n                label += 'period start ';\n            }\n            if (marking.endingDay) {\n                label += 'period end ';\n            }\n            if (marking.disabled || marking.disableTouchEvent) {\n                label += 'disabled ';\n            }\n        }\n        return label;\n    }, [marking]);\n    const getAccessibilityLabel = useMemo(() => {\n        const today = getDefaultLocale().today || 'today';\n        const formatAccessibilityLabel = getDefaultLocale().formatAccessibilityLabel || 'dddd d MMMM yyyy';\n        return `${_isToday ? today : ''} ${_date?.toString(formatAccessibilityLabel)} ${markingAccessibilityLabel}`;\n    }, [_date, marking, _isToday]);\n    const Component = dayComponent || (markingType === 'period' ? PeriodDay : BasicDay);\n    const dayComponentProps = dayComponent ? { date: xdateToData(date || new XDate()) } : undefined;\n    return (\n    //@ts-expect-error\n    <Component {...props} accessibilityLabel={getAccessibilityLabel} testID={`${SELECT_DATE_SLOT}-${date}`} {...dayComponentProps}>\n      {formatNumbers(_date?.getDate())}\n    </Component>);\n}, areEqual);\nexport default Day;\nDay.displayName = 'Day';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}