{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { firebase } from \"../firebase\";\nimport { v4 as uuidv4 } from 'uuid';\nexport function getList(onReceiveList) {\n  var protocols, snapshot;\n  return _regeneratorRuntime.async(function getList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          protocols = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('emergency_protocols').get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              protocols.push({\n                key: protocols.length + 1,\n                Protocol: doc.id,\n                content: doc.data().protocol_1\n              });\n            });\n          }));\n\n        case 3:\n          snapshot = _context.sent;\n          onReceiveList(protocols);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}",
  "map": {
    "version": 3,
    "names": [
      "firebase",
      "v4",
      "uuidv4",
      "getList",
      "onReceiveList",
      "protocols",
      "firestore",
      "collection",
      "get",
      "then",
      "querySnapshot",
      "forEach",
      "doc",
      "push",
      "key",
      "length",
      "Protocol",
      "id",
      "content",
      "data",
      "protocol_1",
      "snapshot"
    ],
    "sources": [
      "C:/Users/Peace/Desktop/YOS3/SEMESTER 1/Software Design III/2022/Software Design Project/SPS-Project/DFMPC-Student-Placement-System/project/Screens/ListApi.js"
    ],
    "sourcesContent": [
      "import {firebase} from \"../firebase\"\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n\r\nexport async function getList(onReceiveList) {\r\n\r\n  var protocols = []\r\n  \r\n\r\n  var snapshot = await firebase.firestore()\r\n    .collection('emergency_protocols')\r\n    .get()\r\n    .then(querySnapshot => {\r\n      querySnapshot.forEach(function (doc) {\r\n        protocols.push({key:protocols.length+1,Protocol: doc.id,content:doc.data().protocol_1});\r\n      })\r\n\r\n    })\r\n\r\n  onReceiveList(protocols);\r\n}\r\n\r\n\r\n"
    ],
    "mappings": ";AAAA,SAAQA,QAAR;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAIA,OAAO,SAAeC,OAAf,CAAuBC,aAAvB;EAAA;EAAA;IAAA;MAAA;QAAA;UAEDC,SAFC,GAEW,EAFX;UAAA;UAAA,iCAKgBL,QAAQ,CAACM,SAAT,GAClBC,UADkB,CACP,qBADO,EAElBC,GAFkB,GAGlBC,IAHkB,CAGb,UAAAC,aAAa,EAAI;YACrBA,aAAa,CAACC,OAAd,CAAsB,UAAUC,GAAV,EAAe;cACnCP,SAAS,CAACQ,IAAV,CAAe;gBAACC,GAAG,EAACT,SAAS,CAACU,MAAV,GAAiB,CAAtB;gBAAwBC,QAAQ,EAAEJ,GAAG,CAACK,EAAtC;gBAAyCC,OAAO,EAACN,GAAG,CAACO,IAAJ,GAAWC;cAA5D,CAAf;YACD,CAFD;UAID,CARkB,CALhB;;QAAA;UAKDC,QALC;UAeLjB,aAAa,CAACC,SAAD,CAAb;;QAfK;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"
  },
  "metadata": {},
  "sourceType": "module"
}
