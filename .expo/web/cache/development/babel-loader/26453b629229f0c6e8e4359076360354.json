{"ast":null,"code":"import React from \"react\";\nimport MicrosoftLogin from \"react-microsoft-login\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport \"../global\";\nimport { firebase } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function setUserVariables(data) {\n  authUser = data;\n  console.log(authUser);\n}\nexport function retrieveUser() {\n  firebase.database().ref(\"/users\").on(\"value\", function (snapshot) {\n    var key = snapshot.forEach(function (data) {\n      var check_email = snapshot.child(data.key + \"/email\").val();\n      var encrypted = snapshot.child(data.key + \"/password_digest\").val();\n\n      if (check_email === email) {\n        found = true;\n\n        if (encrypted === password) {\n          setUserVariables(data);\n          console.log(\"User authenticated sucessfully! Storing variables...\");\n        }\n      }\n    });\n\n    if (found === false) {\n      showAlert(\"Email Error\", \"user does not exist\");\n    }\n  });\n}\n;\nexport default (function (props) {\n  var navigation = useNavigation();\n\n  var authHandler = function authHandler(err, data) {\n    MSuser = data;\n    console.log(MSuser.account.userName);\n    authEmail = \"john_green_test@outlook.com\";\n    navigation.navigate(\"Dashboard\");\n    retrieveUser();\n  };\n\n  return _jsx(MicrosoftLogin, {\n    clientId: \"2601b63e-4012-441c-a18d-d6d8e4cd6a29\",\n    authCallback: authHandler\n  });\n});","map":{"version":3,"names":["React","MicrosoftLogin","useNavigation","firebase","setUserVariables","data","authUser","console","log","retrieveUser","database","ref","on","snapshot","key","forEach","check_email","child","val","encrypted","email","found","password","showAlert","props","navigation","authHandler","err","MSuser","account","userName","authEmail","navigate"],"sources":["C:/Users/nokno/OneDrive/Documents/GitHub/DFMPC-Student-Placement-System/Screens/LoginMicrosoft.js"],"sourcesContent":["import React from \"react\";\r\nimport MicrosoftLogin from \"react-microsoft-login\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { Button } from \"react-native-web\";\r\nimport \"../global\";\r\nimport { firebase } from \"../firebase\";\r\n\r\nexport function setUserVariables(data) {\r\n  // store information about the user who is currently logged in\r\n  authUser = data;\r\n  console.log(authUser);\r\n  // authUserID = data.child(\"id\").val();\r\n  // //authStudentNumber= authUser.child(\"\")user_FirstName\r\n\r\n  // authName = authUser.child(\"user_FirstName\").val();\r\n  // authLastName = authUser.child(\"user_LastName\").val();\r\n  // authUserProfilePic = authUser.child(\"user_profile_photo/\").val();\r\n  // authUserRef = firebase.database().ref(\"/users\") + \"/\" + authUserID + \"/\";\r\n  // console.log(\"User ID: \" + authUserID + \" authenticated.\");\r\n  \r\n}\r\n\r\nexport function retrieveUser() {\r\n  firebase\r\n    .database()\r\n    .ref(\"/users\")\r\n    .on(\"value\", (snapshot) => {\r\n      const key = snapshot.forEach(function (data) {\r\n        const check_email = snapshot.child(data.key + \"/email\").val();\r\n\r\n        const encrypted = snapshot.child(data.key + \"/password_digest\").val();\r\n        if (check_email === email) {\r\n          // compare entered email with current email on the snapshot\r\n\r\n          found = true; // sets found to true when we have found a matching email int the database\r\n\r\n          if (encrypted === password) {\r\n            // compares entered password to the password for the corresponding user in the database\r\n            setUserVariables(data); // so that we can keep track of who is logged in currenctly\r\n            console.log(\r\n              \"User authenticated sucessfully! Storing variables...\"\r\n            );\r\n\r\n          } \r\n        }\r\n      });\r\n      if (found === false) {\r\n        showAlert(\"Email Error\", \"user does not exist\");\r\n      }\r\n    });\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n  const navigation = useNavigation(); //navigation between screens\r\n\r\n  const authHandler = (err, data) => {\r\n    //console.log(err, data);\r\n    MSuser = data;\r\n    console.log(MSuser.account.userName);\r\n    authEmail = \"john_green_test@outlook.com\";\r\n    navigation.navigate(\"Dashboard\");\r\n    retrieveUser();\r\n  };\r\n  return (\r\n    <MicrosoftLogin clientId={\"2601b63e-4012-441c-a18d-d6d8e4cd6a29\"} authCallback={authHandler} />\r\n  );\r\n};"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA;AACA,SAASC,QAAT;;AAEA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;EAErCC,QAAQ,GAAGD,IAAX;EACAE,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAUD;AAED,OAAO,SAASG,YAAT,GAAwB;EAC7BN,QAAQ,CACLO,QADH,GAEGC,GAFH,CAEO,QAFP,EAGGC,EAHH,CAGM,OAHN,EAGe,UAACC,QAAD,EAAc;IACzB,IAAMC,GAAG,GAAGD,QAAQ,CAACE,OAAT,CAAiB,UAAUV,IAAV,EAAgB;MAC3C,IAAMW,WAAW,GAAGH,QAAQ,CAACI,KAAT,CAAeZ,IAAI,CAACS,GAAL,GAAW,QAA1B,EAAoCI,GAApC,EAApB;MAEA,IAAMC,SAAS,GAAGN,QAAQ,CAACI,KAAT,CAAeZ,IAAI,CAACS,GAAL,GAAW,kBAA1B,EAA8CI,GAA9C,EAAlB;;MACA,IAAIF,WAAW,KAAKI,KAApB,EAA2B;QAGzBC,KAAK,GAAG,IAAR;;QAEA,IAAIF,SAAS,KAAKG,QAAlB,EAA4B;UAE1BlB,gBAAgB,CAACC,IAAD,CAAhB;UACAE,OAAO,CAACC,GAAR,CACE,sDADF;QAID;MACF;IACF,CAlBW,CAAZ;;IAmBA,IAAIa,KAAK,KAAK,KAAd,EAAqB;MACnBE,SAAS,CAAC,aAAD,EAAgB,qBAAhB,CAAT;IACD;EACF,CA1BH;AA2BD;AAAA;AAID,gBAAe,UAACC,KAAD,EAAW;EACxB,IAAMC,UAAU,GAAGvB,aAAa,EAAhC;;EAEA,IAAMwB,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMtB,IAAN,EAAe;IAEjCuB,MAAM,GAAGvB,IAAT;IACAE,OAAO,CAACC,GAAR,CAAYoB,MAAM,CAACC,OAAP,CAAeC,QAA3B;IACAC,SAAS,GAAG,6BAAZ;IACAN,UAAU,CAACO,QAAX,CAAoB,WAApB;IACAvB,YAAY;EACb,CAPD;;EAQA,OACE,KAAC,cAAD;IAAgB,QAAQ,EAAE,sCAA1B;IAAkE,YAAY,EAAEiB;EAAhF,EADF;AAGD,CAdD"},"metadata":{},"sourceType":"module"}