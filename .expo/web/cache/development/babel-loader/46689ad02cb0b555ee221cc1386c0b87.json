{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport XDate from 'xdate';\nimport InfiniteList from \"../../infinite-list\";\nimport Week from \"../week\";\nimport WeekDaysNames from \"../../commons/WeekDaysNames\";\nimport CalendarContext from \"../../expandableCalendar/Context\";\nimport styleConstructor from \"../style\";\nimport { toMarkingFormat } from \"../../interface\";\nimport { extractComponentProps } from \"../../componentUpdater\";\nimport constants from \"../../commons/constants\";\nimport { UpdateSources } from \"../commons\";\nimport { sameWeek } from \"../../dateutils\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NUMBER_OF_PAGES = 50;\n\nvar WeekCalendar = function WeekCalendar(props) {\n  var current = props.current,\n      _props$firstDay = props.firstDay,\n      firstDay = _props$firstDay === void 0 ? 0 : _props$firstDay,\n      markedDates = props.markedDates,\n      _props$allowShadow = props.allowShadow,\n      allowShadow = _props$allowShadow === void 0 ? true : _props$allowShadow,\n      hideDayNames = props.hideDayNames,\n      theme = props.theme,\n      calendarWidth = props.calendarWidth,\n      testID = props.testID;\n  var context = useContext(CalendarContext);\n  var date = context.date,\n      updateSource = context.updateSource;\n  var style = useRef(styleConstructor(theme));\n  var list = useRef();\n\n  var _useState = useState(getDatesArray(current || date, firstDay, NUMBER_OF_PAGES)),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var extraData = {\n    current: current,\n    date: context.date,\n    firstDay: firstDay\n  };\n  var containerWidth = calendarWidth || constants.screenWidth;\n  var weekStyle = useMemo(function () {\n    return [{\n      width: containerWidth\n    }, props.style];\n  }, [containerWidth, props.style]);\n  useEffect(function () {\n    if (updateSource !== UpdateSources.WEEK_SCROLL) {\n      var _list$current;\n\n      var pageIndex = items.findIndex(function (item) {\n        return sameWeek(item, date, firstDay);\n      });\n      (_list$current = list.current) == null ? void 0 : _list$current.scrollToOffset == null ? void 0 : _list$current.scrollToOffset(pageIndex * containerWidth, 0, false);\n    }\n  }, [date]);\n  var onDayPress = useCallback(function (dateData) {\n    context.setDate == null ? void 0 : context.setDate(dateData.dateString, UpdateSources.DAY_PRESS);\n    props.onDayPress == null ? void 0 : props.onDayPress(dateData);\n  }, [props.onDayPress]);\n  var onPageChange = useCallback(function (pageIndex, _prevPage, _ref) {\n    var scrolledByUser = _ref.scrolledByUser;\n\n    if (scrolledByUser) {\n      context == null ? void 0 : context.setDate(items[pageIndex], UpdateSources.WEEK_SCROLL);\n    }\n  }, [items]);\n  var reloadPages = useCallback(function (pageIndex) {\n    var date = items[pageIndex];\n    setItems(getDatesArray(date, firstDay, NUMBER_OF_PAGES));\n  }, [items]);\n  var renderItem = useCallback(function (_type, item) {\n    var _extractComponentProp = extractComponentProps(Week, props),\n        others = _extends({}, _extractComponentProp);\n\n    var isSameWeek = sameWeek(item, date, firstDay);\n    return _createElement(Week, _objectSpread(_objectSpread({}, others), {}, {\n      key: item,\n      current: isSameWeek ? date : item,\n      firstDay: firstDay,\n      style: weekStyle,\n      markedDates: markedDates,\n      onDayPress: onDayPress,\n      context: context\n    }));\n  }, [date, markedDates]);\n  return _jsxs(View, {\n    testID: testID,\n    style: [allowShadow && style.current.containerShadow, !hideDayNames && style.current.containerWrapper],\n    children: [!hideDayNames && _jsx(View, {\n      style: [style.current.week, style.current.weekCalendar],\n      children: _jsx(WeekDaysNames, {\n        firstDay: firstDay,\n        style: style.current.dayHeader\n      })\n    }), _jsx(View, {\n      children: _jsx(InfiniteList, {\n        ref: list,\n        data: items,\n        renderItem: renderItem,\n        reloadPages: reloadPages,\n        onReachNearEdgeThreshold: Math.round(NUMBER_OF_PAGES * 0.4),\n        extendedState: extraData,\n        style: style.current.container,\n        initialPageIndex: NUMBER_OF_PAGES,\n        pageHeight: 48,\n        pageWidth: containerWidth,\n        onPageChange: onPageChange,\n        scrollViewProps: {\n          showsHorizontalScrollIndicator: false\n        }\n      }, \"week-list\")\n    })]\n  });\n};\n\nexport default WeekCalendar;\n\nfunction getDate(date, firstDay, weekIndex) {\n  var d = new XDate(date);\n  var dayOfTheWeek = d.getDay();\n\n  if (dayOfTheWeek < firstDay && firstDay > 0) {\n    dayOfTheWeek = 7 + dayOfTheWeek;\n  }\n\n  var dd = weekIndex === 0 ? d : d.addDays(firstDay - dayOfTheWeek);\n  var newDate = dd.addWeeks(weekIndex);\n  return toMarkingFormat(newDate);\n}\n\nfunction getDatesArray(date, firstDay) {\n  var numberOfPages = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : NUMBER_OF_PAGES;\n  var array = [];\n\n  for (var index = -numberOfPages; index <= numberOfPages; index++) {\n    var d = getDate(date, firstDay, index);\n    array.push(d);\n  }\n\n  return array;\n}","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/expandableCalendar/WeekCalendar/new.js"],"names":["React","useCallback","useContext","useEffect","useMemo","useRef","useState","XDate","InfiniteList","Week","WeekDaysNames","CalendarContext","styleConstructor","toMarkingFormat","extractComponentProps","constants","UpdateSources","sameWeek","NUMBER_OF_PAGES","WeekCalendar","props","current","firstDay","markedDates","allowShadow","hideDayNames","theme","calendarWidth","testID","context","date","updateSource","style","list","getDatesArray","items","setItems","extraData","containerWidth","screenWidth","weekStyle","width","WEEK_SCROLL","pageIndex","findIndex","item","scrollToOffset","onDayPress","dateData","setDate","dateString","DAY_PRESS","onPageChange","_prevPage","scrolledByUser","reloadPages","renderItem","_type","others","isSameWeek","containerShadow","containerWrapper","week","weekCalendar","dayHeader","Math","round","container","showsHorizontalScrollIndicator","getDate","weekIndex","d","dayOfTheWeek","getDay","dd","addDays","newDate","addWeeks","numberOfPages","array","index","push"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { View } from 'react-native';\nimport XDate from 'xdate';\nimport InfiniteList from '../../infinite-list';\nimport Week from '../week';\nimport WeekDaysNames from '../../commons/WeekDaysNames';\nimport CalendarContext from '../../expandableCalendar/Context';\nimport styleConstructor from '../style';\nimport { toMarkingFormat } from '../../interface';\nimport { extractComponentProps } from '../../componentUpdater';\nimport constants from '../../commons/constants';\nimport { UpdateSources } from '../commons';\nimport { sameWeek } from '../../dateutils';\nconst NUMBER_OF_PAGES = 50;\nconst WeekCalendar = (props) => {\n    const { current, firstDay = 0, markedDates, allowShadow = true, hideDayNames, theme, calendarWidth, testID } = props;\n    const context = useContext(CalendarContext);\n    const { date, updateSource } = context;\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const [items, setItems] = useState(getDatesArray(current || date, firstDay, NUMBER_OF_PAGES));\n    const extraData = {\n        current,\n        date: context.date,\n        firstDay\n    };\n    const containerWidth = calendarWidth || constants.screenWidth;\n    const weekStyle = useMemo(() => {\n        return [{ width: containerWidth }, props.style];\n    }, [containerWidth, props.style]);\n    useEffect(() => {\n        if (updateSource !== UpdateSources.WEEK_SCROLL) {\n            const pageIndex = items.findIndex(item => sameWeek(item, date, firstDay));\n            // @ts-expect-error\n            list.current?.scrollToOffset?.(pageIndex * containerWidth, 0, false);\n        }\n    }, [date]);\n    const onDayPress = useCallback((dateData) => {\n        context.setDate?.(dateData.dateString, UpdateSources.DAY_PRESS);\n        props.onDayPress?.(dateData);\n    }, [props.onDayPress]);\n    const onPageChange = useCallback((pageIndex, _prevPage, { scrolledByUser }) => {\n        if (scrolledByUser) {\n            context?.setDate(items[pageIndex], UpdateSources.WEEK_SCROLL);\n        }\n    }, [items]);\n    const reloadPages = useCallback(pageIndex => {\n        const date = items[pageIndex];\n        setItems(getDatesArray(date, firstDay, NUMBER_OF_PAGES));\n    }, [items]);\n    const renderItem = useCallback((_type, item) => {\n        const { /* style,  */ ...others } = extractComponentProps(Week, props);\n        const isSameWeek = sameWeek(item, date, firstDay);\n        return (<Week {...others} key={item} current={isSameWeek ? date : item} firstDay={firstDay} style={weekStyle} markedDates={markedDates} onDayPress={onDayPress} \n        // context={currentContext}\n        context={context}/>);\n    }, [date, markedDates]);\n    return (<View testID={testID} style={[allowShadow && style.current.containerShadow, !hideDayNames && style.current.containerWrapper]}>\n      {!hideDayNames && (<View style={[style.current.week, style.current.weekCalendar]}>\n          <WeekDaysNames firstDay={firstDay} style={style.current.dayHeader}/>\n        </View>)}\n      <View>\n        <InfiniteList key=\"week-list\" ref={list} data={items} renderItem={renderItem} reloadPages={reloadPages} onReachNearEdgeThreshold={Math.round(NUMBER_OF_PAGES * 0.4)} extendedState={extraData} style={style.current.container} initialPageIndex={NUMBER_OF_PAGES} pageHeight={48} pageWidth={containerWidth} onPageChange={onPageChange} scrollViewProps={{\n            showsHorizontalScrollIndicator: false\n        }}/>\n      </View>\n    </View>);\n};\nexport default WeekCalendar;\n// function getDate({current, context, firstDay = 0}: WeekCalendarProps, weekIndex: number) {\nfunction getDate(date, firstDay, weekIndex) {\n    // const d = new XDate(current || context.date);\n    const d = new XDate(date);\n    // get the first day of the week as date (for the on scroll mark)\n    let dayOfTheWeek = d.getDay();\n    if (dayOfTheWeek < firstDay && firstDay > 0) {\n        dayOfTheWeek = 7 + dayOfTheWeek;\n    }\n    // leave the current date in the visible week as is\n    const dd = weekIndex === 0 ? d : d.addDays(firstDay - dayOfTheWeek);\n    const newDate = dd.addWeeks(weekIndex);\n    return toMarkingFormat(newDate);\n}\n// function getDatesArray(args: WeekCalendarProps, numberOfPages = NUMBER_OF_PAGES) => {\nfunction getDatesArray(date, firstDay, numberOfPages = NUMBER_OF_PAGES) {\n    const array = [];\n    for (let index = -numberOfPages; index <= numberOfPages; index++) {\n        const d = getDate(date, firstDay, index);\n        array.push(d);\n    }\n    return array;\n}\n"]},"metadata":{},"sourceType":"module"}