{"ast":null,"code":"export var handlePress = function handlePress(_ref) {\n  var onPress = _ref.onPress,\n    value = _ref.value,\n    onValueChange = _ref.onValueChange;\n  if (onPress && onValueChange) {\n    console.warn(\"onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead\");\n  }\n  onValueChange ? onValueChange(value) : onPress === null || onPress === void 0 ? void 0 : onPress();\n};\nexport var isChecked = function isChecked(_ref2) {\n  var value = _ref2.value,\n    status = _ref2.status,\n    contextValue = _ref2.contextValue;\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};","map":{"version":3,"mappings":"AAAA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAW,CAAGC,MAQrB;EAAA,IAPJC,OAD0B,GAQtBD,KAPJC,OAD0B;IAE1BC,KAF0B,GAQtBF,KANJE,KAF0B;IAG1BC,gBAKIH,KALJG;EAMA,IAAIF,OAAO,IAAIE,aAAf,EAA8B;IAC5BC,OAAO,CAACC,IAAR;EAGD;EAEDF,aAAa,GAAGA,aAAa,CAACD,KAAD,CAAhB,GAA0BD,OAA1B,aAA0BA,OAA1B,uBAA0BA,OAAO,EAA9C;AACD,CAhBM;AAkBP,OAAO,IAAMK,SAAS,GAAG,SAAZA,SAAS,CAAGC,OAQnB;EAAA,IAPJL,KADwB,GAQpBK,MAPJL,KADwB;IAExBM,MAFwB,GAQpBD,MANJC,MAFwB;IAGxBC,eAKIF,MALJE;EAMA,IAAIA,YAAY,KAAKC,SAAjB,IAA8BD,YAAY,KAAK,IAAnD,EAAyD;IACvD,OAAOA,YAAY,KAAKP,KAAjB,GAAyB,SAAzB,GAAqC,WAA5C;EACD,CAFD,MAEO;IACL,OAAOM,MAAP;EACD;AACF,CAdM","names":["handlePress","_ref","onPress","value","onValueChange","console","warn","isChecked","_ref2","status","contextValue","undefined"],"sources":["utils.ts"],"sourcesContent":["export const handlePress = ({\n  onPress,\n  value,\n  onValueChange,\n}: {\n  onPress?: () => void;\n  value: string;\n  onValueChange?: (value: string) => void;\n}) => {\n  if (onPress && onValueChange) {\n    console.warn(\n      `onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead`\n    );\n  }\n\n  onValueChange ? onValueChange(value) : onPress?.();\n};\n\nexport const isChecked = ({\n  value,\n  status,\n  contextValue,\n}: {\n  value: string;\n  status?: 'checked' | 'unchecked';\n  contextValue?: string;\n}) => {\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}