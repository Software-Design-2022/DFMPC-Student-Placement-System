{
  "ast": null,
  "code": "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport throttle from 'lodash/throttle';\nimport XDate from 'xdate';\nimport Context from \"../expandableCalendar/Context\";\nimport { UpdateSources } from \"../expandableCalendar/commons\";\nimport { isToday } from \"../dateutils\";\nimport Timeline from \"../timeline/Timeline\";\nimport InfiniteList from \"../infinite-list\";\nimport useTimelinePages, { INITIAL_PAGE, NEAR_EDGE_THRESHOLD } from \"./useTimelinePages\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar TimelineList = function TimelineList(props) {\n  var timelineProps = props.timelineProps,\n      events = props.events,\n      renderItem = props.renderItem,\n      showNowIndicator = props.showNowIndicator,\n      scrollToFirst = props.scrollToFirst,\n      scrollToNow = props.scrollToNow,\n      initialTime = props.initialTime;\n\n  var _useContext = useContext(Context),\n      date = _useContext.date,\n      updateSource = _useContext.updateSource,\n      setDate = _useContext.setDate;\n\n  var listRef = useRef();\n  var prevDate = useRef(date);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      timelineOffset = _useState2[0],\n      setTimelineOffset = _useState2[1];\n\n  var _useTimelinePages = useTimelinePages({\n    date: date,\n    listRef: listRef\n  }),\n      pages = _useTimelinePages.pages,\n      pagesRef = _useTimelinePages.pagesRef,\n      resetPages = _useTimelinePages.resetPages,\n      resetPagesDebounce = _useTimelinePages.resetPagesDebounce,\n      scrollToPageDebounce = _useTimelinePages.scrollToPageDebounce,\n      shouldResetPages = _useTimelinePages.shouldResetPages,\n      isOutOfRange = _useTimelinePages.isOutOfRange;\n\n  useEffect(function () {\n    if (date !== prevDate.current) {\n      var datePageIndex = pagesRef.current.indexOf(date);\n\n      if (updateSource !== UpdateSources.LIST_DRAG) {\n        if (isOutOfRange(datePageIndex)) {\n          updateSource === UpdateSources.DAY_PRESS ? resetPages(date) : resetPagesDebounce(date);\n        } else {\n          scrollToPageDebounce(datePageIndex);\n        }\n      }\n\n      prevDate.current = date;\n    }\n  }, [date, updateSource]);\n  var onScroll = useCallback(function () {\n    if (shouldResetPages.current) {\n      resetPagesDebounce.cancel();\n    }\n  }, []);\n  var onMomentumScrollEnd = useCallback(function () {\n    if (shouldResetPages.current) {\n      resetPagesDebounce(prevDate.current);\n    }\n  }, []);\n  var onPageChange = useCallback(throttle(function (pageIndex) {\n    var newDate = pagesRef.current[pageIndex];\n\n    if (newDate !== prevDate.current) {\n      setDate(newDate, UpdateSources.LIST_DRAG);\n    }\n  }, 0), []);\n  var onReachNearEdge = useCallback(function () {\n    shouldResetPages.current = true;\n  }, []);\n  var onTimelineOffsetChange = useCallback(function (offset) {\n    setTimelineOffset(offset);\n  }, []);\n  var renderPage = useCallback(function (_type, item, index) {\n    var timelineEvent = events[item];\n    var isCurrent = prevDate.current === item;\n    var isInitialPage = index === INITIAL_PAGE;\n\n    var _isToday = isToday(new XDate(item));\n\n    var _timelineProps = _objectSpread(_objectSpread({}, timelineProps), {}, {\n      key: item,\n      date: item,\n      events: timelineEvent,\n      scrollToNow: _isToday && isInitialPage && scrollToNow,\n      initialTime: !_isToday && isInitialPage ? initialTime : undefined,\n      scrollToFirst: !_isToday && isInitialPage && scrollToFirst,\n      scrollOffset: timelineOffset,\n      onChangeOffset: onTimelineOffsetChange,\n      showNowIndicator: _isToday && showNowIndicator\n    });\n\n    if (renderItem) {\n      return renderItem(_timelineProps, {\n        item: item,\n        index: index,\n        isCurrent: isCurrent,\n        isInitialPage: isInitialPage,\n        isToday: _isToday\n      });\n    }\n\n    return _jsx(_Fragment, {\n      children: _jsx(Timeline, _objectSpread({}, _timelineProps))\n    });\n  }, [events, timelineOffset, showNowIndicator]);\n  return _jsx(InfiniteList, {\n    ref: listRef,\n    data: pages,\n    renderItem: renderPage,\n    onPageChange: onPageChange,\n    onReachNearEdge: onReachNearEdge,\n    onReachNearEdgeThreshold: NEAR_EDGE_THRESHOLD,\n    onScroll: onScroll,\n    extendedState: {\n      todayEvents: events[date],\n      pages: pages\n    },\n    initialPageIndex: INITIAL_PAGE,\n    scrollViewProps: {\n      onMomentumScrollEnd: onMomentumScrollEnd\n    }\n  });\n};\n\nexport default TimelineList;",
  "map": {
    "version": 3,
    "names": [
      "React",
      "useCallback",
      "useContext",
      "useEffect",
      "useRef",
      "useState",
      "throttle",
      "XDate",
      "Context",
      "UpdateSources",
      "isToday",
      "Timeline",
      "InfiniteList",
      "useTimelinePages",
      "INITIAL_PAGE",
      "NEAR_EDGE_THRESHOLD",
      "TimelineList",
      "props",
      "timelineProps",
      "events",
      "renderItem",
      "showNowIndicator",
      "scrollToFirst",
      "scrollToNow",
      "initialTime",
      "date",
      "updateSource",
      "setDate",
      "listRef",
      "prevDate",
      "timelineOffset",
      "setTimelineOffset",
      "pages",
      "pagesRef",
      "resetPages",
      "resetPagesDebounce",
      "scrollToPageDebounce",
      "shouldResetPages",
      "isOutOfRange",
      "current",
      "datePageIndex",
      "indexOf",
      "LIST_DRAG",
      "DAY_PRESS",
      "onScroll",
      "cancel",
      "onMomentumScrollEnd",
      "onPageChange",
      "pageIndex",
      "newDate",
      "onReachNearEdge",
      "onTimelineOffsetChange",
      "offset",
      "renderPage",
      "_type",
      "item",
      "index",
      "timelineEvent",
      "isCurrent",
      "isInitialPage",
      "_isToday",
      "_timelineProps",
      "key",
      "undefined",
      "scrollOffset",
      "onChangeOffset",
      "todayEvents"
    ],
    "sources": [
      "C:/Users/Peace/Desktop/YOS3/SEMESTER 1/Software Design III/2022/Software Design Project/SPS-Project/DFMPC-Student-Placement-System/project/node_modules/react-native-calendars/src/timeline-list/index.js"
    ],
    "sourcesContent": [
      "import React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\n// import {Text} from 'react-native';\nimport throttle from 'lodash/throttle';\nimport XDate from 'xdate';\nimport Context from '../expandableCalendar/Context';\nimport { UpdateSources } from '../expandableCalendar/commons';\nimport { isToday } from '../dateutils';\nimport Timeline from '../timeline/Timeline';\nimport InfiniteList from '../infinite-list';\nimport useTimelinePages, { INITIAL_PAGE, NEAR_EDGE_THRESHOLD } from './useTimelinePages';\nconst TimelineList = (props) => {\n    const { timelineProps, events, renderItem, showNowIndicator, scrollToFirst, scrollToNow, initialTime } = props;\n    const { date, updateSource, setDate } = useContext(Context);\n    const listRef = useRef();\n    const prevDate = useRef(date);\n    const [timelineOffset, setTimelineOffset] = useState();\n    const { pages, pagesRef, resetPages, resetPagesDebounce, scrollToPageDebounce, shouldResetPages, isOutOfRange } = useTimelinePages({ date, listRef });\n    useEffect(() => {\n        if (date !== prevDate.current) {\n            const datePageIndex = pagesRef.current.indexOf(date);\n            if (updateSource !== UpdateSources.LIST_DRAG) {\n                if (isOutOfRange(datePageIndex)) {\n                    updateSource === UpdateSources.DAY_PRESS ? resetPages(date) : resetPagesDebounce(date);\n                }\n                else {\n                    scrollToPageDebounce(datePageIndex);\n                }\n            }\n            prevDate.current = date;\n        }\n    }, [date, updateSource]);\n    const onScroll = useCallback(() => {\n        if (shouldResetPages.current) {\n            resetPagesDebounce.cancel();\n        }\n    }, []);\n    const onMomentumScrollEnd = useCallback(() => {\n        if (shouldResetPages.current) {\n            resetPagesDebounce(prevDate.current);\n        }\n    }, []);\n    const onPageChange = useCallback(throttle((pageIndex) => {\n        const newDate = pagesRef.current[pageIndex];\n        if (newDate !== prevDate.current) {\n            setDate(newDate, UpdateSources.LIST_DRAG);\n        }\n    }, 0), []);\n    const onReachNearEdge = useCallback(() => {\n        shouldResetPages.current = true;\n    }, []);\n    const onTimelineOffsetChange = useCallback(offset => {\n        setTimelineOffset(offset);\n    }, []);\n    const renderPage = useCallback((_type, item, index) => {\n        const timelineEvent = events[item];\n        const isCurrent = prevDate.current === item;\n        const isInitialPage = index === INITIAL_PAGE;\n        const _isToday = isToday(new XDate(item));\n        const _timelineProps = {\n            ...timelineProps,\n            key: item,\n            date: item,\n            events: timelineEvent,\n            scrollToNow: _isToday && isInitialPage && scrollToNow,\n            initialTime: !_isToday && isInitialPage ? initialTime : undefined,\n            scrollToFirst: !_isToday && isInitialPage && scrollToFirst,\n            scrollOffset: timelineOffset,\n            onChangeOffset: onTimelineOffsetChange,\n            showNowIndicator: _isToday && showNowIndicator\n        };\n        if (renderItem) {\n            return renderItem(_timelineProps, { item, index, isCurrent, isInitialPage, isToday: _isToday });\n        }\n        return (<>\n          <Timeline {..._timelineProps}/>\n          {/* NOTE: Keeping this for easy debugging */}\n          {/* <Text style={{position: 'absolute'}}>{item}</Text> */}\n        </>);\n    }, [events, timelineOffset, showNowIndicator]);\n    return (<InfiniteList ref={listRef} data={pages} renderItem={renderPage} onPageChange={onPageChange} onReachNearEdge={onReachNearEdge} onReachNearEdgeThreshold={NEAR_EDGE_THRESHOLD} onScroll={onScroll} extendedState={{ todayEvents: events[date], pages }} initialPageIndex={INITIAL_PAGE} scrollViewProps={{\n            onMomentumScrollEnd\n        }}/>);\n};\nexport default TimelineList;\n"
    ],
    "mappings": "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"
  },
  "metadata": {},
  "sourceType": "module"
}
