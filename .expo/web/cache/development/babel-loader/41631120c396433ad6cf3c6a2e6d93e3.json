{"ast":null,"code":"import * as React from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport default function useIsKeyboardShown(_ref) {\n  var onShow = _ref.onShow,\n    onHide = _ref.onHide;\n  React.useEffect(function () {\n    var willShowSubscription;\n    var willHideSubscription;\n    var didShowSubscription;\n    var didHideSubscription;\n    if (Platform.OS === 'ios') {\n      willShowSubscription = Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = Keyboard.addListener('keyboardDidHide', onHide);\n    }\n    return function () {\n      if (Platform.OS === 'ios') {\n        var _willShowSubscription, _willHideSubscription;\n        if ((_willShowSubscription = willShowSubscription) !== null && _willShowSubscription !== void 0 && _willShowSubscription.remove) {\n          willShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n        if ((_willHideSubscription = willHideSubscription) !== null && _willHideSubscription !== void 0 && _willHideSubscription.remove) {\n          willHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        var _didShowSubscription, _didHideSubscription;\n        if ((_didShowSubscription = didShowSubscription) !== null && _didShowSubscription !== void 0 && _didShowSubscription.remove) {\n          didShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n        if ((_didHideSubscription = didHideSubscription) !== null && _didHideSubscription !== void 0 && _didHideSubscription.remove) {\n          didHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAOA,eAAe,SAASC,kBAAT,OAAuD;EAAA,IAAzBC,MAAF,GAA2BC,KAAzBD,MAAF;IAAUE,SAAiBD,KAAjBC;EACnDJ,KAAK,CAACK,SAAN,CAAgB,YAAM;IACpB,IAAIC,oBAAJ;IACA,IAAIC,oBAAJ;IACA,IAAIC,mBAAJ;IACA,IAAIC,mBAAJ;IAEA,IAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;MACzBL,oBAAoB,GAAGM,QAAQ,CAACC,WAAT,CAAqB,kBAArB,EAAyCX,MAAzC,CAAvB;MACAK,oBAAoB,GAAGK,QAAQ,CAACC,WAAT,CAAqB,kBAArB,EAAyCT,MAAzC,CAAvB;IACD,CAHD,MAGO;MACLI,mBAAmB,GAAGI,QAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCX,MAAxC,CAAtB;MACAO,mBAAmB,GAAGG,QAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCT,MAAxC,CAAtB;IACD;IAED,OAAO,YAAM;MACX,IAAIM,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;QAAA;QACzB,6BAAIL,oBAAJ,kDAAIQ,sBAAsBC,MAA1B,EAAkC;UAChCT,oBAAoB,CAACS,MAArB;QACD,CAFD,MAEO;UACLH,QAAQ,CAACI,cAAT,CAAwB,kBAAxB,EAA4Cd,MAA5C;QACD;QAED,6BAAIK,oBAAJ,kDAAIU,sBAAsBF,MAA1B,EAAkC;UAChCR,oBAAoB,CAACQ,MAArB;QACD,CAFD,MAEO;UACLH,QAAQ,CAACI,cAAT,CAAwB,kBAAxB,EAA4CZ,MAA5C;QACD;MACF,CAZD,MAYO;QAAA;QACL,4BAAII,mBAAJ,iDAAIU,qBAAqBH,MAAzB,EAAiC;UAC/BP,mBAAmB,CAACO,MAApB;QACD,CAFD,MAEO;UACLH,QAAQ,CAACI,cAAT,CAAwB,iBAAxB,EAA2Cd,MAA3C;QACD;QAED,4BAAIO,mBAAJ,iDAAIU,qBAAqBJ,MAAzB,EAAiC;UAC/BN,mBAAmB,CAACM,MAApB;QACD,CAFD,MAEO;UACLH,QAAQ,CAACI,cAAT,CAAwB,iBAAxB,EAA2CZ,MAA3C;QACD;MACF;IACF,CA1BD;EA2BD,CAzCD,EAyCG,CAACA,MAAD,EAASF,MAAT,CAzCH;AA0CD","names":["React","useIsKeyboardShown","onShow","_ref","onHide","useEffect","willShowSubscription","willHideSubscription","didShowSubscription","didHideSubscription","Platform","OS","Keyboard","addListener","_willShowSubscription","remove","removeListener","_willHideSubscription","_didShowSubscription","_didHideSubscription"],"sources":["useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, NativeEventSubscription, Platform } from 'react-native';\n\ntype Props = {\n  onShow: () => void;\n  onHide: () => void;\n};\nexport default function useIsKeyboardShown({ onShow, onHide }: Props) {\n  React.useEffect(() => {\n    let willShowSubscription: NativeEventSubscription | undefined;\n    let willHideSubscription: NativeEventSubscription | undefined;\n    let didShowSubscription: NativeEventSubscription | undefined;\n    let didHideSubscription: NativeEventSubscription | undefined;\n\n    if (Platform.OS === 'ios') {\n      willShowSubscription = Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = Keyboard.addListener('keyboardDidHide', onHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        if (willShowSubscription?.remove) {\n          willShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n\n        if (willHideSubscription?.remove) {\n          willHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        if (didShowSubscription?.remove) {\n          didShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n\n        if (didHideSubscription?.remove) {\n          didHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}\n"]},"metadata":{},"sourceType":"module"}