{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { firebase } from \"../firebase\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport function getList(onReceiveList) {\n  var protocols, snapshot;\n  return _regeneratorRuntime.async(function getList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          protocols = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"emergency_protocols\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              protocols.push({\n                key: protocols.length + 1,\n                Protocol: doc.id,\n                content: doc.data().protocol_1.split(\"~\").join(\"\\n\")\n              });\n            });\n          }));\n\n        case 3:\n          snapshot = _context.sent;\n          onReceiveList(protocols);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/Screens/ListApi.js"],"names":["firebase","v4","uuidv4","getList","onReceiveList","protocols","firestore","collection","get","then","querySnapshot","forEach","doc","push","key","length","Protocol","id","content","data","protocol_1","split","join","snapshot"],"mappings":";AAAA,SAASA,QAAT;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAO,SAAeC,OAAf,CAAuBC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDC,UAAAA,SAFC,GAEW,EAFX;AAAA;AAAA,2CAIgBL,QAAQ,CAC1BM,SADkB,GAElBC,UAFkB,CAEP,qBAFO,EAGlBC,GAHkB,GAIlBC,IAJkB,CAIb,UAACC,aAAD,EAAmB;AAEvBA,YAAAA,aAAa,CAACC,OAAd,CAAsB,UAAUC,GAAV,EAAe;AAEnCP,cAAAA,SAAS,CAACQ,IAAV,CAAe;AAEbC,gBAAAA,GAAG,EAAET,SAAS,CAACU,MAAV,GAAmB,CAFX;AAGbC,gBAAAA,QAAQ,EAAEJ,GAAG,CAACK,EAHD;AAIbC,gBAAAA,OAAO,EAAEN,GAAG,CAACO,IAAJ,GAAWC,UAAX,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiCC,IAAjC,CAAsC,IAAtC;AAJI,eAAf;AAMD,aARD;AASD,WAfkB,CAJhB;;AAAA;AAIDC,UAAAA,QAJC;AAqBLnB,UAAAA,aAAa,CAACC,SAAD,CAAb;;AArBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { firebase } from \"../firebase\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\"; // Generate random UUID\r\n\r\nexport async function getList(onReceiveList) {\r\n  // Get list of all items in the database\r\n  var protocols = []; // Create empty array to store all items in database\r\n\r\n  var snapshot = await firebase // Get all items in database\r\n    .firestore()\r\n    .collection(\"emergency_protocols\") // Get collection of protocols\r\n    .get() // Get all items in collection\r\n    .then((querySnapshot) => {\r\n      // For each item in collection\r\n      querySnapshot.forEach(function (doc) {\r\n        // For each item in collection\r\n        protocols.push({\r\n          // Add item to array\r\n          key: protocols.length + 1, // Add key to item\r\n          Protocol: doc.id, // Add item to array\r\n          content: doc.data().protocol_1.split(\"~\").join(\"\\n\"), // Format item using split and join\r\n        });\r\n      });\r\n    });\r\n\r\n  onReceiveList(protocols); // Send array to function that called this function\r\n}\r\n"]},"metadata":{},"sourceType":"module"}