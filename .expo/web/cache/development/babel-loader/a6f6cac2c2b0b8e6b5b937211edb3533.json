{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NotificationScheduler from \"./NotificationScheduler\";\nexport default function cancelAllScheduledNotificationsAsync() {\n  return _regeneratorRuntime.async(function cancelAllScheduledNotificationsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (NotificationScheduler.cancelAllScheduledNotificationsAsync) {\n            _context.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Notifications', 'cancelAllScheduledNotificationsAsync');\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(NotificationScheduler.cancelAllScheduledNotificationsAsync());\n\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../src/cancelAllScheduledNotificationsAsync.ts"],"names":[],"mappings":";AAAA,SAAS,mBAAT,QAAoC,mBAApC;AAEA,OAAO,qBAAP;AAEA,eAAe,SAAe,oCAAf;EAAA;IAAA;MAAA;QAAA;UAAA,IACR,qBAAqB,CAAC,oCADd;YAAA;YAAA;UAAA;;UAAA,MAEL,IAAI,mBAAJ,CAAwB,eAAxB,EAAyC,sCAAzC,CAFK;;QAAA;UAAA;UAAA,iCAKA,qBAAqB,CAAC,oCAAtB,EALA;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\n\nexport default async function cancelAllScheduledNotificationsAsync(): Promise<void> {\n  if (!NotificationScheduler.cancelAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'cancelAllScheduledNotificationsAsync');\n  }\n\n  return await NotificationScheduler.cancelAllScheduledNotificationsAsync();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}