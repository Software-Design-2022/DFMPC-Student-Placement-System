{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"numeric\", \"children\", \"onPress\", \"sortDirection\", \"theme\", \"textStyle\", \"style\", \"numberOfLines\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableTitle = function DataTableTitle(_ref) {\n  var numeric = _ref.numeric,\n    children = _ref.children,\n    onPress = _ref.onPress,\n    sortDirection = _ref.sortDirection,\n    theme = _ref.theme,\n    textStyle = _ref.textStyle,\n    style = _ref.style,\n    _ref$numberOfLines = _ref.numberOfLines,\n    numberOfLines = _ref$numberOfLines === void 0 ? 1 : _ref$numberOfLines,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(sortDirection === 'ascending' ? 0 : 1)),\n    spinAnim = _React$useRef.current;\n  React.useEffect(function () {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n  }, [sortDirection, spinAnim]);\n  var textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n  var spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg']\n  });\n  var icon = sortDirection ? React.createElement(Animated.View, {\n    style: [styles.icon, {\n      transform: [{\n        rotate: spin\n      }]\n    }]\n  }, React.createElement(MaterialCommunityIcon, {\n    name: \"arrow-up\",\n    size: 16,\n    color: theme.colors.text,\n    direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n  })) : null;\n  return React.createElement(TouchableWithoutFeedback, _extends({\n    disabled: !onPress,\n    onPress: onPress\n  }, rest), React.createElement(View, {\n    style: [styles.container, numeric && styles.right, style]\n  }, icon, React.createElement(Text, {\n    style: [styles.cell,\n    {\n      maxHeight: 24 * numberOfLines\n    },\n    numberOfLines > 1 ? numeric ? I18nManager.isRTL ? styles.leftText : styles.rightText : styles.centerText : {}, sortDirection ? styles.sorted : {\n      color: textColor\n    }, textStyle],\n    numberOfLines: numberOfLines\n  }, children)));\n};\nDataTableTitle.displayName = 'DataTable.Title';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12\n  },\n  rightText: {\n    textAlign: 'right'\n  },\n  leftText: {\n    textAlign: 'left'\n  },\n  centerText: {\n    textAlign: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  cell: {\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center'\n  },\n  sorted: {\n    marginLeft: 8\n  },\n  icon: {\n    height: 24,\n    justifyContent: 'center'\n  }\n});\nexport default withTheme(DataTableTitle);\n\nexport { DataTableTitle };","map":{"version":3,"mappings":"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","names":["React","color","MaterialCommunityIcon","Text","withTheme","DataTableTitle","_ref","numeric","children","onPress","sortDirection","theme","textStyle","style","numberOfLines","rest","useRef","Animated","Value","spinAnim","current","useEffect","timing","toValue","duration","useNativeDriver","start","textColor","colors","text","alpha","rgb","string","spin","interpolate","inputRange","outputRange","icon","View","styles","transform","rotate","name","size","direction","I18nManager","isRTL","TouchableWithoutFeedback","disabled","container","right","cell","maxHeight","leftText","rightText","centerText","sorted","displayName","StyleSheet","create","flex","flexDirection","alignContent","paddingVertical","textAlign","justifyContent","lineHeight","fontSize","fontWeight","alignItems","marginLeft","height"],"sources":["DataTableTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<\n  typeof TouchableWithoutFeedback\n> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableTitle`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  theme,\n  textStyle,\n  style,\n  numberOfLines = 1,\n  ...rest\n}: Props) => {\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={theme.colors.text}\n        direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n      <View style={[styles.container, numeric && styles.right, style]}>\n        {icon}\n\n        <Text\n          style={[\n            styles.cell,\n            // height must scale with numberOfLines\n            { maxHeight: 24 * numberOfLines },\n            // if numberOfLines causes wrap, center is lost. Align directly, sensitive to numeric and RTL\n            numberOfLines > 1\n              ? numeric\n                ? I18nManager.isRTL\n                  ? styles.leftText\n                  : styles.rightText\n                : styles.centerText\n              : {},\n            sortDirection ? styles.sorted : { color: textColor },\n            textStyle,\n          ]}\n          numberOfLines={numberOfLines}\n        >\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  rightText: {\n    textAlign: 'right',\n  },\n\n  leftText: {\n    textAlign: 'left',\n  },\n\n  centerText: {\n    textAlign: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]},"metadata":{},"sourceType":"module"}