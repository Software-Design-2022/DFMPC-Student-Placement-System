{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"theme\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\n\nvar ListSubheader = function ListSubheader(_ref) {\n  var style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var colors = theme.colors,\n    fonts = theme.fonts;\n  var font = fonts.medium;\n  var textColor = color(colors.text).alpha(0.54).rgb().string();\n  return React.createElement(Text, _extends({\n    numberOfLines: 1\n  }, rest, {\n    style: [styles.container, _objectSpread({\n      color: textColor\n    }, font), style]\n  }));\n};\nListSubheader.displayName = 'List.Subheader';\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13\n  }\n});\nexport default withTheme(ListSubheader);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP;AACA,SAASC,SAAT;;AA0BA,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAGC,MAAsC;EAAA,IAAnCC,KAAF,GAAqCD,KAAnCC,KAAF;IAASC,KAAT,GAAqCF,KAA5BE,KAAT;IAAmBC,gCAAkBH;EAC1D,IAAQI,MAAF,GAAoBF,KAA1B,CAAQE,MAAF;IAAUC,QAAUH,KAA1B,CAAgBG;EAChB,IAAMC,IAAI,GAAGD,KAAK,CAACE,MAAnB;EACA,IAAMC,SAAS,GAAGZ,KAAK,CAACQ,MAAM,CAACK,IAAR,CAAL,CAAmBC,KAAnB,CAAyB,IAAzB,EAA+BC,GAA/B,GAAqCC,MAArC,EAAlB;EAEA,OACEjB,oBAACE,IAAD;IACEgB,aAAa,EAAE;EADjB,GAEMV,IAFN;IAGEF,KAAK,EAAE,CAACa,MAAM,CAACC,SAAR;MAAqBnB,KAAK,EAAEY;IAAT,GAAuBF,OAAQL,KAAlD;EAHT,GADF;AAOD,CAZD;AAcAF,aAAa,CAACiB,WAAd,GAA4B,gBAA5B;AAEA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,iBAAiB,EAAE,EADV;IAETC,eAAe,EAAE;EAFR;AADoB,CAAlB,CAAf;AAOA,eAAetB,SAAS,CAACC,aAAD,CAAxB","names":["React","color","Text","withTheme","ListSubheader","_ref","style","theme","rest","colors","fonts","font","medium","textColor","text","alpha","rgb","string","numberOfLines","styles","container","displayName","StyleSheet","create","paddingHorizontal","paddingVertical"],"sources":["ListSubheader.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\nconst ListSubheader = ({ style, theme, ...rest }: Props) => {\n  const { colors, fonts } = theme;\n  const font = fonts.medium;\n  const textColor = color(colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <Text\n      numberOfLines={1}\n      {...rest}\n      style={[styles.container, { color: textColor, ...font }, style]}\n    />\n  );\n};\n\nListSubheader.displayName = 'List.Subheader';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default withTheme(ListSubheader);\n"]},"metadata":{},"sourceType":"module"}