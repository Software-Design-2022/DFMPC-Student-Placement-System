{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState, useCallback, useMemo } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { extractHeaderProps, extractCalendarProps } from \"../componentUpdater\";\nimport { xdateToData, parseDate } from \"../interface\";\nimport { page, sameDate, sameMonth } from \"../dateutils\";\nimport constants from \"../commons/constants\";\nimport { useDidUpdate } from \"../hooks\";\nimport { STATIC_HEADER } from \"../testIDs\";\nimport styleConstructor from \"./style\";\nimport Calendar from \"../calendar\";\nimport CalendarListItem from \"./item\";\nimport CalendarHeader from \"../calendar/header/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CALENDAR_WIDTH = constants.screenWidth;\nvar CALENDAR_HEIGHT = 360;\nvar PAST_SCROLL_RANGE = 50;\nvar FUTURE_SCROLL_RANGE = 50;\nvar CalendarList = function CalendarList(props, ref) {\n  useImperativeHandle(ref, function () {\n    return {\n      scrollToDay: function scrollToDay(date, offset, animated) {\n        _scrollToDay(date, offset, animated);\n      },\n      scrollToMonth: function scrollToMonth(date) {\n        _scrollToMonth(date);\n      }\n    };\n  });\n  var theme = props.theme,\n    current = props.current,\n    firstDay = props.firstDay,\n    markedDates = props.markedDates,\n    headerStyle = props.headerStyle,\n    onMonthChange = props.onMonthChange,\n    onVisibleMonthsChange = props.onVisibleMonthsChange,\n    _props$pastScrollRang = props.pastScrollRange,\n    pastScrollRange = _props$pastScrollRang === void 0 ? PAST_SCROLL_RANGE : _props$pastScrollRang,\n    _props$futureScrollRa = props.futureScrollRange,\n    futureScrollRange = _props$futureScrollRa === void 0 ? FUTURE_SCROLL_RANGE : _props$futureScrollRa,\n    _props$calendarHeight = props.calendarHeight,\n    calendarHeight = _props$calendarHeight === void 0 ? CALENDAR_HEIGHT : _props$calendarHeight,\n    _props$calendarWidth = props.calendarWidth,\n    calendarWidth = _props$calendarWidth === void 0 ? CALENDAR_WIDTH : _props$calendarWidth,\n    calendarStyle = props.calendarStyle,\n    _props$animateScroll = props.animateScroll,\n    animateScroll = _props$animateScroll === void 0 ? false : _props$animateScroll,\n    _props$showScrollIndi = props.showScrollIndicator,\n    showScrollIndicator = _props$showScrollIndi === void 0 ? false : _props$showScrollIndi,\n    staticHeader = props.staticHeader,\n    testID = props.testID,\n    propsStyle = props.style,\n    onLayout = props.onLayout,\n    removeClippedSubviews = props.removeClippedSubviews,\n    _props$horizontal = props.horizontal,\n    horizontal = _props$horizontal === void 0 ? false : _props$horizontal,\n    pagingEnabled = props.pagingEnabled,\n    _props$scrollEnabled = props.scrollEnabled,\n    scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\n    _props$nestedScrollEn = props.nestedScrollEnabled,\n    nestedScrollEnabled = _props$nestedScrollEn === void 0 ? true : _props$nestedScrollEn,\n    _props$scrollsToTop = props.scrollsToTop,\n    scrollsToTop = _props$scrollsToTop === void 0 ? false : _props$scrollsToTop,\n    _props$keyExtractor = props.keyExtractor,\n    keyExtractor = _props$keyExtractor === void 0 ? function (_, index) {\n      return String(index);\n    } : _props$keyExtractor,\n    keyboardShouldPersistTaps = props.keyboardShouldPersistTaps,\n    onScrollBeginDrag = props.onScrollBeginDrag,\n    onScrollEndDrag = props.onScrollEndDrag,\n    onMomentumScrollBegin = props.onMomentumScrollBegin,\n    onMomentumScrollEnd = props.onMomentumScrollEnd,\n    onEndReachedThreshold = props.onEndReachedThreshold,\n    onEndReached = props.onEndReached;\n  var calendarProps = extractCalendarProps(props);\n  var headerProps = extractHeaderProps(props);\n  var calendarSize = horizontal ? calendarWidth : calendarHeight;\n  var _useState = useState(parseDate(current)),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentMonth = _useState2[0],\n    setCurrentMonth = _useState2[1];\n  var style = useRef(styleConstructor(theme));\n  var list = useRef();\n  var range = useRef(horizontal ? 1 : 3);\n  var initialDate = useRef(parseDate(current) || new XDate());\n  var visibleMonth = useRef(currentMonth);\n  var items = useMemo(function () {\n    var months = [];\n    for (var i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n      var _initialDate$current;\n      var rangeDate = (_initialDate$current = initialDate.current) == null ? void 0 : _initialDate$current.clone().addMonths(i - pastScrollRange, true);\n      months.push(rangeDate);\n    }\n    return months;\n  }, [pastScrollRange, futureScrollRange]);\n  var staticHeaderStyle = useMemo(function () {\n    return [style.current.staticHeader, headerStyle];\n  }, [headerStyle]);\n  var listStyle = useMemo(function () {\n    return [style.current.container, propsStyle];\n  }, [propsStyle]);\n  var initialDateIndex = useMemo(function () {\n    return findIndex(items, function (item) {\n      var _initialDate$current2;\n      return item.toString() === ((_initialDate$current2 = initialDate.current) == null ? void 0 : _initialDate$current2.toString());\n    });\n  }, [items]);\n  useEffect(function () {\n    if (current) {\n      _scrollToMonth(new XDate(current));\n    }\n  }, [current]);\n  useDidUpdate(function () {\n    var currMont = currentMonth == null ? void 0 : currentMonth.clone();\n    if (currMont) {\n      var data = xdateToData(currMont);\n      onMonthChange == null ? void 0 : onMonthChange(data);\n      onVisibleMonthsChange == null ? void 0 : onVisibleMonthsChange([data]);\n    }\n  }, [currentMonth]);\n  var _scrollToDay = function _scrollToDay(date, offset, animated) {\n    var _initialDate$current3;\n    var scrollTo = parseDate(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current3 = initialDate.current) == null ? void 0 : _initialDate$current3.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n    if (!horizontal) {\n      var week = 0;\n      var days = page(scrollTo, firstDay);\n      for (var i = 0; i < days.length; i++) {\n        week = Math.floor(i / 7);\n        if (sameDate(days[i], scrollTo)) {\n          scrollAmount += 46 * week;\n          break;\n        }\n      }\n    }\n    if (scrollAmount !== 0) {\n      var _list$current;\n      list == null ? void 0 : (_list$current = list.current) == null ? void 0 : _list$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animated\n      });\n    }\n  };\n  var _scrollToMonth = useCallback(function (date) {\n    var _initialDate$current4;\n    var scrollTo = parseDate(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current4 = initialDate.current) == null ? void 0 : _initialDate$current4.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize;\n    if (scrollAmount !== 0) {\n      var _list$current2;\n      list == null ? void 0 : (_list$current2 = list.current) == null ? void 0 : _list$current2.scrollToOffset({\n        offset: scrollAmount,\n        animated: animateScroll\n      });\n    }\n  }, [calendarSize]);\n  var addMonth = useCallback(function (count) {\n    var day = currentMonth == null ? void 0 : currentMonth.clone().addMonths(count, true);\n    if (sameMonth(day, currentMonth)) {\n      return;\n    }\n    _scrollToMonth(day);\n    setCurrentMonth(day);\n  }, [currentMonth, _scrollToMonth]);\n  var getMarkedDatesForItem = useCallback(function (item) {\n    if (markedDates && item) {\n      for (var _i = 0, _Object$entries = Object.entries(markedDates); _i < _Object$entries.length; _i++) {\n        var _ref = _Object$entries[_i];\n        var _ref2 = _slicedToArray(_ref, 2);\n        var key = _ref2[0];\n        var _ = _ref2[1];\n        if (sameMonth(new XDate(key), new XDate(item))) {\n          return markedDates;\n        }\n      }\n    }\n  }, [markedDates]);\n  var getItemLayout = useCallback(function (_, index) {\n    return {\n      length: calendarSize,\n      offset: calendarSize * index,\n      index: index\n    };\n  }, []);\n  var isDateInRange = useCallback(function (date) {\n    for (var i = -range.current; i <= range.current; i++) {\n      var newMonth = currentMonth == null ? void 0 : currentMonth.clone().addMonths(i);\n      if (sameMonth(date, newMonth)) {\n        return true;\n      }\n    }\n    return false;\n  }, [currentMonth]);\n  var renderItem = useCallback(function (_ref3) {\n    var item = _ref3.item;\n    return _jsx(CalendarListItem, _objectSpread(_objectSpread({}, calendarProps), {}, {\n      markedDates: getMarkedDatesForItem(item),\n      item: item,\n      testID: testID + \"_\" + item,\n      style: calendarStyle\n      ,\n      horizontal: horizontal,\n      calendarWidth: calendarWidth,\n      calendarHeight: calendarHeight,\n      scrollToMonth: _scrollToMonth,\n      visible: isDateInRange(item)\n    }));\n  }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n  var renderStaticHeader = function renderStaticHeader() {\n    if (staticHeader && horizontal) {\n      return _jsx(CalendarHeader, _objectSpread(_objectSpread({}, headerProps), {}, {\n        testID: STATIC_HEADER,\n        style: staticHeaderStyle,\n        month: currentMonth,\n        addMonth: addMonth,\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants'\n      }));\n    }\n  };\n  var viewabilityConfig = useRef({\n    viewAreaCoveragePercentThreshold: 20\n  });\n  var onViewableItemsChanged = useCallback(function (_ref4) {\n    var _viewableItems$;\n    var viewableItems = _ref4.viewableItems;\n    var newVisibleMonth = parseDate((_viewableItems$ = viewableItems[0]) == null ? void 0 : _viewableItems$.item);\n    if (!sameDate(visibleMonth == null ? void 0 : visibleMonth.current, newVisibleMonth)) {\n      visibleMonth.current = newVisibleMonth;\n      setCurrentMonth(visibleMonth.current);\n    }\n  }, []);\n  var viewabilityConfigCallbackPairs = useRef([{\n    viewabilityConfig: viewabilityConfig.current,\n    onViewableItemsChanged: onViewableItemsChanged\n  }]);\n  return _jsxs(View, {\n    style: style.current.flatListContainer,\n    children: [_jsx(FlatList\n    , {\n      ref: list,\n      style: listStyle,\n      showsVerticalScrollIndicator: showScrollIndicator,\n      showsHorizontalScrollIndicator: showScrollIndicator,\n      data: items,\n      renderItem: renderItem,\n      getItemLayout: getItemLayout,\n      initialNumToRender: range.current,\n      initialScrollIndex: initialDateIndex,\n      viewabilityConfigCallbackPairs: viewabilityConfigCallbackPairs.current,\n      testID: testID,\n      onLayout: onLayout,\n      removeClippedSubviews: removeClippedSubviews,\n      pagingEnabled: pagingEnabled,\n      scrollEnabled: scrollEnabled,\n      scrollsToTop: scrollsToTop,\n      horizontal: horizontal,\n      keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n      keyExtractor: keyExtractor,\n      onEndReachedThreshold: onEndReachedThreshold,\n      onEndReached: onEndReached,\n      nestedScrollEnabled: nestedScrollEnabled,\n      onMomentumScrollBegin: onMomentumScrollBegin,\n      onMomentumScrollEnd: onMomentumScrollEnd,\n      onScrollBeginDrag: onScrollBeginDrag,\n      onScrollEndDrag: onScrollEndDrag\n    }), renderStaticHeader()]\n  });\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = _objectSpread(_objectSpread({}, Calendar.propTypes), {}, {\n  pastScrollRange: PropTypes.number,\n  futureScrollRange: PropTypes.number,\n  calendarWidth: PropTypes.number,\n  calendarHeight: PropTypes.number,\n  calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticHeader: PropTypes.bool,\n  showScrollIndicator: PropTypes.bool,\n  animateScroll: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  scrollsToTop: PropTypes.bool,\n  pagingEnabled: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  keyExtractor: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onEndReached: PropTypes.func,\n  nestedScrollEnabled: PropTypes.bool\n});","map":{"version":3,"names":["findIndex","PropTypes","XDate","React","forwardRef","useImperativeHandle","useRef","useEffect","useState","useCallback","useMemo","extractHeaderProps","extractCalendarProps","xdateToData","parseDate","page","sameDate","sameMonth","constants","useDidUpdate","STATIC_HEADER","styleConstructor","Calendar","CalendarListItem","CalendarHeader","CALENDAR_WIDTH","screenWidth","CALENDAR_HEIGHT","PAST_SCROLL_RANGE","FUTURE_SCROLL_RANGE","CalendarList","props","ref","scrollToDay","date","offset","animated","scrollToMonth","theme","current","firstDay","markedDates","headerStyle","onMonthChange","onVisibleMonthsChange","pastScrollRange","futureScrollRange","calendarHeight","calendarWidth","calendarStyle","animateScroll","showScrollIndicator","staticHeader","testID","propsStyle","style","onLayout","removeClippedSubviews","horizontal","pagingEnabled","scrollEnabled","nestedScrollEnabled","scrollsToTop","keyExtractor","_","index","String","keyboardShouldPersistTaps","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","onEndReachedThreshold","onEndReached","calendarProps","headerProps","calendarSize","currentMonth","setCurrentMonth","list","range","initialDate","visibleMonth","items","months","i","rangeDate","clone","addMonths","push","staticHeaderStyle","listStyle","container","initialDateIndex","item","toString","currMont","data","scrollTo","diffMonths","Math","round","setDate","scrollAmount","week","days","length","floor","scrollToOffset","addMonth","count","day","getMarkedDatesForItem","Object","entries","key","getItemLayout","isDateInRange","newMonth","renderItem","renderStaticHeader","viewabilityConfig","viewAreaCoveragePercentThreshold","onViewableItemsChanged","viewableItems","newVisibleMonth","viewabilityConfigCallbackPairs","flatListContainer","displayName","propTypes","number","oneOfType","object","array","bool","oneOf","func"],"sources":["D:/repos/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/calendar-list/index.js"],"sourcesContent":["import findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState, useCallback, useMemo } from 'react';\nimport { FlatList, View } from 'react-native';\nimport { extractHeaderProps, extractCalendarProps } from '../componentUpdater';\nimport { xdateToData, parseDate } from '../interface';\nimport { page, sameDate, sameMonth } from '../dateutils';\nimport constants from '../commons/constants';\nimport { useDidUpdate } from '../hooks';\n// @ts-expect-error\nimport { STATIC_HEADER } from '../testIDs';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nconst CALENDAR_WIDTH = constants.screenWidth;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar-list.gif\n */\nconst CalendarList = (props, ref) => {\n    useImperativeHandle(ref, () => ({\n        scrollToDay: (date, offset, animated) => {\n            scrollToDay(date, offset, animated);\n        },\n        scrollToMonth: (date) => {\n            scrollToMonth(date);\n        }\n    }));\n    const { \n    /** Calendar props */\n    theme, current, firstDay, markedDates, headerStyle, onMonthChange, onVisibleMonthsChange, \n    /** CalendarList props */\n    pastScrollRange = PAST_SCROLL_RANGE, futureScrollRange = FUTURE_SCROLL_RANGE, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, calendarStyle, animateScroll = false, showScrollIndicator = false, staticHeader, \n    /** View props */\n    testID, style: propsStyle, onLayout, removeClippedSubviews, \n    /** ScrollView props */\n    horizontal = false, pagingEnabled, scrollEnabled = true, nestedScrollEnabled = true, scrollsToTop = false, keyExtractor = (_, index) => String(index), keyboardShouldPersistTaps, onScrollBeginDrag, onScrollEndDrag, onMomentumScrollBegin, onMomentumScrollEnd, \n    /** FlatList props */\n    onEndReachedThreshold, onEndReached } = props;\n    const calendarProps = extractCalendarProps(props);\n    const headerProps = extractHeaderProps(props);\n    const calendarSize = horizontal ? calendarWidth : calendarHeight;\n    const [currentMonth, setCurrentMonth] = useState(parseDate(current));\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const range = useRef(horizontal ? 1 : 3);\n    const initialDate = useRef(parseDate(current) || new XDate());\n    const visibleMonth = useRef(currentMonth);\n    const items = useMemo(() => {\n        const months = [];\n        for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n            const rangeDate = initialDate.current?.clone().addMonths(i - pastScrollRange, true);\n            months.push(rangeDate);\n        }\n        return months;\n    }, [pastScrollRange, futureScrollRange]);\n    const staticHeaderStyle = useMemo(() => {\n        return [style.current.staticHeader, headerStyle];\n    }, [headerStyle]);\n    const listStyle = useMemo(() => {\n        return [style.current.container, propsStyle];\n    }, [propsStyle]);\n    const initialDateIndex = useMemo(() => {\n        return findIndex(items, function (item) {\n            return item.toString() === initialDate.current?.toString();\n        });\n    }, [items]);\n    useEffect(() => {\n        if (current) {\n            scrollToMonth(new XDate(current));\n        }\n    }, [current]);\n    useDidUpdate(() => {\n        const currMont = currentMonth?.clone();\n        if (currMont) {\n            const data = xdateToData(currMont);\n            onMonthChange?.(data);\n            onVisibleMonthsChange?.([data]);\n        }\n    }, [currentMonth]);\n    const scrollToDay = (date, offset, animated) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        let scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n        if (!horizontal) {\n            let week = 0;\n            const days = page(scrollTo, firstDay);\n            for (let i = 0; i < days.length; i++) {\n                week = Math.floor(i / 7);\n                if (sameDate(days[i], scrollTo)) {\n                    scrollAmount += 46 * week;\n                    break;\n                }\n            }\n        }\n        if (scrollAmount !== 0) {\n            // @ts-expect-error\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated });\n        }\n    };\n    const scrollToMonth = useCallback((date) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        const scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize;\n        if (scrollAmount !== 0) {\n            // @ts-expect-error\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated: animateScroll });\n        }\n    }, [calendarSize]);\n    const addMonth = useCallback((count) => {\n        const day = currentMonth?.clone().addMonths(count, true);\n        if (sameMonth(day, currentMonth)) {\n            return;\n        }\n        scrollToMonth(day);\n        setCurrentMonth(day);\n    }, [currentMonth, scrollToMonth]);\n    const getMarkedDatesForItem = useCallback((item) => {\n        if (markedDates && item) {\n            for (const [key, _] of Object.entries(markedDates)) {\n                if (sameMonth(new XDate(key), new XDate(item))) {\n                    return markedDates;\n                }\n            }\n        }\n    }, [markedDates]);\n    const getItemLayout = useCallback((_, index) => {\n        return {\n            length: calendarSize,\n            offset: calendarSize * index,\n            index\n        };\n    }, []);\n    const isDateInRange = useCallback((date) => {\n        for (let i = -range.current; i <= range.current; i++) {\n            const newMonth = currentMonth?.clone().addMonths(i);\n            if (sameMonth(date, newMonth)) {\n                return true;\n            }\n        }\n        return false;\n    }, [currentMonth]);\n    const renderItem = useCallback(({ item }) => {\n        return (<CalendarListItem {...calendarProps} markedDates={getMarkedDatesForItem(item)} item={item} testID={`${testID}_${item}`} style={calendarStyle} \n        // @ts-expect-error - type mismatch - ScrollView's 'horizontal' is nullable\n        horizontal={horizontal} calendarWidth={calendarWidth} calendarHeight={calendarHeight} scrollToMonth={scrollToMonth} visible={isDateInRange(item)}/>);\n    }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n    const renderStaticHeader = () => {\n        if (staticHeader && horizontal) {\n            return (<CalendarHeader {...headerProps} testID={STATIC_HEADER} style={staticHeaderStyle} month={currentMonth} addMonth={addMonth} accessibilityElementsHidden={true} // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n            />);\n        }\n    };\n    /** Viewable month */\n    const viewabilityConfig = useRef({\n        viewAreaCoveragePercentThreshold: 20\n    });\n    const onViewableItemsChanged = useCallback(({ viewableItems }) => {\n        const newVisibleMonth = parseDate(viewableItems[0]?.item);\n        if (!sameDate(visibleMonth?.current, newVisibleMonth)) {\n            visibleMonth.current = newVisibleMonth;\n            setCurrentMonth(visibleMonth.current);\n        }\n    }, []);\n    const viewabilityConfigCallbackPairs = useRef([\n        {\n            viewabilityConfig: viewabilityConfig.current,\n            onViewableItemsChanged\n        },\n    ]);\n    return (<View style={style.current.flatListContainer}>\n      <FlatList \n    // @ts-expect-error\n    ref={list} style={listStyle} showsVerticalScrollIndicator={showScrollIndicator} showsHorizontalScrollIndicator={showScrollIndicator} data={items} renderItem={renderItem} getItemLayout={getItemLayout} initialNumToRender={range.current} initialScrollIndex={initialDateIndex} viewabilityConfigCallbackPairs={viewabilityConfigCallbackPairs.current} testID={testID} onLayout={onLayout} removeClippedSubviews={removeClippedSubviews} pagingEnabled={pagingEnabled} scrollEnabled={scrollEnabled} scrollsToTop={scrollsToTop} horizontal={horizontal} keyboardShouldPersistTaps={keyboardShouldPersistTaps} keyExtractor={keyExtractor} onEndReachedThreshold={onEndReachedThreshold} onEndReached={onEndReached} nestedScrollEnabled={nestedScrollEnabled} onMomentumScrollBegin={onMomentumScrollBegin} onMomentumScrollEnd={onMomentumScrollEnd} onScrollBeginDrag={onScrollBeginDrag} onScrollEndDrag={onScrollEndDrag}/>\n      {renderStaticHeader()}\n    </View>);\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = {\n    ...Calendar.propTypes,\n    pastScrollRange: PropTypes.number,\n    futureScrollRange: PropTypes.number,\n    calendarWidth: PropTypes.number,\n    calendarHeight: PropTypes.number,\n    calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    staticHeader: PropTypes.bool,\n    showScrollIndicator: PropTypes.bool,\n    animateScroll: PropTypes.bool,\n    scrollEnabled: PropTypes.bool,\n    scrollsToTop: PropTypes.bool,\n    pagingEnabled: PropTypes.bool,\n    horizontal: PropTypes.bool,\n    keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n    keyExtractor: PropTypes.func,\n    onEndReachedThreshold: PropTypes.number,\n    onEndReached: PropTypes.func,\n    nestedScrollEnabled: PropTypes.bool\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}