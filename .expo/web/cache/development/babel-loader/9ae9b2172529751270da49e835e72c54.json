{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect, Component } from \"react\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { SafeAreaViewBase } from \"react-native-web/dist/index\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport \"../global\";\nimport PropTypes from \"prop-types\";\nimport { WebView } from \"react-native-webview\";\nimport { createTopBar } from \"../HelperFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 33;\nvar ITEM_SIZE = AVATAR_SIZE + SPACING * 4;\nvar DATA2 = notificationList;\n\nvar Notifications = function Notifications() {\n  console.log(notificationList);\n  var scrollY = React.useRef(new Animated.Value(0)).current;\n  var navigation = useNavigation();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      SetName = _useState4[1];\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        Linking.openURL(item.link);\n      },\n      children: _jsxs(View, {\n        style: {\n          height: 100,\n          backgroundColor: \"rgba(9,38,66,0.75)\",\n          marginBottom: 10,\n          margin: 5,\n          borderRadius: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            borderBottomWidth: 2,\n            borderColor: \"rgba(255,255,255,255)\",\n            letterSpacing: 1,\n            fontWeight: \"bold\",\n            left: 4,\n            top: 2,\n            color: \"rgba(255,255,255,255)\",\n            position: \"absolute\",\n            fontSize: 20\n          },\n          children: item.heading\n        }), _jsx(Text, {\n          style: {\n            letterSpacing: 1,\n            fontWeight: \"bold\",\n            right: 4,\n            top: 2,\n            color: \"rgba(255,255,255,255)\",\n            position: \"absolute\",\n            fontSize: 10\n          },\n          children: item.date\n        }), _jsx(Text, {\n          style: {\n            letterSpacing: 1,\n            fontWeight: \"bold\",\n            right: 4,\n            top: 14,\n            color: \"rgba(255,255,255,255)\",\n            position: \"absolute\",\n            fontSize: 10\n          },\n          children: item.time\n        }), _jsx(Text, {\n          style: {\n            letterSpacing: 0,\n            fontWeight: \"bold\",\n            left: 4,\n            top: SPACING + 12,\n            color: \"rgba(128,185,238,255)\",\n            height: 50,\n            width: width / 1.1\n          },\n          children: item.body\n        })]\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [createTopBar(10, navigation, false), _jsxs(View, {\n      style: {\n        flex: 1,\n        zIndex: 1,\n        top: 15\n      },\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          marginBottom: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            backgroundColor: \"rgba(0,0,0,0.2)\",\n            borderRadius: 10,\n            textAlign: \"center\",\n            fontSize: 20,\n            padding: 2,\n            marginLeft: 5,\n            color: \"black\"\n          },\n          children: \"ALL\"\n        }), _jsx(Text, {\n          style: {\n            backgroundColor: \"rgba(0,0,0,0.2)\",\n            borderRadius: 10,\n            textAlign: \"center\",\n            fontSize: 20,\n            padding: 2,\n            marginLeft: 5,\n            color: \"black\"\n          },\n          children: \"EVENTS\"\n        })]\n      }), _jsx(FlatList, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: false,\n        contentContainerStyle: {},\n        data: DATA2,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })]\n    }), _jsx(View, {\n      style: {\n        position: \"absolute\"\n      },\n      children: _jsx(Image, {\n        resizeMode: \"contain\",\n        source: require(\"./images/background.png\"),\n        blurRadius: 0\n      })\n    })]\n  });\n};\n\nexport default Notifications;","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/Screens/Notifications.js"],"names":["React","useState","useRef","useEffect","Component","useNavigation","SafeAreaViewBase","Dimensions","get","width","height","LinearGradient","PropTypes","WebView","createTopBar","buttonHeight","textPos","SPACING","AVATAR_SIZE","ICON_SIZE","ITEM_SIZE","DATA2","notificationList","Notifications","console","log","scrollY","Animated","Value","current","navigation","selectedId","setSelectedId","name","SetName","renderItem","item","Linking","openURL","link","backgroundColor","marginBottom","margin","borderRadius","borderBottomWidth","borderColor","letterSpacing","fontWeight","left","top","color","position","fontSize","heading","right","date","time","body","flex","zIndex","flexDirection","textAlign","padding","marginLeft","id","require"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, Component } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport {\r\n  StatusBar,\r\n  FlatList,\r\n  Image,\r\n  Animated,\r\n  Pressable,\r\n  Text,\r\n  View,\r\n  Dimensions,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  TouchableHighlight,\r\n  Easing,\r\n  SafeAreaViewBase,\r\n  SafeAreaView,\r\n  Button,\r\n  ScrollView,\r\n  Linking,\r\n} from \"react-native\";\r\nconst { width, height } = Dimensions.get(\"screen\");\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport \"../global\";\r\nimport PropTypes from \"prop-types\";\r\nimport { WebView } from \"react-native-webview\";\r\nimport { createTopBar } from \"../HelperFunctions\";\r\n\r\n//Constants for use with UI scaling\r\nconst buttonHeight = 50;\r\nconst textPos = buttonHeight / 2;\r\nconst SPACING = 20;\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 33;\r\nconst ITEM_SIZE = AVATAR_SIZE + SPACING * 4;\r\n//data to be displayed in the flatlist\r\nconst DATA2 = notificationList;\r\n\r\n// creates it so each item has a touchable button with correct title\r\n\r\nconst Notifications = () => {\r\n  console.log(notificationList);\r\n  const scrollY = React.useRef(new Animated.Value(0)).current;\r\n  //use navigation\r\n  const navigation = useNavigation();\r\n  //change colour of tapped button\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [name, SetName] = useState(\"\");\r\n  // first render function that renders the vertical flatlist\r\n  const renderItem = ({ item }) => {\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          Linking.openURL(item.link);\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 100,\r\n            backgroundColor: \"rgba(9,38,66,0.75)\",\r\n            marginBottom: 10,\r\n            margin: 5,\r\n            borderRadius: 10,\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              borderBottomWidth: 2,\r\n              borderColor: \"rgba(255,255,255,255)\",\r\n              letterSpacing: 1,\r\n              fontWeight: \"bold\",\r\n              left: 4,\r\n              top: 2,\r\n              color: \"rgba(255,255,255,255)\",\r\n              position: \"absolute\",\r\n              fontSize: 20,\r\n            }}\r\n          >\r\n            {item.heading}\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              letterSpacing: 1,\r\n              fontWeight: \"bold\",\r\n              right: 4,\r\n              top: 2,\r\n              color: \"rgba(255,255,255,255)\",\r\n              position: \"absolute\",\r\n              fontSize: 10,\r\n            }}\r\n          >\r\n            {item.date}\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              letterSpacing: 1,\r\n              fontWeight: \"bold\",\r\n              right: 4,\r\n              top: 14,\r\n              color: \"rgba(255,255,255,255)\",\r\n              position: \"absolute\",\r\n              fontSize: 10,\r\n            }}\r\n          >\r\n            {item.time}\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              letterSpacing: 0,\r\n              fontWeight: \"bold\",\r\n              left: 4,\r\n              top: SPACING + 12,\r\n              color: \"rgba(128,185,238,255)\",\r\n              height: 50,\r\n              width: width / 1.1,\r\n            }}\r\n          >\r\n            {item.body}\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      {createTopBar(10, navigation, false)}\r\n      <View style={{ flex: 1, zIndex: 1, top: 15 }}>\r\n        <View style={{ flexDirection: \"row\", marginBottom: 10 }}>\r\n          <Text\r\n            style={{\r\n              backgroundColor: \"rgba(0,0,0,0.2)\",\r\n              borderRadius: 10,\r\n              textAlign: \"center\",\r\n              fontSize: 20,\r\n              padding: 2,\r\n              marginLeft: 5,\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            ALL\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              backgroundColor: \"rgba(0,0,0,0.2)\",\r\n              borderRadius: 10,\r\n              textAlign: \"center\",\r\n              fontSize: 20,\r\n              padding: 2,\r\n              marginLeft: 5,\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            EVENTS\r\n          </Text>\r\n        </View>\r\n        <FlatList\r\n          showsHorizontalScrollIndicator={false}\r\n          horizontal={false}\r\n          contentContainerStyle={{}}\r\n          data={DATA2}\r\n          renderItem={renderItem}\r\n          keyExtractor={(item) => item.id}\r\n        />\r\n      </View>\r\n      <View style={{ position: \"absolute\" }}>\r\n        <Image\r\n          resizeMode=\"contain\"\r\n          source={require(\"./images/background.png\")}\r\n          blurRadius={0}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"]},"metadata":{},"sourceType":"module"}