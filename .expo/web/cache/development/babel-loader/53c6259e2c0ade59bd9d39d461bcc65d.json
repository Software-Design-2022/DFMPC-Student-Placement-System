{
  "ast": null,
  "code": "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport { getEvents } from \"../Screens/RetrieveEvents\";\nimport AppContext from \"../AppContext\";\nimport \"../global.js\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { setStatusBarNetworkActivityIndicatorVisible } from \"expo-status-bar\";\nimport { firebase, db } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\nvar dateToPass = \"\";\nvar specialty = \"\";\nvar RANGE = 12;\nvar initialDate = \"2022-01-02\";\nvar usersAgenda = {};\nvar days = \"\";\nvar events = [];\n\nvar EventCalendar = function EventCalendar() {\n  var navigation = useNavigation();\n  var myContext = useContext(AppContext);\n\n  var getPosts = function getPosts() {\n    return new Promise(function (resolve, reject) {\n      db.collection(\"events\").get().then(function (snapShot) {\n        snapShot.docs.forEach(function (doc) {\n          var data = _objectSpread({}, doc.data());\n\n          posts.unshift(data);\n          resolve(posts);\n        });\n      });\n    });\n  };\n\n  getPosts().then(function (posts) {\n    console.log(posts);\n    var event;\n    posts, _readOnlyError(\"events\");\n  });\n\n  var onDayPress = function onDayPress(day) {\n    console.log(\"Just ran the redundant function\");\n  };\n\n  return _jsx(View, {\n    children: _jsx(CalendarList, {\n      current: initialDate,\n      pastScrollRange: 3,\n      futureScrollRange: RANGE,\n      theme: theme,\n      onDayPress: function onDayPress(day) {\n        setSelectedDate(day.dateString);\n        dateToPass = day.dateString;\n        console.log(\"dateToPass value before navigation:\", dateToPass);\n        navigation.navigate(\"DayAgenda\");\n      },\n      markingType: \"period\"\n    })\n  });\n};\n\nvar generateSchedule = function generateSchedule(onReceive) {};\n\nvar theme = {\n  \"stylesheet.calendar.header\": {\n    dayHeader: {\n      fontWeight: \"600\",\n      color: \"#48BFE3\"\n    }\n  },\n  \"stylesheet.day.basic\": {\n    today: {\n      borderColor: \"#48BFE3\",\n      borderWidth: 0.8\n    },\n    todayText: {\n      color: \"#5390D9\",\n      fontWeight: \"800\"\n    }\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderRadius: 20,\n    flex: 1,\n    borderColor: \"rgba(36,50,61,1)\",\n    borderWidth: 5\n  }\n});\nexport default EventCalendar;\nexport { dateToPass };\nexport { days };",
  "map": {
    "version": 3,
    "names": [
      "React",
      "useState",
      "useEffect",
      "useContext",
      "useNavigation",
      "Calendar",
      "CalendarList",
      "Agenda",
      "getEvents",
      "AppContext",
      "NavigationContainer",
      "setStatusBarNetworkActivityIndicatorVisible",
      "firebase",
      "db",
      "buttonHeight",
      "textPos",
      "SPACING",
      "AVATAR_SIZE",
      "ICON_SIZE",
      "dateToPass",
      "specialty",
      "RANGE",
      "initialDate",
      "usersAgenda",
      "days",
      "events",
      "EventCalendar",
      "navigation",
      "myContext",
      "getPosts",
      "Promise",
      "resolve",
      "reject",
      "collection",
      "get",
      "then",
      "snapShot",
      "docs",
      "forEach",
      "doc",
      "data",
      "posts",
      "unshift",
      "console",
      "log",
      "event",
      "onDayPress",
      "day",
      "theme",
      "setSelectedDate",
      "dateString",
      "navigate",
      "generateSchedule",
      "onReceive",
      "dayHeader",
      "fontWeight",
      "color",
      "today",
      "borderColor",
      "borderWidth",
      "todayText",
      "styles",
      "StyleSheet",
      "create",
      "container",
      "marginTop",
      "backgroundColor",
      "borderRadius",
      "flex"
    ],
    "sources": [
      "C:/Users/nokno/OneDrive/Documents/GitHub/DFMPC-Student-Placement-System/Screens/EventsCalendar.js"
    ],
    "sourcesContent": [
      "import React, { useState, useEffect, useContext } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\r\nimport { getEvents } from \"../Screens/RetrieveEvents\";\r\nimport AppContext from \"../AppContext\";\r\nimport \"../global.js\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { setStatusBarNetworkActivityIndicatorVisible } from \"expo-status-bar\";\r\nimport {firebase, db} from \"../firebase\"\r\n\r\n//constants\r\nconst buttonHeight = 50;\r\nconst textPos = buttonHeight / 2;\r\nconst SPACING = 20;\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 80;\r\nvar dateToPass = \"\";\r\nvar specialty = \"\";\r\nconst RANGE = 12;\r\nconst initialDate = \"2022-01-02\";\r\nvar usersAgenda = {};\r\nconst days = \"\"; //@Noku - this is what I used to fix the Calendar\r\nconst events = [];\r\nconst EventCalendar = () => {\r\n  //use navigation\r\n  const navigation = useNavigation();\r\n  const myContext = useContext(AppContext);\r\n  // Keeps track of selected date\r\n\r\n  const getPosts = () => {\r\n   \r\n  return new Promise((resolve, reject) => {  \r\n  db.collection(`events`).get().then((snapShot) => {\r\n        snapShot.docs.forEach((doc) => {\r\n            let data = { ...doc.data() };\r\n            posts.unshift(data);\r\n            resolve(posts);  \r\n        });\r\n    });\r\n   });\r\n};\r\n\r\n\r\ngetPosts().then((posts) => {\r\n  console.log(posts);\r\n  var event\r\n  events = posts;\r\n});\r\n\r\n  // User's agenda\r\n  // What to do when day is pressed.\r\n  const onDayPress = (day) => {\r\n    console.log(\"Just ran the redundant function\");\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <CalendarList\r\n        // testID={testIDs.calendarList.CONTAINER}\r\n        current={initialDate}\r\n        pastScrollRange={3}\r\n        futureScrollRange={RANGE}\r\n        // renderHeader={renderCustomHeader}\r\n        theme={theme}\r\n        \r\n        onDayPress={(day) => {\r\n          setSelectedDate(day.dateString);\r\n          dateToPass = day.dateString;\r\n          console.log(\"dateToPass value before navigation:\", dateToPass);\r\n          navigation.navigate(\"DayAgenda\"); // @Noku Does this js file exist?\r\n        }}\r\n        markingType=\"period\"\r\n\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst generateSchedule = (onReceive) => {\r\n  /**\r\n   * Function to generate the schedule for the calendar\r\n   * TODO: Create a calendar with the student's ID as their schedule.\r\n   * For loop through the Event List and add the dates to the calendar as followed.\r\n   * Create .saveEvent() function to save the event to the database.\r\n   * RNCalendarEvents.saveEvent(specialtyName, {\r\n   * calendarId: studentID,\r\n   * startDate: start_date, \\\\ Correct format '2016-08-19T19:26:00.000Z'\r\n   * recurrenceRule: {\r\n   * frequency: 'weekly',\r\n   * endDate: end_date,\r\n   * }\r\n   * location:  hospitalID,\r\n   * notes: 'Bring sunglasses'\r\n   * }\r\n   */\r\n  \r\n};\r\n\r\nconst theme = {\r\n  \"stylesheet.calendar.header\": {\r\n    dayHeader: {\r\n      fontWeight: \"600\",\r\n      color: \"#48BFE3\",\r\n    },\r\n  },\r\n  \"stylesheet.day.basic\": {\r\n    today: {\r\n      borderColor: \"#48BFE3\",\r\n      borderWidth: 0.8,\r\n    },\r\n    todayText: {\r\n      color: \"#5390D9\",\r\n      fontWeight: \"800\",\r\n    },\r\n  },\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 20,\r\n    backgroundColor: \"white\",\r\n    marginTop: 10,\r\n    borderRadius: 20,\r\n    flex: 1,\r\n    borderColor: \"rgba(36,50,61,1)\",\r\n    borderWidth: 5,\r\n  },\r\n});\r\n\r\nexport default EventCalendar;\r\n\r\nexport { dateToPass };\r\nexport { days };\r\n"
    ],
    "mappings": "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"
  },
  "metadata": {},
  "sourceType": "module"
}
