{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport studentData from \"../dfmpc-student-placement-system.json\";\nimport AppContext from \"../AppContext\";\nimport \"../global.js\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\nvar dateToPass = \"\";\nvar specialty = \"\";\nvar RANGE = 12;\nvar initialDate = \"2022-01-02\";\nvar usersAgenda = {};\n\nvar CalendarView = function CalendarView() {\n  var navigation = useNavigation();\n  var myContext = useContext(AppContext);\n\n  var _useState = useState(initialDate),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedDate = _useState2[0],\n      setSelectedDate = _useState2[1];\n\n  var fullScheduleList = studentData.schedules;\n\n  var onDayPress = function onDayPress(day) {\n    console.log(\"Just ran the redundant function\");\n  };\n\n  return _jsx(View, {\n    children: _jsx(CalendarList, {\n      current: initialDate,\n      pastScrollRange: 3,\n      futureScrollRange: RANGE,\n      theme: theme,\n      onDayPress: function onDayPress(day) {\n        setSelectedDate(day.dateString);\n        dateToPass = day.dateString;\n        console.log(\"dateToPass value before navigation:\", dateToPass);\n        navigation.navigate(\"DayAgenda\");\n      },\n      markingType: \"period\",\n      markedDates: generateSchedule(fullScheduleList)\n    })\n  });\n};\n\nvar generateSchedule = function generateSchedule(fullScheduleList) {\n  var userSchedulesListObj = {};\n  var userMarkedDatesListObj = {};\n  fullScheduleList.forEach(function (scheduleItem) {\n    var scheduleObj = {};\n    var markedDateObj = {};\n\n    if (scheduleItem.student_id != authUserID) {\n      return {};\n    }\n\n    var week = getDateFromWeekNum(scheduleItem.week_no, 2022, scheduleItem.specialty_duration);\n    var daysInWeek = getDaysInWeek(week.startDate, scheduleItem.specialty_duration);\n    var color = \"rgba(80,206,187,0.5)\";\n    var startcolor = color;\n    var middlecolor = startcolor;\n    var endcolor = startcolor;\n\n    if (scheduleItem.specialty_id == 2) {\n      startcolor = \"rgba(226,135,67,0.5)\";\n      middlecolor = \"rgba(226,135,67,0.25)\";\n      endcolor = \"rgba(226,135,67,0.5)\";\n    } else if (scheduleItem.specialty_id == 5) {\n      startcolor = \"rgba(8,181,245,0.5)\";\n      middlecolor = \"rgba(8,181,245,0.25)\";\n      endcolor = \"rgba(8,181,245,0.5)\";\n    } else if (scheduleItem.specialty_id == 6) {\n      startcolor = \"rgba(245,58,245,0.5)\";\n      middlecolor = \"rgba(245,58,245,0.25)\";\n      endcolor = \"rgba(245,58,245,0.5)\";\n    } else {\n      startcolor = \"rgba(80,206,187,0.5)\";\n      middlecolor = \"rgba(80,206,187,0.25)\";\n      endcolor = \"rgba(80,206,187,0.5)\";\n    }\n\n    daysInWeek.forEach(function (day, dayIndex) {\n      scheduleObj = {};\n      markedDateObj = {};\n\n      if (dayIndex === 0) {\n        scheduleObj.startingDate = true;\n        scheduleObj.color = startcolor;\n        scheduleObj.textColor = \"white\";\n      } else if (dayIndex > 0 && dayIndex <= 5) {\n        scheduleObj.color = middlecolor;\n        scheduleObj.textColor = \"white\";\n      } else {\n        scheduleObj.endingDay = true;\n        scheduleObj.color = endcolor;\n        scheduleObj.textColor = \"white\";\n      }\n\n      scheduleObj.student_id = scheduleItem.student_id;\n      scheduleObj.created_at = scheduleItem.created_at;\n      scheduleObj.updated_at = scheduleItem.updated_at;\n      scheduleObj.hospital_id = scheduleItem.hospital_id;\n      scheduleObj.specialty_id = scheduleItem.specialty_id;\n      scheduleObj.startingDate;\n      scheduleObj.color;\n      scheduleObj.textColor;\n      markedDateObj.startingDate = scheduleObj.startingDate;\n      markedDateObj.color = scheduleObj.color;\n      markedDateObj.textColor = scheduleObj.textColor;\n      userSchedulesListObj[day] = scheduleObj;\n      userMarkedDatesListObj[day] = markedDateObj;\n    });\n  });\n  usersAgenda = userSchedulesListObj;\n  return userMarkedDatesListObj;\n};\n\nvar getDaysInWeek = function getDaysInWeek(startDate, specialtyduration) {\n  var dates = [];\n\n  for (var i = 0; i < specialtyduration; i++) {\n    var currentDate = new Date(startDate);\n    currentDate.setDate(startDate.getDate() + i);\n    var formattedDate = currentDate.toISOString().split(\"T\")[0];\n    dates.push(formattedDate);\n  }\n\n  return dates;\n};\n\nvar getDateFromWeekNum = function getDateFromWeekNum(weekNum, year, specialtyduration) {\n  var daynum = weekNum * 7;\n\n  if (weekNum * 7 > 30) {\n    var month = weekNum * 7 / 30 + 1;\n  } else {\n    var month = 0;\n  }\n\n  while (daynum > 30) {\n    daynum = daynum - 30;\n  }\n\n  month = parseInt(month);\n  var d = new Date(year, month, 1);\n  var endDate = new Date(d.setDate(daynum));\n  var startDate = new Date(year, month, 2);\n  startDate.setDate(endDate.getDate() - specialtyduration);\n  return {\n    startDate: startDate,\n    endDate: endDate\n  };\n};\n\nvar theme = {\n  \"stylesheet.calendar.header\": {\n    dayHeader: {\n      fontWeight: \"600\",\n      color: \"#48BFE3\"\n    }\n  },\n  \"stylesheet.day.basic\": {\n    today: {\n      borderColor: \"#48BFE3\",\n      borderWidth: 0.8\n    },\n    todayText: {\n      color: \"#5390D9\",\n      fontWeight: \"800\"\n    }\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderRadius: 20,\n    flex: 1,\n    borderColor: \"rgba(36,50,61,1)\",\n    borderWidth: 5\n  }\n});\nexport default CalendarView;\nexport { dateToPass };","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigation","Calendar","CalendarList","Agenda","studentData","AppContext","NavigationContainer","buttonHeight","textPos","SPACING","AVATAR_SIZE","ICON_SIZE","dateToPass","specialty","RANGE","initialDate","usersAgenda","CalendarView","navigation","myContext","selectedDate","setSelectedDate","fullScheduleList","schedules","onDayPress","day","console","log","theme","dateString","navigate","generateSchedule","userSchedulesListObj","userMarkedDatesListObj","forEach","scheduleItem","scheduleObj","markedDateObj","student_id","authUserID","week","getDateFromWeekNum","week_no","specialty_duration","daysInWeek","getDaysInWeek","startDate","color","startcolor","middlecolor","endcolor","specialty_id","dayIndex","startingDate","textColor","endingDay","created_at","updated_at","hospital_id","specialtyduration","dates","i","currentDate","Date","setDate","getDate","formattedDate","toISOString","split","push","weekNum","year","daynum","month","parseInt","d","endDate","dayHeader","fontWeight","today","borderColor","borderWidth","todayText","styles","StyleSheet","create","container","marginTop","backgroundColor","borderRadius","flex"],"sources":["/home/cipher73/Coding Projects/SDproject/DFMPC-Student-Placement-System/Screens/CalendarView.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  StyleSheet,\n\n  View,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport studentData from \"../dfmpc-student-placement-system.json\";\nimport AppContext from \"../AppContext\";\nimport \"../global.js\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\n//constants\nconst buttonHeight = 50;\nconst textPos = buttonHeight / 2;\nconst SPACING = 20;\nconst AVATAR_SIZE = 70;\nconst ICON_SIZE = 80;\nvar dateToPass = \"\";\nvar specialty = \"\";\nconst RANGE = 12;\nconst initialDate = \"2022-01-02\";\nvar usersAgenda = {};\n\nconst CalendarView = () => {\n  //use navigation\n  const navigation = useNavigation();\n  const myContext = useContext(AppContext);\n  // Keeps track of selected date\n  const [selectedDate, setSelectedDate] = useState(initialDate);\n\n  //fetches record of schedules for all users\n  const fullScheduleList = studentData.schedules;\n  // Keeps track of schedule for user\n  // User's agenda\n  // What to do when day is pressed.\n  const onDayPress = (day) => {\n    console.log(\"Just ran the redundant function\");\n  };\n\n  return (\n    <View>\n    <CalendarList\n      // testID={testIDs.calendarList.CONTAINER}\n      current={initialDate}\n      pastScrollRange={3}\n      futureScrollRange={RANGE}\n      // renderHeader={renderCustomHeader}\n      theme={theme}\n      onDayPress={(day) => {\n        setSelectedDate(day.dateString);\n        dateToPass = day.dateString;\n        console.log(\"dateToPass value before navigation:\", dateToPass);\n        navigation.navigate(\"DayAgenda\");\n      }}\n      markingType=\"period\"\n      // * The generateSchedule method does way too much at once, really caused issues with understanding\n      // I need to add back in the \"created_at\",\"updated_at\", \"hospital_id\", \"specialty_id\" into the generate Schedule function then strip out only the marked dates format.\n      markedDates={generateSchedule(fullScheduleList)} // now this function is the wrong format only to include: color, textColor and [startDate,endDate]\n    />\n    </View>\n  );\n};\n\n// generate marked dates [Too specific, needs to include relevant info for agenda ]\\\n// Refactored generateSchedule to include data it \"threw away\". Namely \"student_id\";,\"created_at\" ,\"updated_at\" ,\"hospital_id\",\"specialty_id\"\n// Returns objects with properties: \"startingDate\",\"color\",\"textColor\"\nconst generateSchedule = (fullScheduleList) => {\n  let userSchedulesListObj = {};\n  let userMarkedDatesListObj = {};\n  // Iterate through entire list of schedules for all users\n  // Skip immediately if it's a different user, else parse the database object\n  fullScheduleList.forEach((scheduleItem) => {\n    let scheduleObj = {};\n    let markedDateObj = {};\n\n    //only show scheduleItem for correct user\n    if (scheduleItem.student_id != authUserID) {\n      return {};\n    }\n    // Parse  week for the scheduleItem\n    // Returns: [startDate, endDate]\n    const week = getDateFromWeekNum(\n      scheduleItem.week_no,\n      2022,\n      scheduleItem.specialty_duration\n    );\n\n    //figure out which days of the week in the scheduleItem\n    // Returns: string\n    const daysInWeek = getDaysInWeek(\n      week.startDate,\n      scheduleItem.specialty_duration\n    );\n\n    //default colours. Can use a gradient of 2 colors, but I'm setting them all to the same color.\n    var color = \"rgba(80,206,187,0.5)\";\n    var startcolor = color;\n    var middlecolor = startcolor;\n    var endcolor = startcolor;\n\n    //change color based on specialty\n    // These are the different options color options (no interpolation)\n    if (scheduleItem.specialty_id == 2) {\n      startcolor = \"rgba(226,135,67,0.5)\";\n      middlecolor = \"rgba(226,135,67,0.25)\";\n      endcolor = \"rgba(226,135,67,0.5)\";\n    } else if (scheduleItem.specialty_id == 5) {\n      startcolor = \"rgba(8,181,245,0.5)\";\n      middlecolor = \"rgba(8,181,245,0.25)\";\n      endcolor = \"rgba(8,181,245,0.5)\";\n    } else if (scheduleItem.specialty_id == 6) {\n      startcolor = \"rgba(245,58,245,0.5)\";\n      middlecolor = \"rgba(245,58,245,0.25)\";\n      endcolor = \"rgba(245,58,245,0.5)\";\n    } else {\n      startcolor = \"rgba(80,206,187,0.5)\";\n      middlecolor = \"rgba(80,206,187,0.25)\";\n      endcolor = \"rgba(80,206,187,0.5)\";\n    }\n\n    // Iterates through each day and adds all the information to each schedule object/Agenda item\n    // This is a very important section, used to pass all the information to the views\n    daysInWeek.forEach((day, dayIndex) => {\n      scheduleObj = {};\n      markedDateObj = {};\n\n      // Configuring Conditional Variables\n      // Conditions for start dates\n      if (dayIndex === 0) {\n        scheduleObj.startingDate = true;\n        scheduleObj.color = startcolor;\n        scheduleObj.textColor = \"white\";\n      }\n      // Conditions for middle dates\n      else if (dayIndex > 0 && dayIndex <= 5) {\n        scheduleObj.color = middlecolor;\n        scheduleObj.textColor = \"white\";\n      }\n      // Conditions for end dates\n      else {\n        scheduleObj.endingDay = true;\n        scheduleObj.color = endcolor;\n        scheduleObj.textColor = \"white\";\n      }\n      // Packing the values into the schedule/agenda object\n      scheduleObj.student_id = scheduleItem.student_id;\n      scheduleObj.created_at = scheduleItem.created_at;\n      scheduleObj.updated_at = scheduleItem.updated_at;\n      scheduleObj.hospital_id = scheduleItem.hospital_id;\n      scheduleObj.specialty_id = scheduleItem.specialty_id;\n      scheduleObj.startingDate;\n      scheduleObj.color;\n      scheduleObj.textColor;\n\n      markedDateObj.startingDate = scheduleObj.startingDate;\n      markedDateObj.color = scheduleObj.color;\n      markedDateObj.textColor = scheduleObj.textColor;\n      // creating the object and stashing it in the user's schedule object list\n\n      userSchedulesListObj[day] = scheduleObj;\n      userMarkedDatesListObj[day] = markedDateObj;\n    }); // end of days i week\n  }); // End of Schedule List\n  // Saving a user's schedule as individual objects for each day higher up in scope.\n  usersAgenda = userSchedulesListObj;\n  // To test function\n  // console.log(\"Should be more verbose than marked again\", usersAgenda);\n  // console.log(\"Should be a only 3 properties\", userMarkedDatesListObj);\n  return userMarkedDatesListObj;\n};\n\n// get days that the specialty will run over using specialty duration\nconst getDaysInWeek = (startDate, specialtyduration) => {\n  let dates = [];\n  for (let i = 0; i < specialtyduration; i++) {\n    //takes current date and counts days prior to it for listing on calendar\n    const currentDate = new Date(startDate);\n    currentDate.setDate(startDate.getDate() + i);\n    const formattedDate = currentDate.toISOString().split(\"T\")[0];\n\n    dates.push(formattedDate);\n  }\n  return dates;\n};\n\n// calculates correct week based on the weeknumber and specialty duration\nconst getDateFromWeekNum = (weekNum, year, specialtyduration) => {\n  var daynum = weekNum * 7;\n  if (weekNum * 7 > 30) {\n    var month = (weekNum * 7) / 30 + 1;\n  } else {\n    var month = 0;\n  }\n  while (daynum > 30) {\n    daynum = daynum - 30;\n  }\n  month = parseInt(month);\n  var d = new Date(year, month, 1);\n  const endDate = new Date(d.setDate(daynum));\n  const startDate = new Date(year, month, 2);\n  startDate.setDate(endDate.getDate() - specialtyduration);\n  return { startDate: startDate, endDate: endDate };\n};\n\nconst theme = {\n  \"stylesheet.calendar.header\": {\n    dayHeader: {\n      fontWeight: \"600\",\n      color: \"#48BFE3\",\n    },\n  },\n  \"stylesheet.day.basic\": {\n    today: {\n      borderColor: \"#48BFE3\",\n      borderWidth: 0.8,\n    },\n    todayText: {\n      color: \"#5390D9\",\n      fontWeight: \"800\",\n    },\n  },\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderRadius: 20,\n    flex: 1,\n    borderColor: \"rgba(36,50,61,1)\",\n    borderWidth: 5,\n  },\n});\n\nexport default CalendarView;\n\nexport { dateToPass };\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;;AAMA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,MAAjC,QAA+C,wBAA/C;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAGA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,OAAO,GAAGD,YAAY,GAAG,CAA/B;AACA,IAAME,OAAO,GAAG,EAAhB;AACA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAMC,KAAK,GAAG,EAAd;AACA,IAAMC,WAAW,GAAG,YAApB;AACA,IAAIC,WAAW,GAAG,EAAlB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;EAEzB,IAAMC,UAAU,GAAGlB,aAAa,EAAhC;EACA,IAAMmB,SAAS,GAAGpB,UAAU,CAACM,UAAD,CAA5B;;EAEA,gBAAwCR,QAAQ,CAACkB,WAAD,CAAhD;EAAA;EAAA,IAAOK,YAAP;EAAA,IAAqBC,eAArB;;EAGA,IAAMC,gBAAgB,GAAGlB,WAAW,CAACmB,SAArC;;EAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;IAC1BC,OAAO,CAACC,GAAR,CAAY,iCAAZ;EACD,CAFD;;EAIA,OACE,KAAC,IAAD;IAAA,UACA,KAAC,YAAD;MAEE,OAAO,EAAEZ,WAFX;MAGE,eAAe,EAAE,CAHnB;MAIE,iBAAiB,EAAED,KAJrB;MAME,KAAK,EAAEc,KANT;MAOE,UAAU,EAAE,oBAACH,GAAD,EAAS;QACnBJ,eAAe,CAACI,GAAG,CAACI,UAAL,CAAf;QACAjB,UAAU,GAAGa,GAAG,CAACI,UAAjB;QACAH,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDf,UAAnD;QACAM,UAAU,CAACY,QAAX,CAAoB,WAApB;MACD,CAZH;MAaE,WAAW,EAAC,QAbd;MAgBE,WAAW,EAAEC,gBAAgB,CAACT,gBAAD;IAhB/B;EADA,EADF;AAsBD,CAtCD;;AA2CA,IAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACT,gBAAD,EAAsB;EAC7C,IAAIU,oBAAoB,GAAG,EAA3B;EACA,IAAIC,sBAAsB,GAAG,EAA7B;EAGAX,gBAAgB,CAACY,OAAjB,CAAyB,UAACC,YAAD,EAAkB;IACzC,IAAIC,WAAW,GAAG,EAAlB;IACA,IAAIC,aAAa,GAAG,EAApB;;IAGA,IAAIF,YAAY,CAACG,UAAb,IAA2BC,UAA/B,EAA2C;MACzC,OAAO,EAAP;IACD;;IAGD,IAAMC,IAAI,GAAGC,kBAAkB,CAC7BN,YAAY,CAACO,OADgB,EAE7B,IAF6B,EAG7BP,YAAY,CAACQ,kBAHgB,CAA/B;IAQA,IAAMC,UAAU,GAAGC,aAAa,CAC9BL,IAAI,CAACM,SADyB,EAE9BX,YAAY,CAACQ,kBAFiB,CAAhC;IAMA,IAAII,KAAK,GAAG,sBAAZ;IACA,IAAIC,UAAU,GAAGD,KAAjB;IACA,IAAIE,WAAW,GAAGD,UAAlB;IACA,IAAIE,QAAQ,GAAGF,UAAf;;IAIA,IAAIb,YAAY,CAACgB,YAAb,IAA6B,CAAjC,EAAoC;MAClCH,UAAU,GAAG,sBAAb;MACAC,WAAW,GAAG,uBAAd;MACAC,QAAQ,GAAG,sBAAX;IACD,CAJD,MAIO,IAAIf,YAAY,CAACgB,YAAb,IAA6B,CAAjC,EAAoC;MACzCH,UAAU,GAAG,qBAAb;MACAC,WAAW,GAAG,sBAAd;MACAC,QAAQ,GAAG,qBAAX;IACD,CAJM,MAIA,IAAIf,YAAY,CAACgB,YAAb,IAA6B,CAAjC,EAAoC;MACzCH,UAAU,GAAG,sBAAb;MACAC,WAAW,GAAG,uBAAd;MACAC,QAAQ,GAAG,sBAAX;IACD,CAJM,MAIA;MACLF,UAAU,GAAG,sBAAb;MACAC,WAAW,GAAG,uBAAd;MACAC,QAAQ,GAAG,sBAAX;IACD;;IAIDN,UAAU,CAACV,OAAX,CAAmB,UAACT,GAAD,EAAM2B,QAAN,EAAmB;MACpChB,WAAW,GAAG,EAAd;MACAC,aAAa,GAAG,EAAhB;;MAIA,IAAIe,QAAQ,KAAK,CAAjB,EAAoB;QAClBhB,WAAW,CAACiB,YAAZ,GAA2B,IAA3B;QACAjB,WAAW,CAACW,KAAZ,GAAoBC,UAApB;QACAZ,WAAW,CAACkB,SAAZ,GAAwB,OAAxB;MACD,CAJD,MAMK,IAAIF,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAI,CAAhC,EAAmC;QACtChB,WAAW,CAACW,KAAZ,GAAoBE,WAApB;QACAb,WAAW,CAACkB,SAAZ,GAAwB,OAAxB;MACD,CAHI,MAKA;QACHlB,WAAW,CAACmB,SAAZ,GAAwB,IAAxB;QACAnB,WAAW,CAACW,KAAZ,GAAoBG,QAApB;QACAd,WAAW,CAACkB,SAAZ,GAAwB,OAAxB;MACD;;MAEDlB,WAAW,CAACE,UAAZ,GAAyBH,YAAY,CAACG,UAAtC;MACAF,WAAW,CAACoB,UAAZ,GAAyBrB,YAAY,CAACqB,UAAtC;MACApB,WAAW,CAACqB,UAAZ,GAAyBtB,YAAY,CAACsB,UAAtC;MACArB,WAAW,CAACsB,WAAZ,GAA0BvB,YAAY,CAACuB,WAAvC;MACAtB,WAAW,CAACe,YAAZ,GAA2BhB,YAAY,CAACgB,YAAxC;MACAf,WAAW,CAACiB,YAAZ;MACAjB,WAAW,CAACW,KAAZ;MACAX,WAAW,CAACkB,SAAZ;MAEAjB,aAAa,CAACgB,YAAd,GAA6BjB,WAAW,CAACiB,YAAzC;MACAhB,aAAa,CAACU,KAAd,GAAsBX,WAAW,CAACW,KAAlC;MACAV,aAAa,CAACiB,SAAd,GAA0BlB,WAAW,CAACkB,SAAtC;MAGAtB,oBAAoB,CAACP,GAAD,CAApB,GAA4BW,WAA5B;MACAH,sBAAsB,CAACR,GAAD,CAAtB,GAA8BY,aAA9B;IACD,CAvCD;EAwCD,CA3FD;EA6FArB,WAAW,GAAGgB,oBAAd;EAIA,OAAOC,sBAAP;AACD,CAvGD;;AA0GA,IAAMY,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAYa,iBAAZ,EAAkC;EACtD,IAAIC,KAAK,GAAG,EAAZ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,iBAApB,EAAuCE,CAAC,EAAxC,EAA4C;IAE1C,IAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASjB,SAAT,CAApB;IACAgB,WAAW,CAACE,OAAZ,CAAoBlB,SAAS,CAACmB,OAAV,KAAsBJ,CAA1C;IACA,IAAMK,aAAa,GAAGJ,WAAW,CAACK,WAAZ,GAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAtB;IAEAR,KAAK,CAACS,IAAN,CAAWH,aAAX;EACD;;EACD,OAAON,KAAP;AACD,CAXD;;AAcA,IAAMnB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAC6B,OAAD,EAAUC,IAAV,EAAgBZ,iBAAhB,EAAsC;EAC/D,IAAIa,MAAM,GAAGF,OAAO,GAAG,CAAvB;;EACA,IAAIA,OAAO,GAAG,CAAV,GAAc,EAAlB,EAAsB;IACpB,IAAIG,KAAK,GAAIH,OAAO,GAAG,CAAX,GAAgB,EAAhB,GAAqB,CAAjC;EACD,CAFD,MAEO;IACL,IAAIG,KAAK,GAAG,CAAZ;EACD;;EACD,OAAOD,MAAM,GAAG,EAAhB,EAAoB;IAClBA,MAAM,GAAGA,MAAM,GAAG,EAAlB;EACD;;EACDC,KAAK,GAAGC,QAAQ,CAACD,KAAD,CAAhB;EACA,IAAIE,CAAC,GAAG,IAAIZ,IAAJ,CAASQ,IAAT,EAAeE,KAAf,EAAsB,CAAtB,CAAR;EACA,IAAMG,OAAO,GAAG,IAAIb,IAAJ,CAASY,CAAC,CAACX,OAAF,CAAUQ,MAAV,CAAT,CAAhB;EACA,IAAM1B,SAAS,GAAG,IAAIiB,IAAJ,CAASQ,IAAT,EAAeE,KAAf,EAAsB,CAAtB,CAAlB;EACA3B,SAAS,CAACkB,OAAV,CAAkBY,OAAO,CAACX,OAAR,KAAoBN,iBAAtC;EACA,OAAO;IAAEb,SAAS,EAAEA,SAAb;IAAwB8B,OAAO,EAAEA;EAAjC,CAAP;AACD,CAhBD;;AAkBA,IAAMhD,KAAK,GAAG;EACZ,8BAA8B;IAC5BiD,SAAS,EAAE;MACTC,UAAU,EAAE,KADH;MAET/B,KAAK,EAAE;IAFE;EADiB,CADlB;EAOZ,wBAAwB;IACtBgC,KAAK,EAAE;MACLC,WAAW,EAAE,SADR;MAELC,WAAW,EAAE;IAFR,CADe;IAKtBC,SAAS,EAAE;MACTnC,KAAK,EAAE,SADE;MAET+B,UAAU,EAAE;IAFH;EALW;AAPZ,CAAd;AAmBA,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,SAAS,EAAE,EADF;IAETC,eAAe,EAAE,OAFR;IAGTD,SAAS,EAAE,EAHF;IAITE,YAAY,EAAE,EAJL;IAKTC,IAAI,EAAE,CALG;IAMTV,WAAW,EAAE,kBANJ;IAOTC,WAAW,EAAE;EAPJ;AADoB,CAAlB,CAAf;AAYA,eAAehE,YAAf;AAEA,SAASL,UAAT"},"metadata":{},"sourceType":"module"}