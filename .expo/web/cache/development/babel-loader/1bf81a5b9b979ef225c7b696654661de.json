{
  "ast": null,
  "code": "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Calendar, Agenda } from \"react-native-calendars\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { Card, Avatar } from \"react-native-paper\";\nimport { firebase, db } from \"../firebase\";\nimport { getCurrentDate } from \"../HelperFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar days = \"\";\nvar initialDate = getCurrentDate();\n\nfunction getSchedule(onReceiveList) {\n  var schedules, snapshot;\n  return _regeneratorRuntime.async(function getSchedule$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          schedules = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"schedules\").where(\"student_id\", \"==\", authUserID).get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              schedules.push({\n                key: schedules.length + 1,\n                student_id: doc.data().student_id,\n                SpecialtyName: doc.data().SpecialtyName,\n                hospital_ID: doc.data().hospital_id,\n                specialty_duration: doc.data().specialty_duration,\n                start: doc.data().start_date,\n                end: doc.data().end_date,\n                specialty_id: doc.data().specialty_id\n              });\n            });\n          }));\n\n        case 3:\n          snapshot = _context.sent;\n          onReceiveList(schedules);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nLogBox.ignoreLogs([\"Setting a timer\"]);\n\nvar AgendaCalendar = function (_React$Component) {\n  _inherits(AgendaCalendar, _React$Component);\n\n  var _super = _createSuper(AgendaCalendar);\n\n  function AgendaCalendar(props) {\n    var _this;\n\n    _classCallCheck(this, AgendaCalendar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      items: {},\n      events: []\n    };\n    return _this;\n  }\n\n  _createClass(AgendaCalendar, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(Agenda, {\n        theme: {\n          calendarBackground: \"white\",\n          agendaKnobColor: \"rgba(28,56,107,0.9)\",\n          backgroundColor: \"rgba(28,56,107,0.9)\",\n          agendaDayTextColor: \"rgba(28,56,107,0.9)\",\n          agendaDayNumColor: \"rgba(28,56,107,0.9)\",\n          agendaTodayColor: \"rgba(28,56,107,0.9)\",\n          monthTextColor: \"rgba(28,56,107,0.9)\",\n          todayBackgroundColor: \"rgba(28,56,107,0.9)\",\n          textSectionTitleColor: \"rgba(28,56,107,0.9)\",\n          selectedDayBackgroundColor: \"rgba(28,56,107,0.9)\",\n          dayTextColor: \"rgba(28,56,107,0.9)\",\n          dotColor: \"green\"\n        },\n        items: this.state.items,\n        selected: \"2022-05-01\",\n        loadItemsForMonth: this.loadFromList.bind(this),\n        renderItem: this.renderItem.bind(this),\n        renderEmptyDate: this.renderEmptyDate.bind(this),\n        rowHasChanged: this.rowHasChanged.bind(this)\n      });\n    }\n  }, {\n    key: \"loadFromList\",\n    value: function loadFromList() {\n      var _this2 = this;\n\n      var onReceive = function onReceive(data) {\n        _this2.setState({\n          events: data\n        });\n      };\n\n      getSchedule(onReceive);\n      this.state.events.map(function (key, index) {\n        var day = key.start;\n\n        if (!_this2.state.items[day]) {\n          _this2.state.items[day] = [];\n\n          _this2.state.items[day].push({\n            specialty: \"Specialty: \" + key.SpecialtyName,\n            start: \"start day: \" + key.start,\n            end: \"end day: \" + key.end,\n            hospital: \"hospital: \" + \"Baragwanath Hospital\",\n            height: Math.max(50, Math.floor(Math.random() * 150))\n          });\n        }\n\n        var newItems = {};\n        Object.keys(_this2.state.items).forEach(function (key) {\n          newItems[key] = _this2.state.items[key];\n        });\n\n        _this2.setState({\n          items: newItems\n        });\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return _jsxs(View, {\n        style: [styles.item, {\n          height: item.height\n        }],\n        children: [_jsx(Text, {\n          children: item.specialty\n        }), _jsx(Text, {\n          children: item.start\n        }), _jsx(Text, {\n          children: item.end\n        }), _jsx(Text, {\n          children: item.hospital\n        })]\n      });\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return _jsx(View, {\n        style: styles.emptyDate,\n        children: _jsx(Text, {\n          children: \"No Agenda On this day!\"\n        })\n      });\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }]);\n\n  return AgendaCalendar;\n}(React.Component);\n\nexport { AgendaCalendar as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"white\",\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  }\n});\nexport { days };",
  "map": {
    "version": 3,
    "names": [
      "Calendar",
      "Agenda",
      "React",
      "useState",
      "Card",
      "Avatar",
      "firebase",
      "db",
      "getCurrentDate",
      "days",
      "initialDate",
      "getSchedule",
      "onReceiveList",
      "schedules",
      "firestore",
      "collection",
      "where",
      "authUserID",
      "get",
      "then",
      "querySnapshot",
      "forEach",
      "doc",
      "push",
      "key",
      "length",
      "student_id",
      "data",
      "SpecialtyName",
      "hospital_ID",
      "hospital_id",
      "specialty_duration",
      "start",
      "start_date",
      "end",
      "end_date",
      "specialty_id",
      "snapshot",
      "LogBox",
      "ignoreLogs",
      "AgendaCalendar",
      "props",
      "state",
      "items",
      "events",
      "calendarBackground",
      "agendaKnobColor",
      "backgroundColor",
      "agendaDayTextColor",
      "agendaDayNumColor",
      "agendaTodayColor",
      "monthTextColor",
      "todayBackgroundColor",
      "textSectionTitleColor",
      "selectedDayBackgroundColor",
      "dayTextColor",
      "dotColor",
      "loadFromList",
      "bind",
      "renderItem",
      "renderEmptyDate",
      "rowHasChanged",
      "onReceive",
      "setState",
      "map",
      "index",
      "day",
      "specialty",
      "hospital",
      "height",
      "Math",
      "max",
      "floor",
      "random",
      "newItems",
      "Object",
      "keys",
      "item",
      "styles",
      "emptyDate",
      "r1",
      "r2",
      "name",
      "Component",
      "StyleSheet",
      "create",
      "flex",
      "borderRadius",
      "padding",
      "marginRight",
      "marginTop",
      "paddingTop"
    ],
    "sources": [
      "C:/Users/nokno/OneDrive/Documents/GitHub/DFMPC-Student-Placement-System/Screens/CalendarView.js"
    ],
    "sourcesContent": [
      "import { Calendar, Agenda } from \"react-native-calendars\"; // 1.5.3\r\nimport React, { useState } from \"react\";\r\nimport { View, StyleSheet, TouchableOpacity, Text, LogBox } from \"react-native\";\r\nimport { Card, Avatar } from \"react-native-paper\";\r\nimport { firebase, db } from \"../firebase\";\r\nimport { getCurrentDate } from \"../HelperFunctions\";\r\nconst days = \"\";\r\n\r\nconst initialDate = getCurrentDate()\r\nasync function getSchedule(onReceiveList) {\r\n  const schedules = [];\r\n  var snapshot = await firebase\r\n    .firestore()\r\n    .collection(\"schedules\")\r\n    .where(\"student_id\", \"==\", authUserID) //@Noku - this is where we are filtering the data to be specific to the student logged in\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach(function (doc) {\r\n        //push the required data to the array\r\n        schedules.push({\r\n          key: schedules.length + 1,\r\n          student_id: doc.data().student_id,\r\n          SpecialtyName: doc.data().SpecialtyName,\r\n          hospital_ID: doc.data().hospital_id,\r\n          specialty_duration: doc.data().specialty_duration,\r\n          start: doc.data().start_date,\r\n          end: doc.data().end_date,\r\n          specialty_id: doc.data().specialty_id,\r\n        });\r\n      });\r\n    });\r\n\r\n  onReceiveList(schedules);\r\n}\r\n\r\nLogBox.ignoreLogs([\"Setting a timer\"]);\r\n\r\nexport default class AgendaCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: {},\r\n      events: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Agenda\r\n        theme={{\r\n          calendarBackground: \"white\", //agenda background\r\n          agendaKnobColor: \"rgba(28,56,107,0.9)\", // knob color\r\n          backgroundColor: \"rgba(28,56,107,0.9)\", // background color below agenda\r\n          agendaDayTextColor: \"rgba(28,56,107,0.9)\", // day name\r\n          agendaDayNumColor: \"rgba(28,56,107,0.9)\", // day number\r\n          agendaTodayColor: \"rgba(28,56,107,0.9)\", // today in list\r\n          monthTextColor: \"rgba(28,56,107,0.9)\", // name in calendar\r\n          todayBackgroundColor: \"rgba(28,56,107,0.9)\",\r\n          textSectionTitleColor: \"rgba(28,56,107,0.9)\",\r\n          selectedDayBackgroundColor: \"rgba(28,56,107,0.9)\", // calendar sel date\r\n          dayTextColor: \"rgba(28,56,107,0.9)\", // calendar day\r\n          dotColor: \"green\", // dots\r\n        }}\r\n        items={this.state.items}\r\n        selected={\"2022-05-01\"}\r\n        loadItemsForMonth={this.loadFromList.bind(this)}\r\n        renderItem={this.renderItem.bind(this)}\r\n        renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n        rowHasChanged={this.rowHasChanged.bind(this)}\r\n      />\r\n    );\r\n  }\r\n\r\n  loadFromList() {\r\n    const onReceive = (data) => {\r\n      this.setState({\r\n        events: data,\r\n      });\r\n    };\r\n    getSchedule(onReceive);\r\n    this.state.events.map((key, index) => {\r\n      const day = key.start;\r\n\r\n      if (!this.state.items[day]) {\r\n        this.state.items[day] = [];\r\n        this.state.items[day].push({\r\n          specialty: \"Specialty: \" + key.SpecialtyName,\r\n          start: \"start day: \" + key.start,\r\n          end: \"end day: \" + key.end,\r\n          hospital: \"hospital: \" + \"Baragwanath Hospital\",\r\n          height: Math.max(50, Math.floor(Math.random() * 150)),\r\n        });\r\n      }\r\n      //console.log(this.state.items);\r\n      const newItems = {};\r\n      Object.keys(this.state.items).forEach((key) => {\r\n        newItems[key] = this.state.items[key];\r\n      });\r\n      this.setState({\r\n        items: newItems,\r\n      });\r\n    });\r\n  }\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <View style={[styles.item, { height: item.height }]}>\r\n        <Text>{item.specialty}</Text>\r\n        <Text>{item.start}</Text>\r\n        <Text>{item.end}</Text>\r\n        <Text>{item.hospital}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>No Agenda On this day!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  rowHasChanged(r1, r2) {\r\n    return r1.name !== r2.name;\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n});\r\n\r\nexport { days };\r\n"
    ],
    "mappings": "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"
  },
  "metadata": {},
  "sourceType": "module"
}
