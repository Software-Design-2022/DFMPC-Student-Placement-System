{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NotificationScheduler from \"./NotificationScheduler\";\nexport default function cancelScheduledNotificationAsync(identifier) {\n  return _regeneratorRuntime.async(function cancelScheduledNotificationAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (NotificationScheduler.cancelScheduledNotificationAsync) {\n            _context.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Notifications', 'cancelScheduledNotificationAsync');\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(NotificationScheduler.cancelScheduledNotificationAsync(identifier));\n\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"mappings":";AAAA,SAASA,mBAAT,QAAoC,mBAApC;AAEA,OAAOC,qBAAP;AAEA,eAAe,SAAeC,gCAAf,CAAgDC,UAAhD;EAAA;IAAA;MAAA;QAAA;UAAA,IACRF,qBAAqB,CAACC,gCADd;YAAA;YAAA;UAAA;;UAAA,MAEL,IAAIF,mBAAJ,CAAwB,eAAxB,EAAyC,kCAAzC,CAFK;;QAAA;UAAA;UAAA,iCAKAC,qBAAqB,CAACC,gCAAtB,CAAuDC,UAAvD,CALA;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA","names":["UnavailabilityError","NotificationScheduler","cancelScheduledNotificationAsync","identifier"],"sourceRoot":"","sources":["../src/cancelScheduledNotificationAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\n\nexport default async function cancelScheduledNotificationAsync(identifier: string): Promise<void> {\n  if (!NotificationScheduler.cancelScheduledNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'cancelScheduledNotificationAsync');\n  }\n\n  return await NotificationScheduler.cancelScheduledNotificationAsync(identifier);\n}\n"]},"metadata":{},"sourceType":"module"}