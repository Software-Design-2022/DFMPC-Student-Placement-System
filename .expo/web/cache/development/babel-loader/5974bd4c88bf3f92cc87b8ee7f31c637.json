{"ast":null,"code":"import React, { useCallback, useMemo, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport range from 'lodash/range';\nimport { buildUnavailableHoursBlocks, HOUR_BLOCK_HEIGHT } from \"./Packer\";\nimport { buildTimeString, calcTimeByPosition } from \"./helpers/presenter\";\nimport constants from \"../commons/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar dimensionWidth = constants.screenWidth;\nvar EVENT_DIFF = 20;\n\nvar TimelineHours = function TimelineHours(props) {\n  var format24h = props.format24h,\n      _props$start = props.start,\n      start = _props$start === void 0 ? 0 : _props$start,\n      _props$end = props.end,\n      end = _props$end === void 0 ? 24 : _props$end,\n      date = props.date,\n      unavailableHours = props.unavailableHours,\n      unavailableHoursColor = props.unavailableHoursColor,\n      styles = props.styles,\n      onBackgroundLongPress = props.onBackgroundLongPress,\n      onBackgroundLongPressOut = props.onBackgroundLongPressOut;\n  var lastLongPressEventTime = useRef();\n  var offset = HOUR_BLOCK_HEIGHT;\n  var unavailableHoursBlocks = buildUnavailableHoursBlocks(unavailableHours, {\n    dayStart: start,\n    dayEnd: end\n  });\n  var hours = useMemo(function () {\n    return range(start, end + 1).map(function (i) {\n      var timeText;\n\n      if (i === start) {\n        timeText = '';\n      } else if (i < 12) {\n        timeText = !format24h ? i + \" AM\" : i + \":00\";\n      } else if (i === 12) {\n        timeText = !format24h ? i + \" PM\" : i + \":00\";\n      } else if (i === 24) {\n        timeText = !format24h ? '12 AM' : '23:59';\n      } else {\n        timeText = !format24h ? i - 12 + \" PM\" : i + \":00\";\n      }\n\n      return {\n        timeText: timeText,\n        time: i\n      };\n    });\n  }, [start, end, format24h]);\n  var handleBackgroundPress = useCallback(function (event) {\n    var yPosition = event.nativeEvent.locationY;\n\n    var _calcTimeByPosition = calcTimeByPosition(yPosition, HOUR_BLOCK_HEIGHT),\n        hour = _calcTimeByPosition.hour,\n        minutes = _calcTimeByPosition.minutes;\n\n    lastLongPressEventTime.current = {\n      hour: hour,\n      minutes: minutes,\n      date: date\n    };\n    var timeString = buildTimeString(hour, minutes, date);\n    onBackgroundLongPress == null ? void 0 : onBackgroundLongPress(timeString, lastLongPressEventTime.current);\n  }, [onBackgroundLongPress, date]);\n  var handlePressOut = useCallback(function () {\n    if (lastLongPressEventTime.current) {\n      var _lastLongPressEventTi = lastLongPressEventTime.current,\n          hour = _lastLongPressEventTi.hour,\n          minutes = _lastLongPressEventTi.minutes,\n          _date = _lastLongPressEventTi.date;\n      var timeString = buildTimeString(hour, minutes, _date);\n      onBackgroundLongPressOut == null ? void 0 : onBackgroundLongPressOut(timeString, lastLongPressEventTime.current);\n      lastLongPressEventTime.current = undefined;\n    }\n  }, [onBackgroundLongPressOut, date]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableWithoutFeedback, {\n      onLongPress: handleBackgroundPress,\n      onPressOut: handlePressOut,\n      children: _jsx(View, {\n        style: StyleSheet.absoluteFillObject\n      })\n    }), unavailableHoursBlocks.map(function (block) {\n      return _jsx(View, {\n        style: [styles.unavailableHoursBlock, block, unavailableHoursColor ? {\n          backgroundColor: unavailableHoursColor\n        } : undefined]\n      });\n    }), hours.map(function (_ref, index) {\n      var timeText = _ref.timeText,\n          time = _ref.time;\n      return _jsxs(React.Fragment, {\n        children: [_jsx(Text, {\n          style: [styles.timeLabel, {\n            top: offset * index - 6\n          }],\n          children: timeText\n        }, \"timeLabel\" + time), time === start ? null : _jsx(View, {\n          style: [styles.line, {\n            top: offset * index,\n            width: dimensionWidth - EVENT_DIFF\n          }]\n        }, \"line\" + time), _jsx(View, {\n          style: [styles.line, {\n            top: offset * (index + 0.5),\n            width: dimensionWidth - EVENT_DIFF\n          }]\n        }, \"lineHalf\" + time)]\n      }, time);\n    }), _jsx(View, {\n      style: styles.verticalLine\n    })]\n  });\n};\n\nexport default React.memo(TimelineHours);","map":{"version":3,"names":["React","useCallback","useMemo","useRef","range","buildUnavailableHoursBlocks","HOUR_BLOCK_HEIGHT","buildTimeString","calcTimeByPosition","constants","dimensionWidth","screenWidth","EVENT_DIFF","TimelineHours","props","format24h","start","end","date","unavailableHours","unavailableHoursColor","styles","onBackgroundLongPress","onBackgroundLongPressOut","lastLongPressEventTime","offset","unavailableHoursBlocks","dayStart","dayEnd","hours","map","i","timeText","time","handleBackgroundPress","event","yPosition","nativeEvent","locationY","hour","minutes","current","timeString","handlePressOut","undefined","StyleSheet","absoluteFillObject","block","unavailableHoursBlock","backgroundColor","index","timeLabel","top","line","width","verticalLine","memo"],"sources":["C:/Users/nokno/OneDrive/Documents/GitHub/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/timeline/TimelineHours.js"],"sourcesContent":["import React, { useCallback, useMemo, useRef } from 'react';\nimport { View, Text, TouchableWithoutFeedback, StyleSheet } from 'react-native';\nimport range from 'lodash/range';\nimport { buildUnavailableHoursBlocks, HOUR_BLOCK_HEIGHT } from './Packer';\nimport { buildTimeString, calcTimeByPosition } from './helpers/presenter';\nimport constants from '../commons/constants';\nconst dimensionWidth = constants.screenWidth;\nconst EVENT_DIFF = 20;\nconst TimelineHours = (props) => {\n    const { format24h, start = 0, end = 24, date, unavailableHours, unavailableHoursColor, styles, onBackgroundLongPress, onBackgroundLongPressOut } = props;\n    const lastLongPressEventTime = useRef();\n    // const offset = this.calendarHeight / (end - start);\n    const offset = HOUR_BLOCK_HEIGHT;\n    const unavailableHoursBlocks = buildUnavailableHoursBlocks(unavailableHours, { dayStart: start, dayEnd: end });\n    const hours = useMemo(() => {\n        return range(start, end + 1).map(i => {\n            let timeText;\n            if (i === start) {\n                timeText = '';\n            }\n            else if (i < 12) {\n                timeText = !format24h ? `${i} AM` : `${i}:00`;\n            }\n            else if (i === 12) {\n                timeText = !format24h ? `${i} PM` : `${i}:00`;\n            }\n            else if (i === 24) {\n                timeText = !format24h ? '12 AM' : '23:59';\n            }\n            else {\n                timeText = !format24h ? `${i - 12} PM` : `${i}:00`;\n            }\n            return { timeText, time: i };\n        });\n    }, [start, end, format24h]);\n    const handleBackgroundPress = useCallback(event => {\n        const yPosition = event.nativeEvent.locationY;\n        const { hour, minutes } = calcTimeByPosition(yPosition, HOUR_BLOCK_HEIGHT);\n        lastLongPressEventTime.current = { hour, minutes, date };\n        const timeString = buildTimeString(hour, minutes, date);\n        onBackgroundLongPress?.(timeString, lastLongPressEventTime.current);\n    }, [onBackgroundLongPress, date]);\n    const handlePressOut = useCallback(() => {\n        if (lastLongPressEventTime.current) {\n            const { hour, minutes, date } = lastLongPressEventTime.current;\n            const timeString = buildTimeString(hour, minutes, date);\n            onBackgroundLongPressOut?.(timeString, lastLongPressEventTime.current);\n            lastLongPressEventTime.current = undefined;\n        }\n    }, [onBackgroundLongPressOut, date]);\n    return (<>\n      <TouchableWithoutFeedback onLongPress={handleBackgroundPress} onPressOut={handlePressOut}>\n        <View style={StyleSheet.absoluteFillObject}/>\n      </TouchableWithoutFeedback>\n      {unavailableHoursBlocks.map(block => (<View style={[\n                styles.unavailableHoursBlock,\n                block,\n                unavailableHoursColor ? { backgroundColor: unavailableHoursColor } : undefined\n            ]}></View>))}\n\n      {hours.map(({ timeText, time }, index) => {\n            return (<React.Fragment key={time}>\n            <Text key={`timeLabel${time}`} style={[styles.timeLabel, { top: offset * index - 6 }]}>\n              {timeText}\n            </Text>\n            {time === start ? null : (<View key={`line${time}`} style={[styles.line, { top: offset * index, width: dimensionWidth - EVENT_DIFF }]}/>)}\n            {<View key={`lineHalf${time}`} style={[styles.line, { top: offset * (index + 0.5), width: dimensionWidth - EVENT_DIFF }]}/>}\n          </React.Fragment>);\n        })}\n      <View style={styles.verticalLine}/>\n    </>);\n};\nexport default React.memo(TimelineHours);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}