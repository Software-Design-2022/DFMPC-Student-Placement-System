{"ast":null,"code":"import XDate from 'xdate';\nimport values from 'lodash/values';\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useCallback, useRef } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { xdateToData } from \"../../../interface\";\nimport styleConstructor from \"./style\";\nimport Marking from \"../marking\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar BasicDay = function BasicDay(props) {\n  var theme = props.theme,\n      date = props.date,\n      onPress = props.onPress,\n      onLongPress = props.onLongPress,\n      markingType = props.markingType,\n      marking = props.marking,\n      state = props.state,\n      disableAllTouchEventsForDisabledDays = props.disableAllTouchEventsForDisabledDays,\n      disableAllTouchEventsForInactiveDays = props.disableAllTouchEventsForInactiveDays,\n      accessibilityLabel = props.accessibilityLabel,\n      children = props.children,\n      testID = props.testID;\n  var style = useRef(styleConstructor(theme));\n\n  var _marking = marking || {};\n\n  var isSelected = _marking.selected || state === 'selected';\n  var isDisabled = typeof _marking.disabled !== 'undefined' ? _marking.disabled : state === 'disabled';\n  var isInactive = _marking == null ? void 0 : _marking.inactive;\n  var isToday = state === 'today';\n  var isMultiDot = markingType === Marking.markings.MULTI_DOT;\n  var isMultiPeriod = markingType === Marking.markings.MULTI_PERIOD;\n  var isCustom = markingType === Marking.markings.CUSTOM;\n  var dateData = date ? xdateToData(new XDate(date)) : undefined;\n\n  var shouldDisableTouchEvent = function shouldDisableTouchEvent() {\n    var disableTouchEvent = _marking.disableTouchEvent;\n    var disableTouch = false;\n\n    if (typeof disableTouchEvent === 'boolean') {\n      disableTouch = disableTouchEvent;\n    } else if (typeof disableAllTouchEventsForDisabledDays === 'boolean' && isDisabled) {\n      disableTouch = disableAllTouchEventsForDisabledDays;\n    } else if (typeof disableAllTouchEventsForInactiveDays === 'boolean' && isInactive) {\n      disableTouch = disableAllTouchEventsForInactiveDays;\n    }\n\n    return disableTouch;\n  };\n\n  var getContainerStyle = function getContainerStyle() {\n    var customStyles = _marking.customStyles,\n        selectedColor = _marking.selectedColor;\n    var styles = [style.current.base];\n\n    if (isSelected) {\n      styles.push(style.current.selected);\n\n      if (selectedColor) {\n        styles.push({\n          backgroundColor: selectedColor\n        });\n      }\n    } else if (isToday) {\n      styles.push(style.current.today);\n    }\n\n    if (isCustom && customStyles && customStyles.container) {\n      if (customStyles.container.borderRadius === undefined) {\n        customStyles.container.borderRadius = 16;\n      }\n\n      styles.push(customStyles.container);\n    }\n\n    return styles;\n  };\n\n  var getTextStyle = function getTextStyle() {\n    var customStyles = _marking.customStyles,\n        selectedTextColor = _marking.selectedTextColor;\n    var styles = [style.current.text];\n\n    if (isSelected) {\n      styles.push(style.current.selectedText);\n\n      if (selectedTextColor) {\n        styles.push({\n          color: selectedTextColor\n        });\n      }\n    } else if (isDisabled) {\n      styles.push(style.current.disabledText);\n    } else if (isToday) {\n      styles.push(style.current.todayText);\n    } else if (isInactive) {\n      styles.push(style.current.inactiveText);\n    }\n\n    if (isCustom && customStyles && customStyles.text) {\n      styles.push(customStyles.text);\n    }\n\n    return styles;\n  };\n\n  var _onPress = useCallback(function () {\n    onPress == null ? void 0 : onPress(dateData);\n  }, [onPress, date]);\n\n  var _onLongPress = useCallback(function () {\n    onLongPress == null ? void 0 : onLongPress(dateData);\n  }, [onLongPress, date]);\n\n  var renderMarking = function renderMarking() {\n    var marked = _marking.marked,\n        dotColor = _marking.dotColor,\n        dots = _marking.dots,\n        periods = _marking.periods;\n    return _jsx(Marking, {\n      type: markingType,\n      theme: theme,\n      marked: isMultiDot ? true : marked,\n      selected: isSelected,\n      disabled: isDisabled,\n      inactive: isInactive,\n      today: isToday,\n      dotColor: dotColor,\n      dots: dots,\n      periods: periods\n    });\n  };\n\n  var renderText = function renderText() {\n    return _jsx(Text, {\n      allowFontScaling: false,\n      style: getTextStyle(),\n      children: String(children)\n    });\n  };\n\n  var renderContent = function renderContent() {\n    return _jsxs(Fragment, {\n      children: [renderText(), renderMarking()]\n    });\n  };\n\n  var renderContainer = function renderContainer() {\n    var activeOpacity = _marking.activeOpacity;\n    return _jsx(TouchableOpacity, {\n      testID: testID,\n      style: getContainerStyle(),\n      disabled: shouldDisableTouchEvent(),\n      activeOpacity: activeOpacity,\n      onPress: !shouldDisableTouchEvent() ? _onPress : undefined,\n      onLongPress: !shouldDisableTouchEvent() ? _onLongPress : undefined,\n      accessible: true,\n      accessibilityRole: isDisabled ? undefined : 'button',\n      accessibilityLabel: accessibilityLabel,\n      children: isMultiPeriod ? renderText() : renderContent()\n    });\n  };\n\n  var renderPeriodsContainer = function renderPeriodsContainer() {\n    return _jsxs(View, {\n      style: style.current.container,\n      children: [renderContainer(), renderMarking()]\n    });\n  };\n\n  return isMultiPeriod ? renderPeriodsContainer() : renderContainer();\n};\n\nexport default BasicDay;\nBasicDay.displayName = 'BasicDay';\nBasicDay.propTypes = {\n  state: PropTypes.oneOf(['selected', 'disabled', 'inactive', 'today', '']),\n  marking: PropTypes.any,\n  markingType: PropTypes.oneOf(values(Marking.markings)),\n  theme: PropTypes.object,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  date: PropTypes.string,\n  disableAllTouchEventsForDisabledDays: PropTypes.bool,\n  disableAllTouchEventsForInactiveDays: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/calendar/day/basic/index.js"],"names":["XDate","values","PropTypes","React","Fragment","useCallback","useRef","xdateToData","styleConstructor","Marking","BasicDay","props","theme","date","onPress","onLongPress","markingType","marking","state","disableAllTouchEventsForDisabledDays","disableAllTouchEventsForInactiveDays","accessibilityLabel","children","testID","style","_marking","isSelected","selected","isDisabled","disabled","isInactive","inactive","isToday","isMultiDot","markings","MULTI_DOT","isMultiPeriod","MULTI_PERIOD","isCustom","CUSTOM","dateData","undefined","shouldDisableTouchEvent","disableTouchEvent","disableTouch","getContainerStyle","customStyles","selectedColor","styles","current","base","push","backgroundColor","today","container","borderRadius","getTextStyle","selectedTextColor","text","selectedText","color","disabledText","todayText","inactiveText","_onPress","_onLongPress","renderMarking","marked","dotColor","dots","periods","renderText","String","renderContent","renderContainer","activeOpacity","renderPeriodsContainer","displayName","propTypes","oneOf","any","object","func","string","bool"],"mappings":"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","sourcesContent":["import XDate from 'xdate';\nimport values from 'lodash/values';\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useCallback, useRef } from 'react';\nimport { TouchableOpacity, Text, View } from 'react-native';\nimport { xdateToData } from '../../../interface';\nimport styleConstructor from './style';\nimport Marking from '../marking';\nconst BasicDay = (props) => {\n    const { theme, date, onPress, onLongPress, markingType, marking, state, disableAllTouchEventsForDisabledDays, disableAllTouchEventsForInactiveDays, accessibilityLabel, children, testID } = props;\n    const style = useRef(styleConstructor(theme));\n    const _marking = marking || {};\n    const isSelected = _marking.selected || state === 'selected';\n    const isDisabled = typeof _marking.disabled !== 'undefined' ? _marking.disabled : state === 'disabled';\n    const isInactive = _marking?.inactive;\n    const isToday = state === 'today';\n    const isMultiDot = markingType === Marking.markings.MULTI_DOT;\n    const isMultiPeriod = markingType === Marking.markings.MULTI_PERIOD;\n    const isCustom = markingType === Marking.markings.CUSTOM;\n    const dateData = date ? xdateToData(new XDate(date)) : undefined;\n    const shouldDisableTouchEvent = () => {\n        const { disableTouchEvent } = _marking;\n        let disableTouch = false;\n        if (typeof disableTouchEvent === 'boolean') {\n            disableTouch = disableTouchEvent;\n        }\n        else if (typeof disableAllTouchEventsForDisabledDays === 'boolean' && isDisabled) {\n            disableTouch = disableAllTouchEventsForDisabledDays;\n        }\n        else if (typeof disableAllTouchEventsForInactiveDays === 'boolean' && isInactive) {\n            disableTouch = disableAllTouchEventsForInactiveDays;\n        }\n        return disableTouch;\n    };\n    const getContainerStyle = () => {\n        const { customStyles, selectedColor } = _marking;\n        const styles = [style.current.base];\n        if (isSelected) {\n            styles.push(style.current.selected);\n            if (selectedColor) {\n                styles.push({ backgroundColor: selectedColor });\n            }\n        }\n        else if (isToday) {\n            styles.push(style.current.today);\n        }\n        //Custom marking type\n        if (isCustom && customStyles && customStyles.container) {\n            if (customStyles.container.borderRadius === undefined) {\n                customStyles.container.borderRadius = 16;\n            }\n            styles.push(customStyles.container);\n        }\n        return styles;\n    };\n    const getTextStyle = () => {\n        const { customStyles, selectedTextColor } = _marking;\n        const styles = [style.current.text];\n        if (isSelected) {\n            styles.push(style.current.selectedText);\n            if (selectedTextColor) {\n                styles.push({ color: selectedTextColor });\n            }\n        }\n        else if (isDisabled) {\n            styles.push(style.current.disabledText);\n        }\n        else if (isToday) {\n            styles.push(style.current.todayText);\n        }\n        else if (isInactive) {\n            styles.push(style.current.inactiveText);\n        }\n        //Custom marking type\n        if (isCustom && customStyles && customStyles.text) {\n            styles.push(customStyles.text);\n        }\n        return styles;\n    };\n    const _onPress = useCallback(() => {\n        onPress?.(dateData);\n    }, [onPress, date]);\n    const _onLongPress = useCallback(() => {\n        onLongPress?.(dateData);\n    }, [onLongPress, date]);\n    const renderMarking = () => {\n        const { marked, dotColor, dots, periods } = _marking;\n        return (<Marking type={markingType} theme={theme} marked={isMultiDot ? true : marked} selected={isSelected} disabled={isDisabled} inactive={isInactive} today={isToday} dotColor={dotColor} dots={dots} periods={periods}/>);\n    };\n    const renderText = () => {\n        return (<Text allowFontScaling={false} style={getTextStyle()}>\n        {String(children)}\n      </Text>);\n    };\n    const renderContent = () => {\n        return (<Fragment>\n        {renderText()}\n        {renderMarking()}\n      </Fragment>);\n    };\n    const renderContainer = () => {\n        const { activeOpacity } = _marking;\n        return (<TouchableOpacity testID={testID} style={getContainerStyle()} disabled={shouldDisableTouchEvent()} activeOpacity={activeOpacity} onPress={!shouldDisableTouchEvent() ? _onPress : undefined} onLongPress={!shouldDisableTouchEvent() ? _onLongPress : undefined} accessible accessibilityRole={isDisabled ? undefined : 'button'} accessibilityLabel={accessibilityLabel}>\n        {isMultiPeriod ? renderText() : renderContent()}\n      </TouchableOpacity>);\n    };\n    const renderPeriodsContainer = () => {\n        return (<View style={style.current.container}>\n        {renderContainer()}\n        {renderMarking()}\n      </View>);\n    };\n    return isMultiPeriod ? renderPeriodsContainer() : renderContainer();\n};\nexport default BasicDay;\nBasicDay.displayName = 'BasicDay';\nBasicDay.propTypes = {\n    state: PropTypes.oneOf(['selected', 'disabled', 'inactive', 'today', '']),\n    marking: PropTypes.any,\n    markingType: PropTypes.oneOf(values(Marking.markings)),\n    theme: PropTypes.object,\n    onPress: PropTypes.func,\n    onLongPress: PropTypes.func,\n    date: PropTypes.string,\n    disableAllTouchEventsForDisabledDays: PropTypes.bool,\n    disableAllTouchEventsForInactiveDays: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}