{"ast":null,"code":"import XDate from 'xdate';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef, useMemo } from 'react';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { xdateToData } from \"../../../interface\";\nimport styleConstructor from \"./style\";\nimport Dot from \"../dot\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PeriodDay = function PeriodDay(props) {\n  var theme = props.theme,\n      marking = props.marking,\n      date = props.date,\n      onPress = props.onPress,\n      onLongPress = props.onLongPress,\n      state = props.state,\n      accessibilityLabel = props.accessibilityLabel,\n      testID = props.testID,\n      children = props.children;\n  var dateData = date ? xdateToData(new XDate(date)) : undefined;\n  var style = useRef(styleConstructor(theme));\n  var markingStyle = useMemo(function () {\n    var defaultStyle = {\n      textStyle: {},\n      containerStyle: {}\n    };\n\n    if (!marking) {\n      return defaultStyle;\n    } else {\n      if (marking.disabled) {\n        defaultStyle.textStyle = {\n          color: style.current.disabledText.color\n        };\n      } else if (marking.inactive) {\n        defaultStyle.textStyle = {\n          color: style.current.inactiveText.color\n        };\n      } else if (marking.selected) {\n        defaultStyle.textStyle = {\n          color: style.current.selectedText.color\n        };\n      }\n\n      if (marking.startingDay) {\n        defaultStyle.startingDay = {\n          backgroundColor: marking.color\n        };\n      }\n\n      if (marking.endingDay) {\n        defaultStyle.endingDay = {\n          backgroundColor: marking.color\n        };\n      }\n\n      if (!marking.startingDay && !marking.endingDay) {\n        defaultStyle.day = {\n          backgroundColor: marking.color\n        };\n      }\n\n      if (marking.textColor) {\n        defaultStyle.textStyle = {\n          color: marking.textColor\n        };\n      }\n\n      if (marking.customTextStyle) {\n        defaultStyle.textStyle = marking.customTextStyle;\n      }\n\n      if (marking.customContainerStyle) {\n        defaultStyle.containerStyle = marking.customContainerStyle;\n      }\n\n      return defaultStyle;\n    }\n  }, [marking]);\n  var containerStyle = useMemo(function () {\n    var containerStyle = [style.current.base];\n\n    if (state === 'today') {\n      containerStyle.push(style.current.today);\n    }\n\n    if (marking) {\n      containerStyle.push({\n        borderRadius: 17,\n        overflow: 'hidden'\n      });\n\n      if (markingStyle.containerStyle) {\n        containerStyle.push(markingStyle.containerStyle);\n      }\n\n      var start = markingStyle.startingDay;\n      var end = markingStyle.endingDay;\n\n      if (start && !end) {\n        var _markingStyle$startin;\n\n        containerStyle.push({\n          backgroundColor: (_markingStyle$startin = markingStyle.startingDay) == null ? void 0 : _markingStyle$startin.backgroundColor\n        });\n      } else if (end && !start || end && start) {\n        var _markingStyle$endingD;\n\n        containerStyle.push({\n          backgroundColor: (_markingStyle$endingD = markingStyle.endingDay) == null ? void 0 : _markingStyle$endingD.backgroundColor\n        });\n      }\n    }\n\n    return containerStyle;\n  }, [marking, state]);\n  var textStyle = useMemo(function () {\n    var textStyle = [style.current.text];\n\n    if (state === 'disabled') {\n      textStyle.push(style.current.disabledText);\n    } else if (state === 'inactive') {\n      textStyle.push(style.current.inactiveText);\n    } else if (state === 'today') {\n      textStyle.push(style.current.todayText);\n    }\n\n    if (marking) {\n      if (markingStyle.textStyle) {\n        textStyle.push(markingStyle.textStyle);\n      }\n    }\n\n    return textStyle;\n  }, [marking, state]);\n  var fillerStyles = useMemo(function () {\n    var leftFillerStyle = {\n      backgroundColor: undefined\n    };\n    var rightFillerStyle = {\n      backgroundColor: undefined\n    };\n    var fillerStyle = {};\n    var start = markingStyle.startingDay;\n    var end = markingStyle.endingDay;\n\n    if (start && !end) {\n      var _markingStyle$startin2;\n\n      rightFillerStyle.backgroundColor = (_markingStyle$startin2 = markingStyle.startingDay) == null ? void 0 : _markingStyle$startin2.backgroundColor;\n    } else if (end && !start) {\n      var _markingStyle$endingD2;\n\n      leftFillerStyle.backgroundColor = (_markingStyle$endingD2 = markingStyle.endingDay) == null ? void 0 : _markingStyle$endingD2.backgroundColor;\n    } else if (markingStyle.day) {\n      var _markingStyle$day, _markingStyle$day2, _markingStyle$day3;\n\n      leftFillerStyle.backgroundColor = (_markingStyle$day = markingStyle.day) == null ? void 0 : _markingStyle$day.backgroundColor;\n      rightFillerStyle.backgroundColor = (_markingStyle$day2 = markingStyle.day) == null ? void 0 : _markingStyle$day2.backgroundColor;\n      fillerStyle = {\n        backgroundColor: (_markingStyle$day3 = markingStyle.day) == null ? void 0 : _markingStyle$day3.backgroundColor\n      };\n    }\n\n    return {\n      leftFillerStyle: leftFillerStyle,\n      rightFillerStyle: rightFillerStyle,\n      fillerStyle: fillerStyle\n    };\n  }, [marking]);\n\n  var renderFillers = function renderFillers() {\n    if (marking) {\n      return _jsxs(View, {\n        style: [style.current.fillers, fillerStyles.fillerStyle],\n        children: [_jsx(View, {\n          style: [style.current.leftFiller, fillerStyles.leftFillerStyle]\n        }), _jsx(View, {\n          style: [style.current.rightFiller, fillerStyles.rightFillerStyle]\n        })]\n      });\n    }\n  };\n\n  var _onPress = useCallback(function () {\n    onPress == null ? void 0 : onPress(dateData);\n  }, [onPress]);\n\n  var _onLongPress = useCallback(function () {\n    onLongPress == null ? void 0 : onLongPress(dateData);\n  }, [onLongPress]);\n\n  var Component = marking ? TouchableWithoutFeedback : TouchableOpacity;\n  return _jsx(Component, {\n    testID: testID,\n    onPress: _onPress,\n    onLongPress: _onLongPress,\n    disabled: marking == null ? void 0 : marking.disableTouchEvent,\n    accessible: true,\n    accessibilityRole: marking != null && marking.disableTouchEvent ? undefined : 'button',\n    accessibilityLabel: accessibilityLabel,\n    children: _jsxs(View, {\n      style: style.current.wrapper,\n      children: [renderFillers(), _jsxs(View, {\n        style: containerStyle,\n        children: [_jsx(Text, {\n          allowFontScaling: false,\n          style: textStyle,\n          children: String(children)\n        }), _jsx(Dot, {\n          theme: theme,\n          color: marking == null ? void 0 : marking.dotColor,\n          marked: marking == null ? void 0 : marking.marked\n        })]\n      })]\n    })\n  });\n};\n\nexport default PeriodDay;\nPeriodDay.displayName = 'PeriodDay';\nPeriodDay.propTypes = {\n  state: PropTypes.oneOf(['selected', 'disabled', 'inactive', 'today', '']),\n  marking: PropTypes.any,\n  theme: PropTypes.object,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  date: PropTypes.string\n};","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/calendar/day/period/index.js"],"names":["XDate","PropTypes","React","useCallback","useRef","useMemo","xdateToData","styleConstructor","Dot","PeriodDay","props","theme","marking","date","onPress","onLongPress","state","accessibilityLabel","testID","children","dateData","undefined","style","markingStyle","defaultStyle","textStyle","containerStyle","disabled","color","current","disabledText","inactive","inactiveText","selected","selectedText","startingDay","backgroundColor","endingDay","day","textColor","customTextStyle","customContainerStyle","base","push","today","borderRadius","overflow","start","end","text","todayText","fillerStyles","leftFillerStyle","rightFillerStyle","fillerStyle","renderFillers","fillers","leftFiller","rightFiller","_onPress","_onLongPress","Component","TouchableWithoutFeedback","TouchableOpacity","disableTouchEvent","wrapper","String","dotColor","marked","displayName","propTypes","oneOf","any","object","func","string"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,OAArC,QAAoD,OAApD;;;;;AAEA,SAASC,WAAT;AACA,OAAOC,gBAAP;AACA,OAAOC,GAAP;;;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AACzB,MAAQC,KAAR,GAAoGD,KAApG,CAAQC,KAAR;AAAA,MAAeC,OAAf,GAAoGF,KAApG,CAAeE,OAAf;AAAA,MAAwBC,IAAxB,GAAoGH,KAApG,CAAwBG,IAAxB;AAAA,MAA8BC,OAA9B,GAAoGJ,KAApG,CAA8BI,OAA9B;AAAA,MAAuCC,WAAvC,GAAoGL,KAApG,CAAuCK,WAAvC;AAAA,MAAoDC,KAApD,GAAoGN,KAApG,CAAoDM,KAApD;AAAA,MAA2DC,kBAA3D,GAAoGP,KAApG,CAA2DO,kBAA3D;AAAA,MAA+EC,MAA/E,GAAoGR,KAApG,CAA+EQ,MAA/E;AAAA,MAAuFC,QAAvF,GAAoGT,KAApG,CAAuFS,QAAvF;AACA,MAAMC,QAAQ,GAAGP,IAAI,GAAGP,WAAW,CAAC,IAAIN,KAAJ,CAAUa,IAAV,CAAD,CAAd,GAAkCQ,SAAvD;AACA,MAAMC,KAAK,GAAGlB,MAAM,CAACG,gBAAgB,CAACI,KAAD,CAAjB,CAApB;AACA,MAAMY,YAAY,GAAGlB,OAAO,CAAC,YAAM;AAC/B,QAAMmB,YAAY,GAAG;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,cAAc,EAAE;AAAjC,KAArB;;AACA,QAAI,CAACd,OAAL,EAAc;AACV,aAAOY,YAAP;AACH,KAFD,MAGK;AACD,UAAIZ,OAAO,CAACe,QAAZ,EAAsB;AAClBH,QAAAA,YAAY,CAACC,SAAb,GAAyB;AAAEG,UAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,YAAd,CAA2BF;AAApC,SAAzB;AACH,OAFD,MAGK,IAAIhB,OAAO,CAACmB,QAAZ,EAAsB;AACvBP,QAAAA,YAAY,CAACC,SAAb,GAAyB;AAAEG,UAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcG,YAAd,CAA2BJ;AAApC,SAAzB;AACH,OAFI,MAGA,IAAIhB,OAAO,CAACqB,QAAZ,EAAsB;AACvBT,QAAAA,YAAY,CAACC,SAAb,GAAyB;AAAEG,UAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcK,YAAd,CAA2BN;AAApC,SAAzB;AACH;;AACD,UAAIhB,OAAO,CAACuB,WAAZ,EAAyB;AACrBX,QAAAA,YAAY,CAACW,WAAb,GAA2B;AAAEC,UAAAA,eAAe,EAAExB,OAAO,CAACgB;AAA3B,SAA3B;AACH;;AACD,UAAIhB,OAAO,CAACyB,SAAZ,EAAuB;AACnBb,QAAAA,YAAY,CAACa,SAAb,GAAyB;AAAED,UAAAA,eAAe,EAAExB,OAAO,CAACgB;AAA3B,SAAzB;AACH;;AACD,UAAI,CAAChB,OAAO,CAACuB,WAAT,IAAwB,CAACvB,OAAO,CAACyB,SAArC,EAAgD;AAC5Cb,QAAAA,YAAY,CAACc,GAAb,GAAmB;AAAEF,UAAAA,eAAe,EAAExB,OAAO,CAACgB;AAA3B,SAAnB;AACH;;AACD,UAAIhB,OAAO,CAAC2B,SAAZ,EAAuB;AACnBf,QAAAA,YAAY,CAACC,SAAb,GAAyB;AAAEG,UAAAA,KAAK,EAAEhB,OAAO,CAAC2B;AAAjB,SAAzB;AACH;;AACD,UAAI3B,OAAO,CAAC4B,eAAZ,EAA6B;AACzBhB,QAAAA,YAAY,CAACC,SAAb,GAAyBb,OAAO,CAAC4B,eAAjC;AACH;;AACD,UAAI5B,OAAO,CAAC6B,oBAAZ,EAAkC;AAC9BjB,QAAAA,YAAY,CAACE,cAAb,GAA8Bd,OAAO,CAAC6B,oBAAtC;AACH;;AACD,aAAOjB,YAAP;AACH;AACJ,GAnC2B,EAmCzB,CAACZ,OAAD,CAnCyB,CAA5B;AAoCA,MAAMc,cAAc,GAAGrB,OAAO,CAAC,YAAM;AACjC,QAAMqB,cAAc,GAAG,CAACJ,KAAK,CAACO,OAAN,CAAca,IAAf,CAAvB;;AACA,QAAI1B,KAAK,KAAK,OAAd,EAAuB;AACnBU,MAAAA,cAAc,CAACiB,IAAf,CAAoBrB,KAAK,CAACO,OAAN,CAAce,KAAlC;AACH;;AACD,QAAIhC,OAAJ,EAAa;AACTc,MAAAA,cAAc,CAACiB,IAAf,CAAoB;AAChBE,QAAAA,YAAY,EAAE,EADE;AAEhBC,QAAAA,QAAQ,EAAE;AAFM,OAApB;;AAIA,UAAIvB,YAAY,CAACG,cAAjB,EAAiC;AAC7BA,QAAAA,cAAc,CAACiB,IAAf,CAAoBpB,YAAY,CAACG,cAAjC;AACH;;AACD,UAAMqB,KAAK,GAAGxB,YAAY,CAACY,WAA3B;AACA,UAAMa,GAAG,GAAGzB,YAAY,CAACc,SAAzB;;AACA,UAAIU,KAAK,IAAI,CAACC,GAAd,EAAmB;AAAA;;AACftB,QAAAA,cAAc,CAACiB,IAAf,CAAoB;AAAEP,UAAAA,eAAe,2BAAEb,YAAY,CAACY,WAAf,qBAAE,sBAA0BC;AAA7C,SAApB;AACH,OAFD,MAGK,IAAIY,GAAG,IAAI,CAACD,KAAR,IAAiBC,GAAG,IAAID,KAA5B,EAAmC;AAAA;;AACpCrB,QAAAA,cAAc,CAACiB,IAAf,CAAoB;AAAEP,UAAAA,eAAe,2BAAEb,YAAY,CAACc,SAAf,qBAAE,sBAAwBD;AAA3C,SAApB;AACH;AACJ;;AACD,WAAOV,cAAP;AACH,GAvB6B,EAuB3B,CAACd,OAAD,EAAUI,KAAV,CAvB2B,CAA9B;AAwBA,MAAMS,SAAS,GAAGpB,OAAO,CAAC,YAAM;AAC5B,QAAMoB,SAAS,GAAG,CAACH,KAAK,CAACO,OAAN,CAAcoB,IAAf,CAAlB;;AACA,QAAIjC,KAAK,KAAK,UAAd,EAA0B;AACtBS,MAAAA,SAAS,CAACkB,IAAV,CAAerB,KAAK,CAACO,OAAN,CAAcC,YAA7B;AACH,KAFD,MAGK,IAAId,KAAK,KAAK,UAAd,EAA0B;AAC3BS,MAAAA,SAAS,CAACkB,IAAV,CAAerB,KAAK,CAACO,OAAN,CAAcG,YAA7B;AACH,KAFI,MAGA,IAAIhB,KAAK,KAAK,OAAd,EAAuB;AACxBS,MAAAA,SAAS,CAACkB,IAAV,CAAerB,KAAK,CAACO,OAAN,CAAcqB,SAA7B;AACH;;AACD,QAAItC,OAAJ,EAAa;AACT,UAAIW,YAAY,CAACE,SAAjB,EAA4B;AACxBA,QAAAA,SAAS,CAACkB,IAAV,CAAepB,YAAY,CAACE,SAA5B;AACH;AACJ;;AACD,WAAOA,SAAP;AACH,GAjBwB,EAiBtB,CAACb,OAAD,EAAUI,KAAV,CAjBsB,CAAzB;AAkBA,MAAMmC,YAAY,GAAG9C,OAAO,CAAC,YAAM;AAC/B,QAAM+C,eAAe,GAAG;AAAEhB,MAAAA,eAAe,EAAEf;AAAnB,KAAxB;AACA,QAAMgC,gBAAgB,GAAG;AAAEjB,MAAAA,eAAe,EAAEf;AAAnB,KAAzB;AACA,QAAIiC,WAAW,GAAG,EAAlB;AACA,QAAMP,KAAK,GAAGxB,YAAY,CAACY,WAA3B;AACA,QAAMa,GAAG,GAAGzB,YAAY,CAACc,SAAzB;;AACA,QAAIU,KAAK,IAAI,CAACC,GAAd,EAAmB;AAAA;;AACfK,MAAAA,gBAAgB,CAACjB,eAAjB,6BAAmCb,YAAY,CAACY,WAAhD,qBAAmC,uBAA0BC,eAA7D;AACH,KAFD,MAGK,IAAIY,GAAG,IAAI,CAACD,KAAZ,EAAmB;AAAA;;AACpBK,MAAAA,eAAe,CAAChB,eAAhB,6BAAkCb,YAAY,CAACc,SAA/C,qBAAkC,uBAAwBD,eAA1D;AACH,KAFI,MAGA,IAAIb,YAAY,CAACe,GAAjB,EAAsB;AAAA;;AACvBc,MAAAA,eAAe,CAAChB,eAAhB,wBAAkCb,YAAY,CAACe,GAA/C,qBAAkC,kBAAkBF,eAApD;AACAiB,MAAAA,gBAAgB,CAACjB,eAAjB,yBAAmCb,YAAY,CAACe,GAAhD,qBAAmC,mBAAkBF,eAArD;AACAkB,MAAAA,WAAW,GAAG;AAAElB,QAAAA,eAAe,wBAAEb,YAAY,CAACe,GAAf,qBAAE,mBAAkBF;AAArC,OAAd;AACH;;AACD,WAAO;AAAEgB,MAAAA,eAAe,EAAfA,eAAF;AAAmBC,MAAAA,gBAAgB,EAAhBA,gBAAnB;AAAqCC,MAAAA,WAAW,EAAXA;AAArC,KAAP;AACH,GAlB2B,EAkBzB,CAAC1C,OAAD,CAlByB,CAA5B;;AAmBA,MAAM2C,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAI3C,OAAJ,EAAa;AACT,aAAQ,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACU,KAAK,CAACO,OAAN,CAAc2B,OAAf,EAAwBL,YAAY,CAACG,WAArC,CAAb;AAAA,mBACV,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAAChC,KAAK,CAACO,OAAN,CAAc4B,UAAf,EAA2BN,YAAY,CAACC,eAAxC;AAAb,UADU,EAEV,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAAC9B,KAAK,CAACO,OAAN,CAAc6B,WAAf,EAA4BP,YAAY,CAACE,gBAAzC;AAAb,UAFU;AAAA,QAAR;AAIH;AACJ,GAPD;;AAQA,MAAMM,QAAQ,GAAGxD,WAAW,CAAC,YAAM;AAC/BW,IAAAA,OAAO,QAAP,YAAAA,OAAO,CAAGM,QAAH,CAAP;AACH,GAF2B,EAEzB,CAACN,OAAD,CAFyB,CAA5B;;AAGA,MAAM8C,YAAY,GAAGzD,WAAW,CAAC,YAAM;AACnCY,IAAAA,WAAW,QAAX,YAAAA,WAAW,CAAGK,QAAH,CAAX;AACH,GAF+B,EAE7B,CAACL,WAAD,CAF6B,CAAhC;;AAGA,MAAM8C,SAAS,GAAGjD,OAAO,GAAGkD,wBAAH,GAA8BC,gBAAvD;AACA,SAAQ,KAAC,SAAD;AAAW,IAAA,MAAM,EAAE7C,MAAnB;AAA2B,IAAA,OAAO,EAAEyC,QAApC;AAA8C,IAAA,WAAW,EAAEC,YAA3D;AAAyE,IAAA,QAAQ,EAAEhD,OAAF,oBAAEA,OAAO,CAAEoD,iBAA5F;AAA+G,IAAA,UAAU,MAAzH;AAA0H,IAAA,iBAAiB,EAAEpD,OAAO,QAAP,IAAAA,OAAO,CAAEoD,iBAAT,GAA6B3C,SAA7B,GAAyC,QAAtL;AAAgM,IAAA,kBAAkB,EAAEJ,kBAApN;AAAA,cACN,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEK,KAAK,CAACO,OAAN,CAAcoC,OAA3B;AAAA,iBACGV,aAAa,EADhB,EAEE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE7B,cAAb;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,gBAAgB,EAAE,KAAxB;AAA+B,UAAA,KAAK,EAAED,SAAtC;AAAA,oBACGyC,MAAM,CAAC/C,QAAD;AADT,UADF,EAIE,KAAC,GAAD;AAAK,UAAA,KAAK,EAAER,KAAZ;AAAmB,UAAA,KAAK,EAAEC,OAAF,oBAAEA,OAAO,CAAEuD,QAAnC;AAA6C,UAAA,MAAM,EAAEvD,OAAF,oBAAEA,OAAO,CAAEwD;AAA9D,UAJF;AAAA,QAFF;AAAA;AADM,IAAR;AAWH,CA/HD;;AAgIA,eAAe3D,SAAf;AACAA,SAAS,CAAC4D,WAAV,GAAwB,WAAxB;AACA5D,SAAS,CAAC6D,SAAV,GAAsB;AAClBtD,EAAAA,KAAK,EAAEf,SAAS,CAACsE,KAAV,CAAgB,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,OAArC,EAA8C,EAA9C,CAAhB,CADW;AAElB3D,EAAAA,OAAO,EAAEX,SAAS,CAACuE,GAFD;AAGlB7D,EAAAA,KAAK,EAAEV,SAAS,CAACwE,MAHC;AAIlB3D,EAAAA,OAAO,EAAEb,SAAS,CAACyE,IAJD;AAKlB3D,EAAAA,WAAW,EAAEd,SAAS,CAACyE,IALL;AAMlB7D,EAAAA,IAAI,EAAEZ,SAAS,CAAC0E;AANE,CAAtB","sourcesContent":["import XDate from 'xdate';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef, useMemo } from 'react';\nimport { TouchableWithoutFeedback, TouchableOpacity, Text, View } from 'react-native';\nimport { xdateToData } from '../../../interface';\nimport styleConstructor from './style';\nimport Dot from '../dot';\nconst PeriodDay = (props) => {\n    const { theme, marking, date, onPress, onLongPress, state, accessibilityLabel, testID, children } = props;\n    const dateData = date ? xdateToData(new XDate(date)) : undefined;\n    const style = useRef(styleConstructor(theme));\n    const markingStyle = useMemo(() => {\n        const defaultStyle = { textStyle: {}, containerStyle: {} };\n        if (!marking) {\n            return defaultStyle;\n        }\n        else {\n            if (marking.disabled) {\n                defaultStyle.textStyle = { color: style.current.disabledText.color };\n            }\n            else if (marking.inactive) {\n                defaultStyle.textStyle = { color: style.current.inactiveText.color };\n            }\n            else if (marking.selected) {\n                defaultStyle.textStyle = { color: style.current.selectedText.color };\n            }\n            if (marking.startingDay) {\n                defaultStyle.startingDay = { backgroundColor: marking.color };\n            }\n            if (marking.endingDay) {\n                defaultStyle.endingDay = { backgroundColor: marking.color };\n            }\n            if (!marking.startingDay && !marking.endingDay) {\n                defaultStyle.day = { backgroundColor: marking.color };\n            }\n            if (marking.textColor) {\n                defaultStyle.textStyle = { color: marking.textColor };\n            }\n            if (marking.customTextStyle) {\n                defaultStyle.textStyle = marking.customTextStyle;\n            }\n            if (marking.customContainerStyle) {\n                defaultStyle.containerStyle = marking.customContainerStyle;\n            }\n            return defaultStyle;\n        }\n    }, [marking]);\n    const containerStyle = useMemo(() => {\n        const containerStyle = [style.current.base];\n        if (state === 'today') {\n            containerStyle.push(style.current.today);\n        }\n        if (marking) {\n            containerStyle.push({\n                borderRadius: 17,\n                overflow: 'hidden'\n            });\n            if (markingStyle.containerStyle) {\n                containerStyle.push(markingStyle.containerStyle);\n            }\n            const start = markingStyle.startingDay;\n            const end = markingStyle.endingDay;\n            if (start && !end) {\n                containerStyle.push({ backgroundColor: markingStyle.startingDay?.backgroundColor });\n            }\n            else if (end && !start || end && start) {\n                containerStyle.push({ backgroundColor: markingStyle.endingDay?.backgroundColor });\n            }\n        }\n        return containerStyle;\n    }, [marking, state]);\n    const textStyle = useMemo(() => {\n        const textStyle = [style.current.text];\n        if (state === 'disabled') {\n            textStyle.push(style.current.disabledText);\n        }\n        else if (state === 'inactive') {\n            textStyle.push(style.current.inactiveText);\n        }\n        else if (state === 'today') {\n            textStyle.push(style.current.todayText);\n        }\n        if (marking) {\n            if (markingStyle.textStyle) {\n                textStyle.push(markingStyle.textStyle);\n            }\n        }\n        return textStyle;\n    }, [marking, state]);\n    const fillerStyles = useMemo(() => {\n        const leftFillerStyle = { backgroundColor: undefined };\n        const rightFillerStyle = { backgroundColor: undefined };\n        let fillerStyle = {};\n        const start = markingStyle.startingDay;\n        const end = markingStyle.endingDay;\n        if (start && !end) {\n            rightFillerStyle.backgroundColor = markingStyle.startingDay?.backgroundColor;\n        }\n        else if (end && !start) {\n            leftFillerStyle.backgroundColor = markingStyle.endingDay?.backgroundColor;\n        }\n        else if (markingStyle.day) {\n            leftFillerStyle.backgroundColor = markingStyle.day?.backgroundColor;\n            rightFillerStyle.backgroundColor = markingStyle.day?.backgroundColor;\n            fillerStyle = { backgroundColor: markingStyle.day?.backgroundColor };\n        }\n        return { leftFillerStyle, rightFillerStyle, fillerStyle };\n    }, [marking]);\n    const renderFillers = () => {\n        if (marking) {\n            return (<View style={[style.current.fillers, fillerStyles.fillerStyle]}>\n          <View style={[style.current.leftFiller, fillerStyles.leftFillerStyle]}/>\n          <View style={[style.current.rightFiller, fillerStyles.rightFillerStyle]}/>\n        </View>);\n        }\n    };\n    const _onPress = useCallback(() => {\n        onPress?.(dateData);\n    }, [onPress]);\n    const _onLongPress = useCallback(() => {\n        onLongPress?.(dateData);\n    }, [onLongPress]);\n    const Component = marking ? TouchableWithoutFeedback : TouchableOpacity;\n    return (<Component testID={testID} onPress={_onPress} onLongPress={_onLongPress} disabled={marking?.disableTouchEvent} accessible accessibilityRole={marking?.disableTouchEvent ? undefined : 'button'} accessibilityLabel={accessibilityLabel}>\n      <View style={style.current.wrapper}>\n        {renderFillers()}\n        <View style={containerStyle}>\n          <Text allowFontScaling={false} style={textStyle}>\n            {String(children)}\n          </Text>\n          <Dot theme={theme} color={marking?.dotColor} marked={marking?.marked}/>\n        </View>\n      </View>\n    </Component>);\n};\nexport default PeriodDay;\nPeriodDay.displayName = 'PeriodDay';\nPeriodDay.propTypes = {\n    state: PropTypes.oneOf(['selected', 'disabled', 'inactive', 'today', '']),\n    marking: PropTypes.any,\n    theme: PropTypes.object,\n    onPress: PropTypes.func,\n    onLongPress: PropTypes.func,\n    date: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}