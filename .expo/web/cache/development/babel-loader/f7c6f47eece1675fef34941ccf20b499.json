{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { getSchedule } from \"./RetrieveSchedules\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport studentData from \"../dfmpc-student-placement-system.json\";\nimport AppContext from \"../AppContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 260;\n\nvar Schedule = function Schedule() {\n  var _useState = useState({\n      scheduleList: [{\n        key1: 0,\n        created_at: \"\",\n        hospital: \"\",\n        ID: \"\",\n        specialty_duration: \"\",\n        specialty_id: \"\",\n        student_id: \"\",\n        updated_at: \"\",\n        week_no: \"\"\n      }]\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var onReceive = function onReceive(scheduleList) {\n    setState(function (prevState) {\n      return {\n        scheduleList: prevState.scheduleList = scheduleList\n      };\n    });\n  };\n  var navigation = useNavigation();\n  var scheduleList = studentData.schedules;\n  console.log('Schedule List', scheduleList);\n  generateSchedule(scheduleList);\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"scheduleList\"\n    })\n  });\n};\nvar generateSchedule = function generateSchedule(scheduleList) {\n  var schedulesObj = {};\n  scheduleList.forEach(function (schedule) {\n    var scheduleObj = {};\n    var week = getDateFromWeekNum(schedule.week_no, 2022);\n    var daysInWeek = getDaysInWeek(week.startDate);\n    daysInWeek.forEach(function (day, dayIndex) {\n      scheduleObj = {};\n      if (dayIndex === 0) {\n        scheduleObj.startingDate = true;\n        scheduleObj.color = '#50cebb';\n        scheduleObj.textColor = 'white';\n      } else if (dayIndex > 0 && dayIndex <= 5) {\n        scheduleObj.color = '#70d7c7';\n        scheduleObj.textColor = 'white';\n      } else {\n        scheduleObj.endingDay = true;\n        scheduleObj.color = 'black';\n        scheduleObj.textColor = 'white';\n      }\n\n      schedulesObj[day] = scheduleObj;\n    });\n  });\n\n  console.log('SchedulesObj', schedulesObj);\n  return schedulesObj;\n};\nvar getDaysInWeek = function getDaysInWeek(startDate) {\n  var dates = [];\n\n  for (var i = 1; i < 8; i++) {\n    var currentDate = new Date(startDate);\n    currentDate.setDate(startDate.getDate() + i);\n    var formattedDate = currentDate.toISOString().split('T')[0];\n    dates.push(formattedDate);\n  }\n  return dates;\n};\n\nvar getDateFromWeekNum = function getDateFromWeekNum(weekNum, year) {\n  var d = new Date(year, 0, 1);\n  var endDate = new Date(d.setDate(d.getDate() + weekNum * 7 - 1));\n  var startDate = new Date(year, 0, 1);\n  startDate.setDate(endDate.getDate() - 6);\n  return {\n    startDate: startDate,\n    endDate: endDate\n  };\n};\nvar getStudentSchedule = function getStudentSchedule(scheduleList, studentId) {};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgba(18,33,65,0.8)'\n  },\n  header: {\n    flexDirection: 'row',\n    padding: 10\n  },\n  item: {\n    backgroundColor: 'rgba(18,33,65,0.8)',\n    padding: 20\n  },\n  itemText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: 'white'\n  },\n  contentHide: {\n    color: 'white',\n    backgroundColor: 'rgba(44,59,92,255)',\n    overflow: \"hidden\",\n    maxHeight: 0\n  },\n  content_show: {\n    color: 'white',\n    backgroundColor: 'rgba(44,59,92,255)',\n    marginBottom: 10,\n    marginTop: 10,\n    padding: 30,\n    opacity: 1,\n    maxHeight: 9999\n  }\n});\nexport default Schedule;","map":{"version":3,"names":["React","useState","useNavigation","LinearGradient","getSchedule","SafeAreaView","studentData","AppContext","buttonHeight","textPos","SPACING","AVATAR_SIZE","ICON_SIZE","Schedule","scheduleList","key1","created_at","hospital","ID","specialty_duration","specialty_id","student_id","updated_at","week_no","state","setState","onReceive","prevState","navigation","schedules","console","log","generateSchedule","schedulesObj","forEach","schedule","scheduleObj","week","getDateFromWeekNum","daysInWeek","getDaysInWeek","startDate","day","dayIndex","startingDate","color","textColor","endingDay","dates","i","currentDate","Date","setDate","getDate","formattedDate","toISOString","split","push","weekNum","year","d","endDate","getStudentSchedule","studentId","styles","StyleSheet","create","container","flex","backgroundColor","header","flexDirection","padding","item","itemText","fontSize","fontWeight","contentHide","overflow","maxHeight","content_show","marginBottom","marginTop","opacity"],"sources":["D:/repos/DFMPC-Student-Placement-System/Screens/Schedule.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  Linking,\r\n  TouchableHighlight,\r\n  TouchableOpacity\r\n} from \"react-native\";\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport { getSchedule } from './RetrieveSchedules';\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { ScrollView } from \"react-native-web\";\r\nimport studentData from '../dfmpc-student-placement-system.json'\r\nimport AppContext from '../AppContext';\r\n\r\nconst buttonHeight=50;\r\nconst textPos=buttonHeight/2;\r\nconst SPACING = 20;\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 260;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* THIS PAGE IS CURRENTLY UNDER DEVELOPMENT AND AS SUCH IS UNCOMMENTED*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Schedule = () => {\r\n  const[state,setState]=useState({scheduleList: [{key1:0,\r\n  created_at:\"\",\r\n  hospital:\"\",\r\n  ID:\"\",\r\n  specialty_duration:\"\",\r\n  specialty_id:\"\",\r\n  student_id:\"\",\r\n  updated_at:\"\",\r\n  week_no:\"\",\r\n  }]}) \r\n\r\n\r\n  const onReceive = (scheduleList) => {\r\n\r\n    setState(prevState => ({\r\n      scheduleList: prevState.scheduleList = scheduleList,\r\n\r\n    }));\r\n  }\r\n  //getSchedule(onReceive)\r\n  //console.log(state.scheduleList)\r\n  const navigation = useNavigation();\r\n  const scheduleList = studentData.schedules;\r\n  console.log('Schedule List', scheduleList)\r\n  generateSchedule(scheduleList)\r\n  return (\r\n      <View><Text>scheduleList</Text></View>\r\n    \r\n     );\r\n};\r\n\r\nconst generateSchedule = (scheduleList) => {\r\n  let schedulesObj = {}\r\n  scheduleList.forEach((schedule) => {\r\n\r\n    let scheduleObj = {}\r\n\r\n    const week = getDateFromWeekNum(schedule.week_no,2022);\r\n\r\n    const daysInWeek = getDaysInWeek(week.startDate);\r\n\r\n    daysInWeek.forEach((day, dayIndex) => {\r\n\r\n      scheduleObj = {};\r\n      if (dayIndex === 0) {\r\n        scheduleObj.startingDate = true;\r\n        scheduleObj.color = '#50cebb';\r\n        scheduleObj.textColor = 'white';\r\n      } else if (dayIndex > 0 && dayIndex <= 5) {\r\n        scheduleObj.color = '#70d7c7';\r\n        scheduleObj.textColor = 'white';\r\n      } else {\r\n        scheduleObj.endingDay = true;\r\n        scheduleObj.color = 'black';\r\n        scheduleObj.textColor = 'white';\r\n      }\r\n\r\n      // Object.assign(schedulesObj, scheduleObj);\r\n      schedulesObj[day] = scheduleObj;\r\n\r\n    }) // end of days i week\r\n    \r\n  }) // End of Schedule List\r\n\r\n  console.log('SchedulesObj', schedulesObj)\r\n  return schedulesObj;\r\n}\r\n\r\nconst getDaysInWeek = (startDate) => {\r\n\r\n  let dates = [];\r\n  // console.log('startDate', startDate) \r\n\r\n  for (let i = 1; i < 8; i++) {\r\n    const currentDate = new Date(startDate);\r\n    currentDate.setDate(startDate.getDate() + i);\r\n    const formattedDate = currentDate.toISOString().split('T')[0];\r\n\r\n    dates.push(formattedDate);\r\n  }\r\n  return dates;\r\n  // console.log('DatesList', dates);\r\n}\r\n\r\nconst getDateFromWeekNum = (weekNum, year) => {\r\n  var d = new Date(year, 0, 1);\r\n  \r\n  const endDate = new Date(d.setDate(d.getDate() + (weekNum * 7) - 1));\r\n  const startDate = new Date(year, 0, 1);\r\n  startDate.setDate(endDate.getDate() - 6);\r\n\r\n  return({startDate: startDate,endDate: endDate});\r\n  \r\n}\r\n\r\nconst getStudentSchedule = (scheduleList, studentId) => {\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor:'rgba(18,33,65,0.8)',\r\n  },\r\n  header:{\r\n  flexDirection:'row',\r\n  padding:10,\r\n  },\r\n  item:{\r\n    backgroundColor:'rgba(18,33,65,0.8)',\r\n    padding:20,\r\n  },\r\n  itemText:{\r\n    fontSize: 16,\r\n    fontWeight:'500',\r\n    color:'white'\r\n\r\n\r\n  },\r\n  contentHide: {\r\n    color:'white',\r\n    backgroundColor: 'rgba(44,59,92,255)',\r\n    overflow: \"hidden\",\r\n    maxHeight: 0\r\n\r\n  },\r\n  content_show:{\r\n    color:'white',\r\n    backgroundColor:'rgba(44,59,92,255)',\r\n    marginBottom:10,\r\n    marginTop:10,\r\n    padding:30,\r\n    opacity: 1,\r\n    maxHeight:9999,\r\n   \r\n\r\n  }\r\n});\r\n\r\nexport default Schedule;"],"mappings":"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"},"metadata":{},"sourceType":"module"}