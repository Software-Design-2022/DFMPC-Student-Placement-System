{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function getNotificationChannelGroupAsync(groupId) {\n  return _regeneratorRuntime.async(function getNotificationChannelGroupAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.debug('Notification channels feature is only supported on Android.');\n          return _context.abrupt(\"return\", null);\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"mappings":";AAEA,eAAe,SAAeA,gCAAgC,CAC5DC,OAAe;EAAA;IAAA;MAAA;QAAA;UAEfC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;UAAC,iCACtE,IAAI;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA","names":["getNotificationChannelGroupAsync","groupId","console","debug"],"sourceRoot":"","sources":["../src/getNotificationChannelGroupAsync.ts"],"sourcesContent":["import { NotificationChannelGroup } from './NotificationChannelGroupManager.types';\n\nexport default async function getNotificationChannelGroupAsync(\n  groupId: string\n): Promise<NotificationChannelGroup | null> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}