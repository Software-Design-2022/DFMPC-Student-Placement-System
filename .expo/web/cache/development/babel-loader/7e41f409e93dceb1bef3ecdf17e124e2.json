{"ast":null,"code":"export function addEventListener(Module) {\n  var _Module$addEventListe;\n\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  var eventName = rest[0],\n      handler = rest[1];\n  var removed = false;\n  var subscription = (_Module$addEventListe = Module.addEventListener(eventName, handler)) !== null && _Module$addEventListe !== void 0 ? _Module$addEventListe : {\n    remove: function remove() {\n      if (removed) {\n        return;\n      }\n\n      Module.removeEventListener(eventName, handler);\n      removed = true;\n    }\n  };\n  return subscription;\n}\nexport function addListener(Module) {\n  var _Module$addListener;\n\n  for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    rest[_key2 - 1] = arguments[_key2];\n  }\n\n  var eventName = rest[0],\n      handler = rest[1];\n  var removed = false;\n  var subscription = (_Module$addListener = Module.addListener(eventName, handler)) !== null && _Module$addListener !== void 0 ? _Module$addListener : {\n    remove: function remove() {\n      if (removed) {\n        return;\n      }\n\n      Module.removeEventListener(eventName, handler);\n      removed = true;\n    }\n  };\n  return subscription;\n}","map":{"version":3,"mappings":"AAKA,OAAO,SAASA,gBAAT,CAOLC,MAPK,EAO2D;EAAA;;EAAA,kCAAlDC,IAAkD;IAAlDA,IAAkD,UAAlDA,GAAkDC,eAAlDD;EAAkD;;EAChE,IAAOE,SAAP,GAA6BF,IAA7B;EAAA,IAAkBG,OAAlB,GAA6BH,IAA7B;EAEA,IAAII,OAAO,GAAG,KAAd;EAEA,IAAMC,YAAY,4BAAGN,MAAM,CAACD,gBAAPC,CAAwBG,SAAxBH,EAAmCI,OAAnCJ,CAAH,yEAAkD;IAClEO,MAAM,EAAE,kBAAM;MACZ,IAAIF,OAAJ,EAAa;QACX;MACD;;MAEDL,MAAM,CAACQ,mBAAPR,CAA2BG,SAA3BH,EAAsCI,OAAtCJ;MACAK,OAAO,GAAG,IAAVA;IACD;EARiE,CAApE;EAWA,OAAOC,YAAP;AACD;AAED,OAAO,SAASG,WAAT,CAKLT,MALK,EAKsD;EAAA;;EAAA,mCAA7CC,IAA6C;IAA7CA,IAA6C,WAA7CA,GAA6CC,gBAA7CD;EAA6C;;EAC3D,IAAOE,SAAP,GAA6BF,IAA7B;EAAA,IAAkBG,OAAlB,GAA6BH,IAA7B;EAEA,IAAII,OAAO,GAAG,KAAd;EAEA,IAAMC,YAAY,0BAAGN,MAAM,CAACS,WAAPT,CAAmBG,SAAnBH,EAA8BI,OAA9BJ,CAAH,qEAA6C;IAC7DO,MAAM,EAAE,kBAAM;MACZ,IAAIF,OAAJ,EAAa;QACX;MACD;;MAEDL,MAAM,CAACQ,mBAAPR,CAA2BG,SAA3BH,EAAsCI,OAAtCJ;MACAK,OAAO,GAAG,IAAVA;IACD;EAR4D,CAA/D;EAWA,OAAOC,YAAP;AACD","names":["addEventListener","Module","rest","arguments","eventName","handler","removed","subscription","remove","removeEventListener","addListener"],"sources":["addEventListener.tsx"],"sourcesContent":["import type {\n  NativeEventSubscription,\n  EmitterSubscription,\n} from 'react-native';\n\nexport function addEventListener<\n  T extends {\n    addEventListener: (\n      ...args: any\n    ) => NativeEventSubscription | EmitterSubscription;\n    removeEventListener: (...args: any) => void;\n  }\n>(Module: T, ...rest: Parameters<typeof Module.addEventListener>) {\n  const [eventName, handler] = rest;\n\n  let removed = false;\n\n  const subscription = Module.addEventListener(eventName, handler) ?? {\n    remove: () => {\n      if (removed) {\n        return;\n      }\n\n      Module.removeEventListener(eventName, handler);\n      removed = true;\n    },\n  };\n\n  return subscription;\n}\n\nexport function addListener<\n  T extends {\n    addListener: (...args: any) => EmitterSubscription;\n    removeEventListener: (...args: any) => void;\n  }\n>(Module: T, ...rest: Parameters<typeof Module.addListener>) {\n  const [eventName, handler] = rest;\n\n  let removed = false;\n\n  const subscription = Module.addListener(eventName, handler) ?? {\n    remove: () => {\n      if (removed) {\n        return;\n      }\n\n      Module.removeEventListener(eventName, handler);\n      removed = true;\n    },\n  };\n\n  return subscription;\n}\n"]},"metadata":{},"sourceType":"module"}