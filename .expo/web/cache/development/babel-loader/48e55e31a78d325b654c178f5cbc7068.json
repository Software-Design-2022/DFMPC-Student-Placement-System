{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function getNotificationChannelsAsync() {\n  return _regeneratorRuntime.async(function getNotificationChannelsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.debug('Notification channels feature is only supported on Android.');\n          return _context.abrupt(\"return\", []);\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"mappings":";AAEA,eAAe,SAAeA,4BAA4B;EAAA;IAAA;MAAA;QAAA;UACxDC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;UAAC,iCACtE,EAAE;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA","names":["getNotificationChannelsAsync","console","debug"],"sourceRoot":"","sources":["../src/getNotificationChannelsAsync.ts"],"sourcesContent":["import { NotificationChannel } from './NotificationChannelManager.types';\n\nexport default async function getNotificationChannelsAsync(): Promise<NotificationChannel[]> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return [];\n}\n"]},"metadata":{},"sourceType":"module"}