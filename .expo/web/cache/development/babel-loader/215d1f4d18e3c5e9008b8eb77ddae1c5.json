{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DataTableCell from \"./DataTableCell\";\nimport DataTableHeader from \"./DataTableHeader\";\nimport DataTableTitle from \"./DataTableTitle\";\nimport DataTablePagination from \"./DataTablePagination\";\nimport DataTableRow from \"./DataTableRow\";\n\nvar DataTable = function DataTable(_ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.container, style]\n  }), children);\n};\n\nDataTable.Header = DataTableHeader;\nDataTable.Title = DataTableTitle;\nDataTable.Row = DataTableRow;\nDataTable.Cell = DataTableCell;\nDataTable.Pagination = DataTablePagination;\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%'\n  }\n});\nexport default DataTable;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,aAAP;AACA,OAAOC,eAAP;AAIA,OAAOC,cAAP;AAIA,OAAOC,mBAAP;AAKA,OAAOC,YAAP;;AAyEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,IAAGC,QAAH,QAAGA,QAAH;EAAA,IAAaC,KAAb,QAAaA,KAAb;EAAA,IAAuBC,IAAvB;;EAAA,OAChBT,oBAACU,IAAD,eAAUD,IAAV;IAAgBD,KAAK,EAAE,CAACG,MAAM,CAACC,SAAR,EAAmBJ,KAAnB;EAAvB,IACGD,QADH,CADgB;AAAlB;;AAOAD,SAAS,CAACO,MAAVP,GAAmBJ,eAAnBI;AAGAA,SAAS,CAACQ,KAAVR,GAAkBH,cAAlBG;AAGAA,SAAS,CAACS,GAAVT,GAAgBD,YAAhBC;AAGAA,SAAS,CAACU,IAAVV,GAAiBL,aAAjBK;AAGAA,SAAS,CAACW,UAAVX,GAAuBF,mBAAvBE;AAEA,IAAMK,MAAM,GAAGO,UAAU,CAACC,MAAXD,CAAkB;EAC/BN,SAAS,EAAE;IACTQ,KAAK,EAAE;EADE;AADoB,CAAlBF,CAAf;AAMA,eAAeZ,SAAf","names":["React","DataTableCell","DataTableHeader","DataTableTitle","DataTablePagination","DataTableRow","DataTable","children","style","rest","View","styles","container","Header","Title","Row","Cell","Pagination","StyleSheet","create","width"],"sources":["DataTable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport DataTableCell from './DataTableCell';\nimport DataTableHeader, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableHeader as _DataTableHeader,\n} from './DataTableHeader';\nimport DataTableTitle, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableTitle as _DataTableTitle,\n} from './DataTableTitle';\nimport DataTablePagination, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTablePagination as _DataTablePagination,\n} from './DataTablePagination';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport DataTableRow, { DataTableRow as _DataTableRow } from './DataTableRow';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTable`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * Data tables allow displaying sets of data.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"large\" src=\"screenshots/data-table.png\" />\n *     <figcaption>Data table</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const optionsPerPage = [2, 3, 4];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState<number>(0);\n *   const [itemsPerPage, setItemsPerPage] = React.useState(optionsPerPage[0]);\n *\n *   React.useEffect(() => {\n *     setPage(0);\n *   }, [itemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Header>\n *         <DataTable.Title>Dessert</DataTable.Title>\n *         <DataTable.Title numeric>Calories</DataTable.Title>\n *         <DataTable.Title numeric>Fat</DataTable.Title>\n *       </DataTable.Header>\n *\n *       <DataTable.Row>\n *         <DataTable.Cell>Frozen yogurt</DataTable.Cell>\n *         <DataTable.Cell numeric>159</DataTable.Cell>\n *         <DataTable.Cell numeric>6.0</DataTable.Cell>\n *       </DataTable.Row>\n *\n *       <DataTable.Row>\n *         <DataTable.Cell>Ice cream sandwich</DataTable.Cell>\n *         <DataTable.Cell numeric>237</DataTable.Cell>\n *         <DataTable.Cell numeric>8.0</DataTable.Cell>\n *       </DataTable.Row>\n *\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={3}\n *         onPageChange={(page) => setPage(page)}\n *         label=\"1-2 of 6\"\n *         optionsPerPage={optionsPerPage}\n *         itemsPerPage={itemsPerPage}\n *         setItemsPerPage={setItemsPerPage}\n *         showFastPagination\n *         optionsLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n *}\n *\n * export default MyComponent;\n * ```\n */\nconst DataTable = ({ children, style, ...rest }: Props) => (\n  <View {...rest} style={[styles.container, style]}>\n    {children}\n  </View>\n);\n\n// @component ./DataTableHeader.tsx\nDataTable.Header = DataTableHeader;\n\n// @component ./DataTableTitle.tsx\nDataTable.Title = DataTableTitle;\n\n// @component ./DataTableRow.tsx\nDataTable.Row = DataTableRow;\n\n// @component ./DataTableCell.tsx\nDataTable.Cell = DataTableCell;\n\n// @component ./DataTablePagination.tsx\nDataTable.Pagination = DataTablePagination;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n  },\n});\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}