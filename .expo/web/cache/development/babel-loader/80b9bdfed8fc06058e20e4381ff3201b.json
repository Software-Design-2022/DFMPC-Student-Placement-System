{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { firebase } from \"../firebase\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport function getSchedule(onReceiveList) {\n  var schedules;\n  return _regeneratorRuntime.async(function getSchedule$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          schedules = [];\n          firebase.firestore().collection(\"schedules\").where(\"student_id\" == authUserID).get().then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n              schedules.push({\n                key1: schedules.length + 1,\n                created_at: doc.data().created_at,\n                hospital_ID: doc.data().hospital_id,\n                ID: doc.data().id,\n                specialty_duration: doc.data().specialty_duration,\n                start_date: doc.data().start_date,\n                end_date: doc.data().end_date,\n                specialty_id: doc.data().specialty_id,\n                student_id: doc.data().student_id,\n                updated_at: doc.data().updated_at,\n                week_no: doc.data().week_no\n              });\n            });\n          });\n          onReceiveList(schedules);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["firebase","v4","uuidv4","getSchedule","onReceiveList","schedules","firestore","collection","where","authUserID","get","then","snapshot","forEach","doc","push","key1","length","created_at","data","hospital_ID","hospital_id","ID","id","specialty_duration","start_date","end_date","specialty_id","student_id","updated_at","week_no"],"sources":["C:/Users/nokno/OneDrive/Documents/GitHub/DFMPC-Student-Placement-System/Screens/RetrieveSchedules.js"],"sourcesContent":["import { firebase } from \"../firebase\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport async function getSchedule(onReceiveList) {\r\n  var schedules = [];\r\n  firebase\r\n    .firestore()\r\n    .collection(\"schedules\")\r\n    .where(\"student_id\" == authUserID)\r\n    .get()\r\n    .then((snapshot) => {\r\n      snapshot.forEach((doc) => {\r\n        schedules.push({\r\n          key1: schedules.length + 1,\r\n          created_at: doc.data().created_at,\r\n          hospital_ID: doc.data().hospital_id,\r\n          ID: doc.data().id,\r\n          specialty_duration: doc.data().specialty_duration,\r\n          start_date: doc.data().start_date,\r\n          end_date: doc.data().end_date,\r\n          specialty_id: doc.data().specialty_id,\r\n          student_id: doc.data().student_id,\r\n          updated_at: doc.data().updated_at,\r\n          week_no: doc.data().week_no,\r\n        });\r\n      });\r\n    });\r\n  onReceiveList(schedules);\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAT;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAO,SAAeC,WAAf,CAA2BC,aAA3B;EAAA;EAAA;IAAA;MAAA;QAAA;UACDC,SADC,GACW,EADX;UAELL,QAAQ,CACLM,SADH,GAEGC,UAFH,CAEc,WAFd,EAGGC,KAHH,CAGS,gBAAgBC,UAHzB,EAIGC,GAJH,GAKGC,IALH,CAKQ,UAACC,QAAD,EAAc;YAClBA,QAAQ,CAACC,OAAT,CAAiB,UAACC,GAAD,EAAS;cACxBT,SAAS,CAACU,IAAV,CAAe;gBACbC,IAAI,EAAEX,SAAS,CAACY,MAAV,GAAmB,CADZ;gBAEbC,UAAU,EAAEJ,GAAG,CAACK,IAAJ,GAAWD,UAFV;gBAGbE,WAAW,EAAEN,GAAG,CAACK,IAAJ,GAAWE,WAHX;gBAIbC,EAAE,EAAER,GAAG,CAACK,IAAJ,GAAWI,EAJF;gBAKbC,kBAAkB,EAAEV,GAAG,CAACK,IAAJ,GAAWK,kBALlB;gBAMbC,UAAU,EAAEX,GAAG,CAACK,IAAJ,GAAWM,UANV;gBAObC,QAAQ,EAAEZ,GAAG,CAACK,IAAJ,GAAWO,QAPR;gBAQbC,YAAY,EAAEb,GAAG,CAACK,IAAJ,GAAWQ,YARZ;gBASbC,UAAU,EAAEd,GAAG,CAACK,IAAJ,GAAWS,UATV;gBAUbC,UAAU,EAAEf,GAAG,CAACK,IAAJ,GAAWU,UAVV;gBAWbC,OAAO,EAAEhB,GAAG,CAACK,IAAJ,GAAWW;cAXP,CAAf;YAaD,CAdD;UAeD,CArBH;UAsBA1B,aAAa,CAACC,SAAD,CAAb;;QAxBK;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}