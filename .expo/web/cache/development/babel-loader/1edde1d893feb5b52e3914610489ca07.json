{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport BackgroundNotificationTasksModule from \"./BackgroundNotificationTasksModule.native\";\nexport default function registerTaskAsync(taskName) {\n  return _regeneratorRuntime.async(function registerTaskAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (BackgroundNotificationTasksModule.registerTaskAsync) {\n            _context.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('Notifications', 'registerTaskAsync');\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(BackgroundNotificationTasksModule.registerTaskAsync(taskName));\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"mappings":";AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,iCAAiC;AAExC,eAAe,SAAeC,iBAAiB,CAACC,QAAgB;EAAA;IAAA;MAAA;QAAA;UAAA,IACzDF,iCAAiC,CAACC,iBAAiB;YAAA;YAAA;UAAA;UAAA,MAChD,IAAIF,mBAAmB,CAAC,eAAe,EAAE,mBAAmB,CAAC;QAAA;UAAA;UAAA,iCAGxDC,iCAAiC,CAACC,iBAAiB,CAACC,QAAQ,CAAC;QAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA","names":["UnavailabilityError","BackgroundNotificationTasksModule","registerTaskAsync","taskName"],"sourceRoot":"","sources":["../src/registerTaskAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport BackgroundNotificationTasksModule from './BackgroundNotificationTasksModule.native';\n\nexport default async function registerTaskAsync(taskName: string): Promise<null> {\n  if (!BackgroundNotificationTasksModule.registerTaskAsync) {\n    throw new UnavailabilityError('Notifications', 'registerTaskAsync');\n  }\n\n  return await BackgroundNotificationTasksModule.registerTaskAsync(taskName);\n}\n"]},"metadata":{},"sourceType":"module"}