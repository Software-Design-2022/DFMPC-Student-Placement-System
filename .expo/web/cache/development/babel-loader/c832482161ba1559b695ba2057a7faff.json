{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { SafeAreaViewBase } from \"react-native-web/dist/index\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport \"../global\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\nvar image = {\n  uri: \"https://reactjs.org/logo-og.png\"\n};\nvar witsLogo = {\n  uri: \"https://www.wits.ac.za/media/wits-university/news-and-events/images/logos-and-icons/Wits-Logo-Mono-Neg-Legal-600x300.png\"\n};\nvar DATA = [{\n  id: \"58694a0f-3da1-471f-bd96-145571e29d72\",\n  title: \"Calendar\",\n  destination: \"CalendarView\",\n  image: require(\"./images/calendar.png\")\n}, {\n  id: \"08694a0f-3da1-471f-bd96-145571e29d72\",\n  title: \"Settings\",\n  destination: \"SettingsView\",\n  image: require(\"./images/settings.png\")\n}, {\n  id: \"3ac68afc-c605-48d3-a4f8-fbd91aa97f63\",\n  title: \"Logout\",\n  destination: \"Login\",\n  image: require(\"./images/logout.png\")\n}];\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress,\n      backgroundColor = _ref.backgroundColor,\n      textColor = _ref.textColor;\n  return _jsx(TouchableOpacity, {\n    onPress: onPress,\n    style: [styles.item, backgroundColor],\n    children: _jsx(Text, {\n      style: [styles.title, textColor],\n      children: item.title\n    })\n  });\n};\n\nvar Dashboard = function Dashboard() {\n  var navigation = useNavigation();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      SetName = _useState4[1];\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    var backgroundColor = item.id === selectedId ? \"#7fb4e1\" : \"#bcbcbc\";\n    var color = item.id === selectedId ? \"black\" : \"black\";\n    return _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        padding: SPACING,\n        backgroundColor: \" rgba(255,255,255,0.1)\",\n        flex: 1,\n        borderRadius: 8,\n        marginBottom: SPACING,\n        shadowColor: \"rgba(0,0,0,1)\",\n        shadowOffset: {\n          width: 0,\n          height: 10\n        },\n        paddingTop: 10,\n        shadowOpacity: 1,\n        shadowRadius: 20\n      },\n      children: [_jsx(View, {\n        children: _jsx(Image, {\n          source: item.image,\n          style: {\n            width: AVATAR_SIZE,\n            height: AVATAR_SIZE,\n            borderRadius: AVATAR_SIZE,\n            marginRight: SPACING / 2\n          }\n        })\n      }), _jsx(View, {\n        style: {\n          width: \"75%\",\n          flex: 1\n        },\n        children: _jsx(LinearGradient, {\n          colors: [\"rgba(30,55,108,1)\", \" rgba(30,55,108,0.8)\", \"rgba(30,55,108,1)\"],\n          style: styles.linearGradient,\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              navigation.navigate(item.destination);\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: item.title\n            })\n          })\n        })\n      })]\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: \" rgba(255,255,255,1)\"\n    },\n    children: [_jsxs(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \" rgba(30,55,108,1)\",\n        borderRadius: 15\n      },\n      children: [_jsx(View, {\n        style: {\n          height: ICON_SIZE + 20,\n          backgroundColor: \"  rgba(30,55,108,1)\",\n          borderRadius: 10\n        },\n        children: _jsxs(View, {\n          children: [_jsx(Image, {\n            style: {\n              width: 240,\n              height: 120,\n              position: \"absolute\",\n              left: SPACING,\n              top: -10,\n              resizeMode: \"stretch\",\n              marginRight: SPACING / 2\n            },\n            source: witsLogo\n          }), _jsx(TouchableHighlight, {\n            onPress: function onPress() {\n              navigation.navigate(\"SettingsView\");\n            },\n            children: _jsx(Image, {\n              style: {\n                width: ICON_SIZE,\n                height: ICON_SIZE,\n                position: \"absolute\",\n                resizeMode: \"cover\",\n                right: 0,\n                top: 10,\n                borderRadius: ICON_SIZE,\n                marginRight: SPACING / 2,\n                borderWidth: 0,\n                borderColor: \"rgba(0,0,0,1)\",\n                backgroundColor: \"rgba(255,255,255,1)\",\n                shadowOffset: {\n                  height: 10,\n                  shadowColor: \"black\"\n                },\n                shadowOpacity: 1,\n                shadowRadius: 20\n              },\n              source: {\n                uri: authUserProfilePic\n              }\n            })\n          })]\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 6.5,\n          backgroundColor: \" rgba(18,33,65,0.8)\"\n        },\n        children: _jsx(FlatList, {\n          contentContainerStyle: {\n            padding: SPACING / 8,\n            paddingTop: SPACING\n          },\n          data: DATA,\n          renderItem: renderItem,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          extraData: selectedId\n        })\n      })]\n    }), _jsx(View, {\n      style: {\n        backgroundColor: \"rgba(18,33,65,1)\"\n      },\n      children: _jsx(TouchableHighlight, {\n        underlayColor: \"rgba(0,0,0,0)\",\n        onPress: function onPress() {\n          navigation.navigate(\"PanicButton\");\n        },\n        children: _jsx(Image, {\n          style: {\n            width: ICON_SIZE,\n            height: ICON_SIZE,\n            marginLeft: width - ICON_SIZE,\n            right: 0,\n            bottom: 0,\n            backgroundColor: \"rgba(18,33,65,1)\",\n            borderRadius: ICON_SIZE,\n            marginRight: SPACING / 2\n          },\n          source: require(\"./images/emergency.gif\")\n        })\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    backgroundColor: \"#7fb4e1\",\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  },\n  ButtonStyle: {\n    height: AVATAR_SIZE\n  },\n  linearGradient: {\n    height: AVATAR_SIZE,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderRadius: 5,\n    paddingTop: AVATAR_SIZE / 4\n  },\n  buttonText: {\n    fontSize: AVATAR_SIZE / 3,\n    fontWeight: \"700\",\n    textAlign: \"center\",\n    color: \" rgba(128,163,198,0.8)\",\n    backgroundColor: \"transparent\"\n  },\n  stretch: {\n    width: 400,\n    height: 200,\n    resizeMode: \"stretch\"\n  },\n  BackGround: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"stretch\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    zIndex: 0\n  },\n  input: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 15,\n    marginTop: 10\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/Screens/Dashboard.js"],"names":["React","useState","useNavigation","SafeAreaViewBase","Dimensions","get","width","height","LinearGradient","buttonHeight","textPos","SPACING","AVATAR_SIZE","ICON_SIZE","image","uri","witsLogo","DATA","id","title","destination","require","Item","item","onPress","backgroundColor","textColor","styles","Dashboard","navigation","selectedId","setSelectedId","name","SetName","renderItem","color","flexDirection","padding","flex","borderRadius","marginBottom","shadowColor","shadowOffset","paddingTop","shadowOpacity","shadowRadius","marginRight","linearGradient","navigate","buttonText","position","left","top","resizeMode","right","borderWidth","borderColor","authUserProfilePic","marginLeft","bottom","StyleSheet","create","container","marginTop","StatusBar","currentHeight","marginVertical","marginHorizontal","fontSize","ButtonStyle","paddingLeft","paddingRight","fontWeight","textAlign","stretch","BackGround","zIndex","input","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport {\r\n  StatusBar,\r\n  FlatList,\r\n  Image,\r\n  Animated,\r\n  Text,\r\n  View,\r\n  Dimensions,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  TouchableHighlight,\r\n  Easing,\r\n  SafeAreaViewBase,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nconst { width, height } = Dimensions.get(\"screen\");\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport \"../global\";\r\n\r\n//Constants for use with UI scaling\r\nconst buttonHeight = 50;\r\nconst textPos = buttonHeight / 2;\r\nconst SPACING = 20;\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 80;\r\nconst image = { uri: \"https://reactjs.org/logo-og.png\" };\r\nconst witsLogo = {\r\n  uri: \"https://www.wits.ac.za/media/wits-university/news-and-events/images/logos-and-icons/Wits-Logo-Mono-Neg-Legal-600x300.png\",\r\n};\r\n\r\n//data to be displayed in the flatlist\r\nconst DATA = [\r\n  {\r\n    id: \"58694a0f-3da1-471f-bd96-145571e29d72\",\r\n    title: \"Calendar\",\r\n    destination: \"CalendarView\",\r\n    image: require(\"./images/calendar.png\"),\r\n  },\r\n\r\n  {\r\n    id: \"08694a0f-3da1-471f-bd96-145571e29d72\",\r\n    title: \"Settings\",\r\n    destination: \"SettingsView\",\r\n    image: require(\"./images/settings.png\"),\r\n  },\r\n\r\n  {\r\n    id: \"3ac68afc-c605-48d3-a4f8-fbd91aa97f63\",\r\n    title: \"Logout\",\r\n    destination: \"Login\",\r\n    image: require(\"./images/logout.png\"),\r\n  },\r\n];\r\n\r\n// creates it so each item has a touchable button with correct title\r\nconst Item = ({ item, onPress, backgroundColor, textColor }) => (\r\n  <TouchableOpacity onPress={onPress} style={[styles.item, backgroundColor]}>\r\n    <Text style={[styles.title, textColor]}>{item.title}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst Dashboard = () => {\r\n  //Dashboard screen\r\n\r\n  //use navigation\r\n  const navigation = useNavigation();\r\n\r\n  //change colour of tapped button\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [name, SetName] = useState(\"\");\r\n\r\n  // first render function that renders the vertical flatlist\r\n  const renderItem = ({ item }) => {\r\n    const backgroundColor = item.id === selectedId ? \"#7fb4e1\" : \"#bcbcbc\";\r\n    const color = item.id === selectedId ? \"black\" : \"black\";\r\n    return (\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          padding: SPACING,\r\n          backgroundColor: \" rgba(255,255,255,0.1)\",\r\n          flex: 1,\r\n          borderRadius: 8,\r\n          marginBottom: SPACING,\r\n          shadowColor: \"rgba(0,0,0,1)\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 10,\r\n          },\r\n          paddingTop: 10,\r\n          shadowOpacity: 1,\r\n          shadowRadius: 20,\r\n        }}\r\n      >\r\n        <View>\r\n          <Image\r\n            //create an image with the appropriate locally stored icon\r\n            source={item.image}\r\n            style={{\r\n              width: AVATAR_SIZE,\r\n              height: AVATAR_SIZE,\r\n              borderRadius: AVATAR_SIZE,\r\n              marginRight: SPACING / 2,\r\n            }}\r\n          ></Image>\r\n        </View>\r\n        <View style={{ width: \"75%\", flex: 1 }}>\r\n          <LinearGradient\r\n            //add a button to each item to allow navigation\r\n            colors={[\r\n              \"rgba(30,55,108,1)\",\r\n              \" rgba(30,55,108,0.8)\",\r\n              \"rgba(30,55,108,1)\",\r\n            ]}\r\n            style={styles.linearGradient}\r\n          >\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                navigation.navigate(item.destination);\r\n              }}\r\n            >\r\n              <Text style={styles.buttonText}>{item.title}</Text>\r\n            </TouchableOpacity>\r\n          </LinearGradient>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    // main render function that dictates styling\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: \" rgba(255,255,255,1)\" }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: \" rgba(30,55,108,1)\",\r\n          borderRadius: 15,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: ICON_SIZE + 20,\r\n            backgroundColor: \"  rgba(30,55,108,1)\",\r\n            borderRadius: 10,\r\n          }}\r\n        >\r\n          <View>\r\n            <Image\r\n              style={{\r\n                width: 240,\r\n                height: 120,\r\n                position: \"absolute\",\r\n                left: SPACING,\r\n                top: -10,\r\n                resizeMode: \"stretch\",\r\n                marginRight: SPACING / 2,\r\n              }}\r\n              source={witsLogo}\r\n            />\r\n\r\n            <TouchableHighlight\r\n              onPress={() => {\r\n                navigation.navigate(\"SettingsView\");\r\n              }}\r\n            >\r\n              <Image\r\n                style={{\r\n                  width: ICON_SIZE,\r\n                  height: ICON_SIZE,\r\n                  position: \"absolute\",\r\n                  resizeMode: \"cover\",\r\n                  right: 0,\r\n                  top: 10,\r\n                  borderRadius: ICON_SIZE,\r\n                  marginRight: SPACING / 2,\r\n                  borderWidth: 0,\r\n                  borderColor: \"rgba(0,0,0,1)\",\r\n                  backgroundColor: \"rgba(255,255,255,1)\",\r\n                  shadowOffset: {\r\n                    height: 10,\r\n                    shadowColor: \"black\",\r\n                  },\r\n                  shadowOpacity: 1,\r\n                  shadowRadius: 20,\r\n                }}\r\n                source={{ uri: authUserProfilePic }}\r\n              />\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      \r\n        <View style={{ flex: 6.5, backgroundColor: \" rgba(18,33,65,0.8)\" }}>\r\n          <FlatList\r\n            contentContainerStyle={{\r\n              padding: SPACING / 8,\r\n              paddingTop: SPACING,\r\n            }}\r\n            data={DATA}\r\n            renderItem={renderItem}\r\n            keyExtractor={(item) => item.id}\r\n            extraData={selectedId}\r\n          />\r\n        </View>\r\n      </View>\r\n      {\r\n        <View style={{ backgroundColor: \"rgba(18,33,65,1)\" }}>\r\n          <TouchableHighlight\r\n            underlayColor=\"rgba(0,0,0,0)\"\r\n            onPress={() => {\r\n              navigation.navigate(\"PanicButton\");\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                width: ICON_SIZE,\r\n                height: ICON_SIZE,\r\n                marginLeft: width - ICON_SIZE,\r\n                right: 0,\r\n                bottom: 0,\r\n                backgroundColor: \"rgba(18,33,65,1)\",\r\n                borderRadius: ICON_SIZE,\r\n                marginRight: SPACING / 2,\r\n              }}\r\n              source={require(\"./images/emergency.gif\")}\r\n            />\r\n          </TouchableHighlight>\r\n        </View>\r\n      }\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: StatusBar.currentHeight || 0,\r\n  },\r\n  item: {\r\n    backgroundColor: \"#7fb4e1\",\r\n    padding: 20,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n  },\r\n  ButtonStyle: {\r\n    height: AVATAR_SIZE,\r\n  },\r\n  linearGradient: {\r\n    height: AVATAR_SIZE,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderRadius: 5,\r\n    paddingTop: AVATAR_SIZE / 4,\r\n  },\r\n  buttonText: {\r\n    fontSize: AVATAR_SIZE / 3,\r\n    fontWeight: \"700\",\r\n    textAlign: \"center\",\r\n    color: \" rgba(128,163,198,0.8)\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  stretch: {\r\n    width: 400,\r\n    height: 200,\r\n    resizeMode: \"stretch\",\r\n  },\r\n  BackGround: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    resizeMode: \"stretch\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 0,\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    borderRadius: 15,\r\n    marginTop: 10,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}