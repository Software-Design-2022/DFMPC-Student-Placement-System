{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport map from 'lodash/map';\nimport isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\nimport XDate from 'xdate';\nimport React, { useCallback, useContext, useEffect, useMemo, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport { useDidUpdate } from \"../hooks\";\nimport { getMoment } from \"../momentResolver\";\nimport { isToday, isGTE, sameDate } from \"../dateutils\";\nimport { parseDate } from \"../interface\";\nimport { getDefaultLocale } from \"../services\";\nimport { UpdateSources, todayString } from \"./commons\";\nimport constants from \"../commons/constants\";\nimport styleConstructor from \"./style\";\nimport Context from \"./Context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar viewabilityConfig = {\n  itemVisiblePercentThreshold: 20\n};\nvar AgendaList = function AgendaList(props) {\n  var _sections$;\n  var theme = props.theme,\n    sections = props.sections,\n    scrollToNextEvent = props.scrollToNextEvent,\n    _props$viewOffset = props.viewOffset,\n    viewOffset = _props$viewOffset === void 0 ? 0 : _props$viewOffset,\n    avoidDateUpdates = props.avoidDateUpdates,\n    onScroll = props.onScroll,\n    onMomentumScrollBegin = props.onMomentumScrollBegin,\n    onMomentumScrollEnd = props.onMomentumScrollEnd,\n    onScrollToIndexFailed = props.onScrollToIndexFailed,\n    renderSectionHeader = props.renderSectionHeader,\n    sectionStyle = props.sectionStyle,\n    keyExtractor = props.keyExtractor,\n    dayFormatter = props.dayFormatter,\n    _props$dayFormat = props.dayFormat,\n    dayFormat = _props$dayFormat === void 0 ? 'dddd, MMM d' : _props$dayFormat,\n    useMoment = props.useMoment,\n    _props$markToday = props.markToday,\n    markToday = _props$markToday === void 0 ? true : _props$markToday,\n    onViewableItemsChanged = props.onViewableItemsChanged;\n  var _useContext = useContext(Context),\n    date = _useContext.date,\n    updateSource = _useContext.updateSource,\n    setDate = _useContext.setDate,\n    setDisabled = _useContext.setDisabled;\n  var style = useRef(styleConstructor(theme));\n  var list = useRef();\n  var _topSection = useRef((_sections$ = sections[0]) == null ? void 0 : _sections$.title);\n  var didScroll = useRef(false);\n  var sectionScroll = useRef(false);\n  var sectionHeight = useRef(0);\n  useEffect(function () {\n    if (date !== _topSection.current) {\n      setTimeout(function () {\n        scrollToSection(date);\n      }, 500);\n    }\n  }, []);\n  useDidUpdate(function () {\n    if (updateSource !== UpdateSources.LIST_DRAG && updateSource !== UpdateSources.CALENDAR_INIT) {\n      scrollToSection(date);\n    }\n  }, [date]);\n  var getSectionIndex = function getSectionIndex(date) {\n    var i;\n    map(sections, function (section, index) {\n      if (section.title === date) {\n        i = index;\n      }\n    });\n    return i;\n  };\n  var getNextSectionIndex = function getNextSectionIndex(date) {\n    var i = 0;\n    for (var j = 1; j < sections.length; j++) {\n      var _sections, _sections$j;\n      var prev = parseDate((_sections = sections[j - 1]) == null ? void 0 : _sections.title);\n      var next = parseDate((_sections$j = sections[j]) == null ? void 0 : _sections$j.title);\n      var cur = new XDate(date);\n      if (isGTE(cur, prev) && isGTE(next, cur)) {\n        i = sameDate(prev, cur) ? j - 1 : j;\n        break;\n      } else if (isGTE(cur, next)) {\n        i = j;\n      }\n    }\n    return i;\n  };\n  var getSectionTitle = useCallback(function (title) {\n    if (!title) return;\n    var sectionTitle = title;\n    if (dayFormatter) {\n      sectionTitle = dayFormatter(title);\n    } else if (dayFormat) {\n      if (useMoment) {\n        var moment = getMoment();\n        sectionTitle = moment(title).format(dayFormat);\n      } else {\n        sectionTitle = new XDate(title).toString(dayFormat);\n      }\n    }\n    if (markToday) {\n      var string = getDefaultLocale().today || todayString;\n      var today = isToday(title);\n      sectionTitle = today ? string + \", \" + sectionTitle : sectionTitle;\n    }\n    return sectionTitle;\n  }, []);\n  var scrollToSection = useCallback(debounce(function (d) {\n    var sectionIndex = scrollToNextEvent ? getNextSectionIndex(d) : getSectionIndex(d);\n    if (isUndefined(sectionIndex)) {\n      return;\n    }\n    if (list != null && list.current && sectionIndex !== undefined) {\n      var _sections$sectionInde;\n      sectionScroll.current = true;\n      _topSection.current = (_sections$sectionInde = sections[sectionIndex]) == null ? void 0 : _sections$sectionInde.title;\n      list == null ? void 0 : list.current.scrollToLocation({\n        animated: true,\n        sectionIndex: sectionIndex,\n        itemIndex: 0,\n        viewPosition: 0,\n        viewOffset: (constants.isAndroid ? sectionHeight.current : 0) + viewOffset\n      });\n    }\n  }, 1000, {\n    leading: false,\n    trailing: true\n  }), [viewOffset, sections]);\n  var _onViewableItemsChanged = useCallback(function (info) {\n    if (info != null && info.viewableItems && !sectionScroll.current) {\n      var topSection = get(info == null ? void 0 : info.viewableItems[0], 'section.title');\n      if (topSection && topSection !== _topSection.current) {\n        _topSection.current = topSection;\n        if (didScroll.current && !avoidDateUpdates) {\n          setDate == null ? void 0 : setDate(_topSection.current, UpdateSources.LIST_DRAG);\n        }\n      }\n    }\n    onViewableItemsChanged == null ? void 0 : onViewableItemsChanged(info);\n  }, [avoidDateUpdates, setDate, onViewableItemsChanged]);\n  var _onScroll = useCallback(function (event) {\n    if (!didScroll.current) {\n      didScroll.current = true;\n      scrollToSection.cancel();\n    }\n    onScroll == null ? void 0 : onScroll(event);\n  }, [onScroll]);\n  var _onMomentumScrollBegin = useCallback(function (event) {\n    setDisabled == null ? void 0 : setDisabled(true);\n    onMomentumScrollBegin == null ? void 0 : onMomentumScrollBegin(event);\n  }, [onMomentumScrollBegin, setDisabled]);\n  var _onMomentumScrollEnd = useCallback(function (event) {\n    sectionScroll.current = false;\n    setDisabled == null ? void 0 : setDisabled(false);\n    onMomentumScrollEnd == null ? void 0 : onMomentumScrollEnd(event);\n  }, [onMomentumScrollEnd, setDisabled]);\n  var headerTextStyle = useMemo(function () {\n    return [style.current.sectionText, sectionStyle];\n  }, [sectionStyle]);\n  var _onScrollToIndexFailed = useCallback(function (info) {\n    if (onScrollToIndexFailed) {\n      onScrollToIndexFailed(info);\n    } else {\n      console.log('onScrollToIndexFailed info: ', info);\n    }\n  }, [onScrollToIndexFailed]);\n  var onHeaderLayout = useCallback(function (event) {\n    sectionHeight.current = event.nativeEvent.layout.height;\n  }, []);\n  var _renderSectionHeader = useCallback(function (info) {\n    var _info$section;\n    var title = info == null ? void 0 : (_info$section = info.section) == null ? void 0 : _info$section.title;\n    if (renderSectionHeader) {\n      return renderSectionHeader(title);\n    }\n    var headerTitle = getSectionTitle(title);\n    return _jsx(AgendaSectionHeader, {\n      title: headerTitle,\n      style: headerTextStyle,\n      onLayout: onHeaderLayout\n    });\n  }, [headerTextStyle]);\n  var _keyExtractor = useCallback(function (item, index) {\n    return isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n  }, [keyExtractor]);\n  return _jsx(SectionList, _objectSpread(_objectSpread({\n    stickySectionHeadersEnabled: true\n  }, props), {}, {\n    ref: list,\n    keyExtractor: _keyExtractor,\n    showsVerticalScrollIndicator: false,\n    onViewableItemsChanged: _onViewableItemsChanged,\n    viewabilityConfig: viewabilityConfig,\n    renderSectionHeader: _renderSectionHeader,\n    onScroll: _onScroll,\n    onMomentumScrollBegin: _onMomentumScrollBegin,\n    onMomentumScrollEnd: _onMomentumScrollEnd,\n    onScrollToIndexFailed: _onScrollToIndexFailed\n  }));\n};\n\nfunction areTextPropsEqual(prev, next) {\n  return isEqual(prev.style, next.style) && prev.title === next.title;\n}\nvar AgendaSectionHeader = React.memo(function (props) {\n  return _jsx(Text, {\n    allowFontScaling: false,\n    style: props.style,\n    onLayout: props.onLayout,\n    children: props.title\n  });\n}, areTextPropsEqual);\nexport default AgendaList;\nAgendaList.displayName = 'AgendaList';\nAgendaList.propTypes = {\n  dayFormat: PropTypes.string,\n  dayFormatter: PropTypes.func,\n  useMoment: PropTypes.bool,\n  markToday: PropTypes.bool,\n  sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  avoidDateUpdates: PropTypes.bool\n};","map":{"version":3,"names":["PropTypes","get","map","isFunction","isUndefined","debounce","isEqual","XDate","React","useCallback","useContext","useEffect","useMemo","useRef","useDidUpdate","getMoment","isToday","isGTE","sameDate","parseDate","getDefaultLocale","UpdateSources","todayString","constants","styleConstructor","Context","viewabilityConfig","itemVisiblePercentThreshold","AgendaList","props","theme","sections","scrollToNextEvent","viewOffset","avoidDateUpdates","onScroll","onMomentumScrollBegin","onMomentumScrollEnd","onScrollToIndexFailed","renderSectionHeader","sectionStyle","keyExtractor","dayFormatter","dayFormat","useMoment","markToday","onViewableItemsChanged","date","updateSource","setDate","setDisabled","style","list","_topSection","title","didScroll","sectionScroll","sectionHeight","current","setTimeout","scrollToSection","LIST_DRAG","CALENDAR_INIT","getSectionIndex","i","section","index","getNextSectionIndex","j","length","prev","next","cur","getSectionTitle","sectionTitle","moment","format","toString","string","today","d","sectionIndex","undefined","scrollToLocation","animated","itemIndex","viewPosition","isAndroid","leading","trailing","_onViewableItemsChanged","info","viewableItems","topSection","_onScroll","event","cancel","_onMomentumScrollBegin","_onMomentumScrollEnd","headerTextStyle","sectionText","_onScrollToIndexFailed","console","log","onHeaderLayout","nativeEvent","layout","height","_renderSectionHeader","headerTitle","_keyExtractor","item","String","areTextPropsEqual","AgendaSectionHeader","memo","onLayout","displayName","propTypes","func","bool","oneOfType","object","number","array"],"sources":["D:/repos/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/expandableCalendar/agendaList.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport map from 'lodash/map';\nimport isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\nimport XDate from 'xdate';\nimport React, { useCallback, useContext, useEffect, useMemo, useRef } from 'react';\nimport { Text, SectionList } from 'react-native';\nimport { useDidUpdate } from '../hooks';\nimport { getMoment } from '../momentResolver';\nimport { isToday, isGTE, sameDate } from '../dateutils';\nimport { parseDate } from '../interface';\nimport { getDefaultLocale } from '../services';\nimport { UpdateSources, todayString } from './commons';\nimport constants from '../commons/constants';\nimport styleConstructor from './style';\nimport Context from './Context';\nconst viewabilityConfig = {\n    itemVisiblePercentThreshold: 20 // 50 means if 50% of the item is visible\n};\n/**\n * @description: AgendaList component\n * @note: Should be wrapped with 'CalendarProvider'\n * @extends: SectionList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nconst AgendaList = (props) => {\n    const { theme, sections, scrollToNextEvent, viewOffset = 0, avoidDateUpdates, onScroll, onMomentumScrollBegin, onMomentumScrollEnd, onScrollToIndexFailed, renderSectionHeader, sectionStyle, keyExtractor, dayFormatter, dayFormat = 'dddd, MMM d', useMoment, markToday = true, onViewableItemsChanged, } = props;\n    const { date, updateSource, setDate, setDisabled } = useContext(Context);\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const _topSection = useRef(sections[0]?.title);\n    const didScroll = useRef(false);\n    const sectionScroll = useRef(false);\n    const sectionHeight = useRef(0);\n    useEffect(() => {\n        if (date !== _topSection.current) {\n            setTimeout(() => {\n                scrollToSection(date);\n            }, 500);\n        }\n    }, []);\n    useDidUpdate(() => {\n        // NOTE: on first init data should set first section to the current date!!!\n        if (updateSource !== UpdateSources.LIST_DRAG && updateSource !== UpdateSources.CALENDAR_INIT) {\n            scrollToSection(date);\n        }\n    }, [date]);\n    const getSectionIndex = (date) => {\n        let i;\n        map(sections, (section, index) => {\n            // NOTE: sections titles should match current date format!!!\n            if (section.title === date) {\n                i = index;\n            }\n        });\n        return i;\n    };\n    const getNextSectionIndex = (date) => {\n        let i = 0;\n        for (let j = 1; j < sections.length; j++) {\n            const prev = parseDate(sections[j - 1]?.title);\n            const next = parseDate(sections[j]?.title);\n            const cur = new XDate(date);\n            if (isGTE(cur, prev) && isGTE(next, cur)) {\n                i = sameDate(prev, cur) ? j - 1 : j;\n                break;\n            }\n            else if (isGTE(cur, next)) {\n                i = j;\n            }\n        }\n        return i;\n    };\n    const getSectionTitle = useCallback((title) => {\n        if (!title)\n            return;\n        let sectionTitle = title;\n        if (dayFormatter) {\n            sectionTitle = dayFormatter(title);\n        }\n        else if (dayFormat) {\n            if (useMoment) {\n                const moment = getMoment();\n                sectionTitle = moment(title).format(dayFormat);\n            }\n            else {\n                sectionTitle = new XDate(title).toString(dayFormat);\n            }\n        }\n        if (markToday) {\n            const string = getDefaultLocale().today || todayString;\n            const today = isToday(title);\n            sectionTitle = today ? `${string}, ${sectionTitle}` : sectionTitle;\n        }\n        return sectionTitle;\n    }, []);\n    const scrollToSection = useCallback(debounce((d) => {\n        const sectionIndex = scrollToNextEvent ? getNextSectionIndex(d) : getSectionIndex(d);\n        if (isUndefined(sectionIndex)) {\n            return;\n        }\n        if (list?.current && sectionIndex !== undefined) {\n            sectionScroll.current = true; // to avoid setDate() in onViewableItemsChanged\n            _topSection.current = sections[sectionIndex]?.title;\n            list?.current.scrollToLocation({\n                animated: true,\n                sectionIndex: sectionIndex,\n                itemIndex: 0,\n                viewPosition: 0,\n                viewOffset: (constants.isAndroid ? sectionHeight.current : 0) + viewOffset\n            });\n        }\n    }, 1000, { leading: false, trailing: true }), [viewOffset, sections]);\n    const _onViewableItemsChanged = useCallback((info) => {\n        if (info?.viewableItems && !sectionScroll.current) {\n            const topSection = get(info?.viewableItems[0], 'section.title');\n            if (topSection && topSection !== _topSection.current) {\n                _topSection.current = topSection;\n                if (didScroll.current && !avoidDateUpdates) {\n                    // to avoid setDate() on first load (while setting the initial context.date value)\n                    setDate?.(_topSection.current, UpdateSources.LIST_DRAG);\n                }\n            }\n        }\n        onViewableItemsChanged?.(info);\n    }, [avoidDateUpdates, setDate, onViewableItemsChanged]);\n    const _onScroll = useCallback((event) => {\n        if (!didScroll.current) {\n            didScroll.current = true;\n            scrollToSection.cancel();\n        }\n        onScroll?.(event);\n    }, [onScroll]);\n    const _onMomentumScrollBegin = useCallback((event) => {\n        setDisabled?.(true);\n        onMomentumScrollBegin?.(event);\n    }, [onMomentumScrollBegin, setDisabled]);\n    const _onMomentumScrollEnd = useCallback((event) => {\n        // when list momentum ends AND when scrollToSection scroll ends\n        sectionScroll.current = false;\n        setDisabled?.(false);\n        onMomentumScrollEnd?.(event);\n    }, [onMomentumScrollEnd, setDisabled]);\n    const headerTextStyle = useMemo(() => [style.current.sectionText, sectionStyle], [sectionStyle]);\n    const _onScrollToIndexFailed = useCallback((info) => {\n        if (onScrollToIndexFailed) {\n            onScrollToIndexFailed(info);\n        }\n        else {\n            console.log('onScrollToIndexFailed info: ', info);\n        }\n    }, [onScrollToIndexFailed]);\n    const onHeaderLayout = useCallback((event) => {\n        sectionHeight.current = event.nativeEvent.layout.height;\n    }, []);\n    const _renderSectionHeader = useCallback((info) => {\n        const title = info?.section?.title;\n        if (renderSectionHeader) {\n            return renderSectionHeader(title);\n        }\n        const headerTitle = getSectionTitle(title);\n        return <AgendaSectionHeader title={headerTitle} style={headerTextStyle} onLayout={onHeaderLayout}/>;\n    }, [headerTextStyle]);\n    const _keyExtractor = useCallback((item, index) => {\n        return isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n    }, [keyExtractor]);\n    return (<SectionList stickySectionHeadersEnabled {...props} ref={list} keyExtractor={_keyExtractor} showsVerticalScrollIndicator={false} onViewableItemsChanged={_onViewableItemsChanged} viewabilityConfig={viewabilityConfig} renderSectionHeader={_renderSectionHeader} onScroll={_onScroll} onMomentumScrollBegin={_onMomentumScrollBegin} onMomentumScrollEnd={_onMomentumScrollEnd} onScrollToIndexFailed={_onScrollToIndexFailed}/>);\n    // _getItemLayout = (data, index) => {\n    //   return {length: constants.screenWidth, offset: constants.screenWidth * index, index};\n    // }\n};\nfunction areTextPropsEqual(prev, next) {\n    return isEqual(prev.style, next.style) && prev.title === next.title;\n}\nconst AgendaSectionHeader = React.memo((props) => {\n    return (<Text allowFontScaling={false} style={props.style} onLayout={props.onLayout}>\n      {props.title}\n    </Text>);\n}, areTextPropsEqual);\nexport default AgendaList;\nAgendaList.displayName = 'AgendaList';\nAgendaList.propTypes = {\n    dayFormat: PropTypes.string,\n    dayFormatter: PropTypes.func,\n    useMoment: PropTypes.bool,\n    markToday: PropTypes.bool,\n    sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    avoidDateUpdates: PropTypes.bool\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}