{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport constants from \"../commons/constants\";\nimport { page, isGTE, isLTE, sameMonth } from \"../dateutils\";\nimport { xdateToData, parseDate, toMarkingFormat } from \"../interface\";\nimport { getState } from \"../day-state-manager\";\nimport { extractComponentProps } from \"../componentUpdater\";\nimport { WEEK_NUMBER } from \"../testIDs\";\nimport styleConstructor from \"./style\";\nimport CalendarHeader from \"./header\";\nimport Day from \"./day/index\";\nimport BasicDay from \"./day/basic\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Calendar = function Calendar(props) {\n  var initialDate = props.initialDate,\n      current = props.current,\n      theme = props.theme,\n      disableMonthChange = props.disableMonthChange,\n      allowSelectionOutOfRange = props.allowSelectionOutOfRange,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      onDayPress = props.onDayPress,\n      onDayLongPress = props.onDayLongPress,\n      hideExtraDays = props.hideExtraDays,\n      markedDates = props.markedDates,\n      firstDay = props.firstDay,\n      showSixWeeks = props.showSixWeeks,\n      customHeader = props.customHeader,\n      headerStyle = props.headerStyle,\n      displayLoadingIndicator = props.displayLoadingIndicator,\n      testID = props.testID,\n      enableSwipeMonths = props.enableSwipeMonths,\n      accessibilityElementsHidden = props.accessibilityElementsHidden,\n      importantForAccessibility = props.importantForAccessibility,\n      onMonthChange = props.onMonthChange,\n      onVisibleMonthsChange = props.onVisibleMonthsChange,\n      propsStyle = props.style;\n\n  var _useState = useState(current || initialDate ? parseDate(current || initialDate) : new XDate()),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMonth = _useState2[0],\n      setCurrentMonth = _useState2[1];\n\n  var style = useRef(styleConstructor(theme));\n  var header = useRef();\n  var isMounted = useRef(false);\n  useEffect(function () {\n    if (initialDate) {\n      setCurrentMonth(parseDate(initialDate));\n    }\n  }, [initialDate]);\n  useEffect(function () {\n    if (isMounted.current) {\n      var _currentMonth = currentMonth.clone();\n\n      onMonthChange == null ? void 0 : onMonthChange(xdateToData(_currentMonth));\n      onVisibleMonthsChange == null ? void 0 : onVisibleMonthsChange([xdateToData(_currentMonth)]);\n    } else {\n      isMounted.current = true;\n    }\n  }, [currentMonth]);\n\n  var updateMonth = function updateMonth(newMonth) {\n    if (sameMonth(newMonth, currentMonth)) {\n      return;\n    }\n\n    setCurrentMonth(newMonth);\n  };\n\n  var addMonth = useCallback(function (count) {\n    var newMonth = currentMonth.clone().addMonths(count, true);\n    updateMonth(newMonth);\n  }, [currentMonth, updateMonth]);\n  var handleDayInteraction = useCallback(function (date, interaction) {\n    var day = parseDate(date);\n    var min = parseDate(minDate);\n    var max = parseDate(maxDate);\n\n    if (allowSelectionOutOfRange || !(min && !isGTE(day, min)) && !(max && !isLTE(day, max))) {\n      if (!disableMonthChange) {\n        updateMonth(day);\n      }\n\n      if (interaction) {\n        interaction(date);\n      }\n    }\n  }, [minDate, maxDate, allowSelectionOutOfRange, disableMonthChange, updateMonth]);\n  var onPressDay = useCallback(function (date) {\n    if (date) handleDayInteraction(date, onDayPress);\n  }, [handleDayInteraction, onDayPress]);\n  var onLongPressDay = useCallback(function (date) {\n    if (date) handleDayInteraction(date, onDayLongPress);\n  }, [handleDayInteraction, onDayLongPress]);\n  var onSwipeLeft = useCallback(function () {\n    var _header$current;\n\n    (_header$current = header.current) == null ? void 0 : _header$current.onPressRight();\n  }, [header]);\n  var onSwipeRight = useCallback(function () {\n    var _header$current2;\n\n    (_header$current2 = header.current) == null ? void 0 : _header$current2.onPressLeft();\n  }, [header]);\n\n  var _onSwipe = useCallback(function (gestureName) {\n    var SWIPE_UP = swipeDirections.SWIPE_UP,\n        SWIPE_DOWN = swipeDirections.SWIPE_DOWN,\n        SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n        SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT;\n\n    switch (gestureName) {\n      case SWIPE_UP:\n      case SWIPE_DOWN:\n        break;\n\n      case SWIPE_LEFT:\n        constants.isRTL ? onSwipeRight() : onSwipeLeft();\n        break;\n\n      case SWIPE_RIGHT:\n        constants.isRTL ? onSwipeLeft() : onSwipeRight();\n        break;\n    }\n  }, [onSwipeLeft, onSwipeRight]);\n\n  var renderWeekNumber = function renderWeekNumber(weekNumber) {\n    return _jsx(View, {\n      style: style.current.dayContainer,\n      children: _jsx(BasicDay, {\n        marking: {\n          disabled: true,\n          disableTouchEvent: true\n        },\n        theme: theme,\n        testID: WEEK_NUMBER + \"-\" + weekNumber,\n        children: weekNumber\n      }, \"week-\" + weekNumber)\n    }, \"week-container-\" + weekNumber);\n  };\n\n  var renderDay = function renderDay(day, id) {\n    var dayProps = extractComponentProps(Day, props);\n\n    if (!sameMonth(day, currentMonth) && hideExtraDays) {\n      return _jsx(View, {\n        style: style.current.emptyDayContainer\n      }, id);\n    }\n\n    return _jsx(View, {\n      style: style.current.dayContainer,\n      children: _jsx(Day, _objectSpread(_objectSpread({}, dayProps), {}, {\n        date: toMarkingFormat(day),\n        state: getState(day, currentMonth, props),\n        marking: markedDates == null ? void 0 : markedDates[toMarkingFormat(day)],\n        onPress: onPressDay,\n        onLongPress: onLongPressDay\n      }))\n    }, id);\n  };\n\n  var renderWeek = function renderWeek(days, id) {\n    var week = [];\n    days.forEach(function (day, id2) {\n      week.push(renderDay(day, id2));\n    }, _this);\n\n    if (props.showWeekNumbers) {\n      week.unshift(renderWeekNumber(days[days.length - 1].getWeek()));\n    }\n\n    return _jsx(View, {\n      style: style.current.week,\n      children: week\n    }, id);\n  };\n\n  var renderMonth = function renderMonth() {\n    var shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n    var days = page(currentMonth, firstDay, shouldShowSixWeeks);\n    var weeks = [];\n\n    while (days.length) {\n      weeks.push(renderWeek(days.splice(0, 7), weeks.length));\n    }\n\n    return _jsx(View, {\n      style: style.current.monthView,\n      children: weeks\n    });\n  };\n\n  var renderHeader = function renderHeader() {\n    var indicator;\n\n    if (currentMonth) {\n      var lastMonthOfDay = toMarkingFormat(currentMonth.clone().addMonths(1, true).setDate(1).addDays(-1));\n\n      if (displayLoadingIndicator && !(markedDates != null && markedDates[lastMonthOfDay])) {\n        indicator = true;\n      }\n    }\n\n    var headerProps = extractComponentProps(CalendarHeader, props);\n    var ref = customHeader ? undefined : header;\n    var CustomHeader = customHeader;\n    var HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n    return _jsx(HeaderComponent, _objectSpread(_objectSpread({}, headerProps), {}, {\n      testID: testID,\n      style: headerStyle,\n      ref: ref,\n      month: currentMonth,\n      addMonth: addMonth,\n      displayLoadingIndicator: indicator\n    }));\n  };\n\n  var GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n  var swipeProps = {\n    onSwipe: function onSwipe(direction) {\n      return _onSwipe(direction);\n    }\n  };\n  var gestureProps = enableSwipeMonths ? swipeProps : undefined;\n  return _jsx(GestureComponent, _objectSpread(_objectSpread({}, gestureProps), {}, {\n    children: _jsxs(View, {\n      style: [style.current.container, propsStyle],\n      accessibilityElementsHidden: accessibilityElementsHidden,\n      importantForAccessibility: importantForAccessibility,\n      children: [renderHeader(), renderMonth()]\n    })\n  }));\n};\n\nexport default Calendar;\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarHeader.propTypes), Day.propTypes), {}, {\n  theme: PropTypes.object,\n  firstDay: PropTypes.number,\n  displayLoadingIndicator: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  current: PropTypes.string,\n  initialDate: PropTypes.string,\n  minDate: PropTypes.string,\n  maxDate: PropTypes.string,\n  markedDates: PropTypes.object,\n  hideExtraDays: PropTypes.bool,\n  showSixWeeks: PropTypes.bool,\n  onDayPress: PropTypes.func,\n  onDayLongPress: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  onVisibleMonthsChange: PropTypes.func,\n  disableMonthChange: PropTypes.bool,\n  enableSwipeMonths: PropTypes.bool,\n  disabledByDefault: PropTypes.bool,\n  headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  customHeader: PropTypes.any,\n  allowSelectionOutOfRange: PropTypes.bool\n});\nCalendar.defaultProps = {\n  enableSwipeMonths: false\n};","map":{"version":3,"sources":["C:/Users/callu/Desktop/3rd Year/Software Design Project/App/DFMPC-Student-Placement-System/node_modules/react-native-calendars/src/calendar/index.js"],"names":["PropTypes","XDate","React","useRef","useState","useEffect","useCallback","GestureRecognizer","swipeDirections","constants","page","isGTE","isLTE","sameMonth","xdateToData","parseDate","toMarkingFormat","getState","extractComponentProps","WEEK_NUMBER","styleConstructor","CalendarHeader","Day","BasicDay","Calendar","props","initialDate","current","theme","disableMonthChange","allowSelectionOutOfRange","minDate","maxDate","onDayPress","onDayLongPress","hideExtraDays","markedDates","firstDay","showSixWeeks","customHeader","headerStyle","displayLoadingIndicator","testID","enableSwipeMonths","accessibilityElementsHidden","importantForAccessibility","onMonthChange","onVisibleMonthsChange","propsStyle","style","currentMonth","setCurrentMonth","header","isMounted","_currentMonth","clone","updateMonth","newMonth","addMonth","count","addMonths","handleDayInteraction","date","interaction","day","min","max","onPressDay","onLongPressDay","onSwipeLeft","onPressRight","onSwipeRight","onPressLeft","onSwipe","gestureName","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","isRTL","renderWeekNumber","weekNumber","dayContainer","disabled","disableTouchEvent","renderDay","id","dayProps","emptyDayContainer","renderWeek","days","week","forEach","id2","push","showWeekNumbers","unshift","length","getWeek","renderMonth","shouldShowSixWeeks","weeks","splice","monthView","renderHeader","indicator","lastMonthOfDay","setDate","addDays","headerProps","ref","undefined","CustomHeader","HeaderComponent","GestureComponent","View","swipeProps","direction","gestureProps","container","displayName","propTypes","object","number","bool","oneOfType","array","string","func","disabledByDefault","any","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,WAA7C,QAAgE,OAAhE;;AAGA,OAAOC,iBAAP,IAA4BC,eAA5B,QAAmD,6BAAnD;AACA,OAAOC,SAAP;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,SAA7B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,eAAjC;AACA,SAASC,QAAT;AACA,SAASC,qBAAT;AAEA,SAASC,WAAT;AACA,OAAOC,gBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,GAAP;AACA,OAAOC,QAAP;;;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB,MAAQC,WAAR,GAAwXD,KAAxX,CAAQC,WAAR;AAAA,MAAqBC,OAArB,GAAwXF,KAAxX,CAAqBE,OAArB;AAAA,MAA8BC,KAA9B,GAAwXH,KAAxX,CAA8BG,KAA9B;AAAA,MAAqCC,kBAArC,GAAwXJ,KAAxX,CAAqCI,kBAArC;AAAA,MAAyDC,wBAAzD,GAAwXL,KAAxX,CAAyDK,wBAAzD;AAAA,MAAmFC,OAAnF,GAAwXN,KAAxX,CAAmFM,OAAnF;AAAA,MAA4FC,OAA5F,GAAwXP,KAAxX,CAA4FO,OAA5F;AAAA,MAAqGC,UAArG,GAAwXR,KAAxX,CAAqGQ,UAArG;AAAA,MAAiHC,cAAjH,GAAwXT,KAAxX,CAAiHS,cAAjH;AAAA,MAAiIC,aAAjI,GAAwXV,KAAxX,CAAiIU,aAAjI;AAAA,MAAgJC,WAAhJ,GAAwXX,KAAxX,CAAgJW,WAAhJ;AAAA,MAA6JC,QAA7J,GAAwXZ,KAAxX,CAA6JY,QAA7J;AAAA,MAAuKC,YAAvK,GAAwXb,KAAxX,CAAuKa,YAAvK;AAAA,MAAqLC,YAArL,GAAwXd,KAAxX,CAAqLc,YAArL;AAAA,MAAmMC,WAAnM,GAAwXf,KAAxX,CAAmMe,WAAnM;AAAA,MAAgNC,uBAAhN,GAAwXhB,KAAxX,CAAgNgB,uBAAhN;AAAA,MAAyOC,MAAzO,GAAwXjB,KAAxX,CAAyOiB,MAAzO;AAAA,MAAiPC,iBAAjP,GAAwXlB,KAAxX,CAAiPkB,iBAAjP;AAAA,MAAoQC,2BAApQ,GAAwXnB,KAAxX,CAAoQmB,2BAApQ;AAAA,MAAiSC,yBAAjS,GAAwXpB,KAAxX,CAAiSoB,yBAAjS;AAAA,MAA4TC,aAA5T,GAAwXrB,KAAxX,CAA4TqB,aAA5T;AAAA,MAA2UC,qBAA3U,GAAwXtB,KAAxX,CAA2UsB,qBAA3U;AAAA,MAAyWC,UAAzW,GAAwXvB,KAAxX,CAAkWwB,KAAlW;;AACA,kBAAwC7C,QAAQ,CAACuB,OAAO,IAAID,WAAX,GAAyBX,SAAS,CAACY,OAAO,IAAID,WAAZ,CAAlC,GAA6D,IAAIzB,KAAJ,EAA9D,CAAhD;AAAA;AAAA,MAAOiD,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAMF,KAAK,GAAG9C,MAAM,CAACiB,gBAAgB,CAACQ,KAAD,CAAjB,CAApB;AACA,MAAMwB,MAAM,GAAGjD,MAAM,EAArB;AACA,MAAMkD,SAAS,GAAGlD,MAAM,CAAC,KAAD,CAAxB;AACAE,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIqB,WAAJ,EAAiB;AACbyB,MAAAA,eAAe,CAACpC,SAAS,CAACW,WAAD,CAAV,CAAf;AACH;AACJ,GAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;AAKArB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIgD,SAAS,CAAC1B,OAAd,EAAuB;AAEnB,UAAM2B,aAAa,GAAGJ,YAAY,CAACK,KAAb,EAAtB;;AACAT,MAAAA,aAAa,QAAb,YAAAA,aAAa,CAAGhC,WAAW,CAACwC,aAAD,CAAd,CAAb;AACAP,MAAAA,qBAAqB,QAArB,YAAAA,qBAAqB,CAAG,CAACjC,WAAW,CAACwC,aAAD,CAAZ,CAAH,CAArB;AACH,KALD,MAMK;AACDD,MAAAA,SAAS,CAAC1B,OAAV,GAAoB,IAApB;AACH;AACJ,GAVQ,EAUN,CAACuB,YAAD,CAVM,CAAT;;AAWA,MAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAC9B,QAAI5C,SAAS,CAAC4C,QAAD,EAAWP,YAAX,CAAb,EAAuC;AACnC;AACH;;AACDC,IAAAA,eAAe,CAACM,QAAD,CAAf;AACH,GALD;;AAMA,MAAMC,QAAQ,GAAGpD,WAAW,CAAC,UAACqD,KAAD,EAAW;AACpC,QAAMF,QAAQ,GAAGP,YAAY,CAACK,KAAb,GAAqBK,SAArB,CAA+BD,KAA/B,EAAsC,IAAtC,CAAjB;AACAH,IAAAA,WAAW,CAACC,QAAD,CAAX;AACH,GAH2B,EAGzB,CAACP,YAAD,EAAeM,WAAf,CAHyB,CAA5B;AAIA,MAAMK,oBAAoB,GAAGvD,WAAW,CAAC,UAACwD,IAAD,EAAOC,WAAP,EAAuB;AAC5D,QAAMC,GAAG,GAAGjD,SAAS,CAAC+C,IAAD,CAArB;AACA,QAAMG,GAAG,GAAGlD,SAAS,CAACgB,OAAD,CAArB;AACA,QAAMmC,GAAG,GAAGnD,SAAS,CAACiB,OAAD,CAArB;;AACA,QAAIF,wBAAwB,IAAI,EAAEmC,GAAG,IAAI,CAACtD,KAAK,CAACqD,GAAD,EAAMC,GAAN,CAAf,KAA8B,EAAEC,GAAG,IAAI,CAACtD,KAAK,CAACoD,GAAD,EAAME,GAAN,CAAf,CAA9D,EAA0F;AACtF,UAAI,CAACrC,kBAAL,EAAyB;AACrB2B,QAAAA,WAAW,CAACQ,GAAD,CAAX;AACH;;AACD,UAAID,WAAJ,EAAiB;AACbA,QAAAA,WAAW,CAACD,IAAD,CAAX;AACH;AACJ;AACJ,GAZuC,EAYrC,CAAC/B,OAAD,EAAUC,OAAV,EAAmBF,wBAAnB,EAA6CD,kBAA7C,EAAiE2B,WAAjE,CAZqC,CAAxC;AAaA,MAAMW,UAAU,GAAG7D,WAAW,CAAC,UAACwD,IAAD,EAAU;AACrC,QAAIA,IAAJ,EACID,oBAAoB,CAACC,IAAD,EAAO7B,UAAP,CAApB;AACP,GAH6B,EAG3B,CAAC4B,oBAAD,EAAuB5B,UAAvB,CAH2B,CAA9B;AAIA,MAAMmC,cAAc,GAAG9D,WAAW,CAAC,UAACwD,IAAD,EAAU;AACzC,QAAIA,IAAJ,EACID,oBAAoB,CAACC,IAAD,EAAO5B,cAAP,CAApB;AACP,GAHiC,EAG/B,CAAC2B,oBAAD,EAAuB3B,cAAvB,CAH+B,CAAlC;AAIA,MAAMmC,WAAW,GAAG/D,WAAW,CAAC,YAAM;AAAA;;AAElC,uBAAA8C,MAAM,CAACzB,OAAP,qCAAgB2C,YAAhB;AACH,GAH8B,EAG5B,CAAClB,MAAD,CAH4B,CAA/B;AAIA,MAAMmB,YAAY,GAAGjE,WAAW,CAAC,YAAM;AAAA;;AAEnC,wBAAA8C,MAAM,CAACzB,OAAP,sCAAgB6C,WAAhB;AACH,GAH+B,EAG7B,CAACpB,MAAD,CAH6B,CAAhC;;AAIA,MAAMqB,QAAO,GAAGnE,WAAW,CAAC,UAACoE,WAAD,EAAiB;AACzC,QAAQC,QAAR,GAA0DnE,eAA1D,CAAQmE,QAAR;AAAA,QAAkBC,UAAlB,GAA0DpE,eAA1D,CAAkBoE,UAAlB;AAAA,QAA8BC,UAA9B,GAA0DrE,eAA1D,CAA8BqE,UAA9B;AAAA,QAA0CC,WAA1C,GAA0DtE,eAA1D,CAA0CsE,WAA1C;;AACA,YAAQJ,WAAR;AACI,WAAKC,QAAL;AACA,WAAKC,UAAL;AACI;;AACJ,WAAKC,UAAL;AACIpE,QAAAA,SAAS,CAACsE,KAAV,GAAkBR,YAAY,EAA9B,GAAmCF,WAAW,EAA9C;AACA;;AACJ,WAAKS,WAAL;AACIrE,QAAAA,SAAS,CAACsE,KAAV,GAAkBV,WAAW,EAA7B,GAAkCE,YAAY,EAA9C;AACA;AATR;AAWH,GAb0B,EAaxB,CAACF,WAAD,EAAcE,YAAd,CAbwB,CAA3B;;AAcA,MAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAgB;AACrC,WAAQ,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEhC,KAAK,CAACtB,OAAN,CAAcuD,YAA3B;AAAA,gBACR,KAAC,QAAD;AAAqC,QAAA,OAAO,EAAE;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,iBAAiB,EAAE;AAArC,SAA9C;AAEA,QAAA,KAAK,EAAExD,KAFP;AAEc,QAAA,MAAM,EAAKT,WAAL,SAAoB8D,UAFxC;AAAA,kBAGGA;AAHH,mBAAuBA,UAAvB;AADQ,2BAAgEA,UAAhE,CAAR;AAOH,GARD;;AASA,MAAMI,SAAS,GAAG,SAAZA,SAAY,CAACrB,GAAD,EAAMsB,EAAN,EAAa;AAC3B,QAAMC,QAAQ,GAAGrE,qBAAqB,CAACI,GAAD,EAAMG,KAAN,CAAtC;;AACA,QAAI,CAACZ,SAAS,CAACmD,GAAD,EAAMd,YAAN,CAAV,IAAiCf,aAArC,EAAoD;AAChD,aAAO,KAAC,IAAD;AAAe,QAAA,KAAK,EAAEc,KAAK,CAACtB,OAAN,CAAc6D;AAApC,SAAWF,EAAX,CAAP;AACH;;AACD,WAAQ,KAAC,IAAD;AAAM,MAAA,KAAK,EAAErC,KAAK,CAACtB,OAAN,CAAcuD,YAA3B;AAAA,gBACR,KAAC,GAAD,kCAASK,QAAT;AAAmB,QAAA,IAAI,EAAEvE,eAAe,CAACgD,GAAD,CAAxC;AAA+C,QAAA,KAAK,EAAE/C,QAAQ,CAAC+C,GAAD,EAAMd,YAAN,EAAoBzB,KAApB,CAA9D;AAA0F,QAAA,OAAO,EAAEW,WAAF,oBAAEA,WAAW,CAAGpB,eAAe,CAACgD,GAAD,CAAlB,CAA9G;AAAwI,QAAA,OAAO,EAAEG,UAAjJ;AAA6J,QAAA,WAAW,EAAEC;AAA1K;AADQ,OAA8CkB,EAA9C,CAAR;AAGH,GARD;;AASA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOJ,EAAP,EAAc;AAC7B,QAAMK,IAAI,GAAG,EAAb;AACAD,IAAAA,IAAI,CAACE,OAAL,CAAa,UAAC5B,GAAD,EAAM6B,GAAN,EAAc;AACvBF,MAAAA,IAAI,CAACG,IAAL,CAAUT,SAAS,CAACrB,GAAD,EAAM6B,GAAN,CAAnB;AACH,KAFD,EAEG,KAFH;;AAGA,QAAIpE,KAAK,CAACsE,eAAV,EAA2B;AACvBJ,MAAAA,IAAI,CAACK,OAAL,CAAahB,gBAAgB,CAACU,IAAI,CAACA,IAAI,CAACO,MAAL,GAAc,CAAf,CAAJ,CAAsBC,OAAtB,EAAD,CAA7B;AACH;;AACD,WAAQ,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEjD,KAAK,CAACtB,OAAN,CAAcgE,IAA3B;AAAA,gBACPA;AADO,OAAsCL,EAAtC,CAAR;AAGH,GAXD;;AAYA,MAAMa,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAMC,kBAAkB,GAAG9D,YAAY,IAAI,CAACH,aAA5C;AACA,QAAMuD,IAAI,GAAGhF,IAAI,CAACwC,YAAD,EAAeb,QAAf,EAAyB+D,kBAAzB,CAAjB;AACA,QAAMC,KAAK,GAAG,EAAd;;AACA,WAAOX,IAAI,CAACO,MAAZ,EAAoB;AAChBI,MAAAA,KAAK,CAACP,IAAN,CAAWL,UAAU,CAACC,IAAI,CAACY,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoBD,KAAK,CAACJ,MAA1B,CAArB;AACH;;AACD,WAAO,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEhD,KAAK,CAACtB,OAAN,CAAc4E,SAA3B;AAAA,gBAAuCF;AAAvC,MAAP;AACH,GARD;;AASA,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAIC,SAAJ;;AACA,QAAIvD,YAAJ,EAAkB;AACd,UAAMwD,cAAc,GAAG1F,eAAe,CAACkC,YAAY,CAACK,KAAb,GAAqBK,SAArB,CAA+B,CAA/B,EAAkC,IAAlC,EAAwC+C,OAAxC,CAAgD,CAAhD,EAAmDC,OAAnD,CAA2D,CAAC,CAA5D,CAAD,CAAtC;;AACA,UAAInE,uBAAuB,IAAI,EAACL,WAAD,YAACA,WAAW,CAAGsE,cAAH,CAAZ,CAA/B,EAA+D;AAC3DD,QAAAA,SAAS,GAAG,IAAZ;AACH;AACJ;;AACD,QAAMI,WAAW,GAAG3F,qBAAqB,CAACG,cAAD,EAAiBI,KAAjB,CAAzC;AACA,QAAMqF,GAAG,GAAGvE,YAAY,GAAGwE,SAAH,GAAe3D,MAAvC;AACA,QAAM4D,YAAY,GAAGzE,YAArB;AACA,QAAM0E,eAAe,GAAG1E,YAAY,GAAGyE,YAAH,GAAkB3F,cAAtD;AACA,WAAQ,KAAC,eAAD,kCAAqBwF,WAArB;AAAkC,MAAA,MAAM,EAAEnE,MAA1C;AAAkD,MAAA,KAAK,EAAEF,WAAzD;AAAsE,MAAA,GAAG,EAAEsE,GAA3E;AAAgF,MAAA,KAAK,EAAE5D,YAAvF;AAAqG,MAAA,QAAQ,EAAEQ,QAA/G;AAAyH,MAAA,uBAAuB,EAAE+C;AAAlJ,OAAR;AACH,GAbD;;AAcA,MAAMS,gBAAgB,GAAGvE,iBAAiB,GAAGpC,iBAAH,GAAuB4G,IAAjE;AACA,MAAMC,UAAU,GAAG;AACf3C,IAAAA,OAAO,EAAE,iBAAC4C,SAAD;AAAA,aAAe5C,QAAO,CAAC4C,SAAD,CAAtB;AAAA;AADM,GAAnB;AAGA,MAAMC,YAAY,GAAG3E,iBAAiB,GAAGyE,UAAH,GAAgBL,SAAtD;AACA,SAAQ,KAAC,gBAAD,kCAAsBO,YAAtB;AAAA,cACN,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACrE,KAAK,CAACtB,OAAN,CAAc4F,SAAf,EAA0BvE,UAA1B,CAAb;AAAoD,MAAA,2BAA2B,EAAEJ,2BAAjF;AACD,MAAA,yBAAyB,EAAEC,yBAD1B;AAAA,iBAGG2D,YAAY,EAHf,EAIGL,WAAW,EAJd;AAAA;AADM,KAAR;AAQH,CA7ID;;AA8IA,eAAe3E,QAAf;AACAA,QAAQ,CAACgG,WAAT,GAAuB,UAAvB;AACAhG,QAAQ,CAACiG,SAAT,iDACOpG,cAAc,CAACoG,SADtB,GAEOnG,GAAG,CAACmG,SAFX;AAGI7F,EAAAA,KAAK,EAAE5B,SAAS,CAAC0H,MAHrB;AAIIrF,EAAAA,QAAQ,EAAErC,SAAS,CAAC2H,MAJxB;AAKIlF,EAAAA,uBAAuB,EAAEzC,SAAS,CAAC4H,IALvC;AAMI7B,EAAAA,eAAe,EAAE/F,SAAS,CAAC4H,IAN/B;AAOI3E,EAAAA,KAAK,EAAEjD,SAAS,CAAC6H,SAAV,CAAoB,CAAC7H,SAAS,CAAC0H,MAAX,EAAmB1H,SAAS,CAAC8H,KAA7B,EAAoC9H,SAAS,CAAC2H,MAA9C,CAApB,CAPX;AAQIhG,EAAAA,OAAO,EAAE3B,SAAS,CAAC+H,MARvB;AASIrG,EAAAA,WAAW,EAAE1B,SAAS,CAAC+H,MAT3B;AAUIhG,EAAAA,OAAO,EAAE/B,SAAS,CAAC+H,MAVvB;AAWI/F,EAAAA,OAAO,EAAEhC,SAAS,CAAC+H,MAXvB;AAYI3F,EAAAA,WAAW,EAAEpC,SAAS,CAAC0H,MAZ3B;AAaIvF,EAAAA,aAAa,EAAEnC,SAAS,CAAC4H,IAb7B;AAcItF,EAAAA,YAAY,EAAEtC,SAAS,CAAC4H,IAd5B;AAeI3F,EAAAA,UAAU,EAAEjC,SAAS,CAACgI,IAf1B;AAgBI9F,EAAAA,cAAc,EAAElC,SAAS,CAACgI,IAhB9B;AAiBIlF,EAAAA,aAAa,EAAE9C,SAAS,CAACgI,IAjB7B;AAkBIjF,EAAAA,qBAAqB,EAAE/C,SAAS,CAACgI,IAlBrC;AAmBInG,EAAAA,kBAAkB,EAAE7B,SAAS,CAAC4H,IAnBlC;AAoBIjF,EAAAA,iBAAiB,EAAE3C,SAAS,CAAC4H,IApBjC;AAqBIK,EAAAA,iBAAiB,EAAEjI,SAAS,CAAC4H,IArBjC;AAsBIpF,EAAAA,WAAW,EAAExC,SAAS,CAAC6H,SAAV,CAAoB,CAAC7H,SAAS,CAAC0H,MAAX,EAAmB1H,SAAS,CAAC2H,MAA7B,EAAqC3H,SAAS,CAAC8H,KAA/C,CAApB,CAtBjB;AAuBIvF,EAAAA,YAAY,EAAEvC,SAAS,CAACkI,GAvB5B;AAwBIpG,EAAAA,wBAAwB,EAAE9B,SAAS,CAAC4H;AAxBxC;AA0BApG,QAAQ,CAAC2G,YAAT,GAAwB;AACpBxF,EAAAA,iBAAiB,EAAE;AADC,CAAxB","sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport { View } from 'react-native';\n// @ts-expect-error\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport constants from '../commons/constants';\nimport { page, isGTE, isLTE, sameMonth } from '../dateutils';\nimport { xdateToData, parseDate, toMarkingFormat } from '../interface';\nimport { getState } from '../day-state-manager';\nimport { extractComponentProps } from '../componentUpdater';\n// @ts-expect-error\nimport { WEEK_NUMBER } from '../testIDs';\nimport styleConstructor from './style';\nimport CalendarHeader from './header';\nimport Day from './day/index';\nimport BasicDay from './day/basic';\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar.gif\n */\nconst Calendar = (props) => {\n    const { initialDate, current, theme, disableMonthChange, allowSelectionOutOfRange, minDate, maxDate, onDayPress, onDayLongPress, hideExtraDays, markedDates, firstDay, showSixWeeks, customHeader, headerStyle, displayLoadingIndicator, testID, enableSwipeMonths, accessibilityElementsHidden, importantForAccessibility, onMonthChange, onVisibleMonthsChange, style: propsStyle } = props;\n    const [currentMonth, setCurrentMonth] = useState(current || initialDate ? parseDate(current || initialDate) : new XDate());\n    const style = useRef(styleConstructor(theme));\n    const header = useRef();\n    const isMounted = useRef(false);\n    useEffect(() => {\n        if (initialDate) {\n            setCurrentMonth(parseDate(initialDate));\n        }\n    }, [initialDate]);\n    useEffect(() => {\n        if (isMounted.current) {\n            // Avoid callbacks call on mount\n            const _currentMonth = currentMonth.clone();\n            onMonthChange?.(xdateToData(_currentMonth));\n            onVisibleMonthsChange?.([xdateToData(_currentMonth)]);\n        }\n        else {\n            isMounted.current = true;\n        }\n    }, [currentMonth]);\n    const updateMonth = (newMonth) => {\n        if (sameMonth(newMonth, currentMonth)) {\n            return;\n        }\n        setCurrentMonth(newMonth);\n    };\n    const addMonth = useCallback((count) => {\n        const newMonth = currentMonth.clone().addMonths(count, true);\n        updateMonth(newMonth);\n    }, [currentMonth, updateMonth]);\n    const handleDayInteraction = useCallback((date, interaction) => {\n        const day = parseDate(date);\n        const min = parseDate(minDate);\n        const max = parseDate(maxDate);\n        if (allowSelectionOutOfRange || !(min && !isGTE(day, min)) && !(max && !isLTE(day, max))) {\n            if (!disableMonthChange) {\n                updateMonth(day);\n            }\n            if (interaction) {\n                interaction(date);\n            }\n        }\n    }, [minDate, maxDate, allowSelectionOutOfRange, disableMonthChange, updateMonth]);\n    const onPressDay = useCallback((date) => {\n        if (date)\n            handleDayInteraction(date, onDayPress);\n    }, [handleDayInteraction, onDayPress]);\n    const onLongPressDay = useCallback((date) => {\n        if (date)\n            handleDayInteraction(date, onDayLongPress);\n    }, [handleDayInteraction, onDayLongPress]);\n    const onSwipeLeft = useCallback(() => {\n        // @ts-expect-error\n        header.current?.onPressRight();\n    }, [header]);\n    const onSwipeRight = useCallback(() => {\n        // @ts-expect-error\n        header.current?.onPressLeft();\n    }, [header]);\n    const onSwipe = useCallback((gestureName) => {\n        const { SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT } = swipeDirections;\n        switch (gestureName) {\n            case SWIPE_UP:\n            case SWIPE_DOWN:\n                break;\n            case SWIPE_LEFT:\n                constants.isRTL ? onSwipeRight() : onSwipeLeft();\n                break;\n            case SWIPE_RIGHT:\n                constants.isRTL ? onSwipeLeft() : onSwipeRight();\n                break;\n        }\n    }, [onSwipeLeft, onSwipeRight]);\n    const renderWeekNumber = (weekNumber) => {\n        return (<View style={style.current.dayContainer} key={`week-container-${weekNumber}`}>\n        <BasicDay key={`week-${weekNumber}`} marking={{ disabled: true, disableTouchEvent: true }} \n        // state='disabled'\n        theme={theme} testID={`${WEEK_NUMBER}-${weekNumber}`}>\n          {weekNumber}\n        </BasicDay>\n      </View>);\n    };\n    const renderDay = (day, id) => {\n        const dayProps = extractComponentProps(Day, props);\n        if (!sameMonth(day, currentMonth) && hideExtraDays) {\n            return <View key={id} style={style.current.emptyDayContainer}/>;\n        }\n        return (<View style={style.current.dayContainer} key={id}>\n        <Day {...dayProps} date={toMarkingFormat(day)} state={getState(day, currentMonth, props)} marking={markedDates?.[toMarkingFormat(day)]} onPress={onPressDay} onLongPress={onLongPressDay}/>\n      </View>);\n    };\n    const renderWeek = (days, id) => {\n        const week = [];\n        days.forEach((day, id2) => {\n            week.push(renderDay(day, id2));\n        }, this);\n        if (props.showWeekNumbers) {\n            week.unshift(renderWeekNumber(days[days.length - 1].getWeek()));\n        }\n        return (<View style={style.current.week} key={id}>\n        {week}\n      </View>);\n    };\n    const renderMonth = () => {\n        const shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n        const days = page(currentMonth, firstDay, shouldShowSixWeeks);\n        const weeks = [];\n        while (days.length) {\n            weeks.push(renderWeek(days.splice(0, 7), weeks.length));\n        }\n        return <View style={style.current.monthView}>{weeks}</View>;\n    };\n    const renderHeader = () => {\n        let indicator;\n        if (currentMonth) {\n            const lastMonthOfDay = toMarkingFormat(currentMonth.clone().addMonths(1, true).setDate(1).addDays(-1));\n            if (displayLoadingIndicator && !markedDates?.[lastMonthOfDay]) {\n                indicator = true;\n            }\n        }\n        const headerProps = extractComponentProps(CalendarHeader, props);\n        const ref = customHeader ? undefined : header;\n        const CustomHeader = customHeader;\n        const HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n        return (<HeaderComponent {...headerProps} testID={testID} style={headerStyle} ref={ref} month={currentMonth} addMonth={addMonth} displayLoadingIndicator={indicator}/>);\n    };\n    const GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n    const swipeProps = {\n        onSwipe: (direction) => onSwipe(direction)\n    };\n    const gestureProps = enableSwipeMonths ? swipeProps : undefined;\n    return (<GestureComponent {...gestureProps}>\n      <View style={[style.current.container, propsStyle]} accessibilityElementsHidden={accessibilityElementsHidden} // iOS\n     importantForAccessibility={importantForAccessibility} // Android\n    >\n        {renderHeader()}\n        {renderMonth()}\n      </View>\n    </GestureComponent>);\n};\nexport default Calendar;\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = {\n    ...CalendarHeader.propTypes,\n    ...Day.propTypes,\n    theme: PropTypes.object,\n    firstDay: PropTypes.number,\n    displayLoadingIndicator: PropTypes.bool,\n    showWeekNumbers: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n    current: PropTypes.string,\n    initialDate: PropTypes.string,\n    minDate: PropTypes.string,\n    maxDate: PropTypes.string,\n    markedDates: PropTypes.object,\n    hideExtraDays: PropTypes.bool,\n    showSixWeeks: PropTypes.bool,\n    onDayPress: PropTypes.func,\n    onDayLongPress: PropTypes.func,\n    onMonthChange: PropTypes.func,\n    onVisibleMonthsChange: PropTypes.func,\n    disableMonthChange: PropTypes.bool,\n    enableSwipeMonths: PropTypes.bool,\n    disabledByDefault: PropTypes.bool,\n    headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    customHeader: PropTypes.any,\n    allowSelectionOutOfRange: PropTypes.bool\n};\nCalendar.defaultProps = {\n    enableSwipeMonths: false\n};\n"]},"metadata":{},"sourceType":"module"}